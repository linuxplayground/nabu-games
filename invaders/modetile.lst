# File modetile.asm
0000			        org     100h 
0100			 
0100 ed 73 8a 0c	        ld      (OldSP),sp                      ; save old Stack poitner 
0104 31 cc 0c		        ld      sp, Stack                       ; set up Stack 
0107			 
0107 cd 8a 09		        call    TmsSetWait                      ; set VDP wait loop based on clock multiple 
010a			 
010a cd 95 09		        call    TmsProbe                        ; find what port TMS9918A listens on 
010d ca 6f 01		        jp      z, NoTms 
0110			 
0110 cd 7e 0a		        call    TmsTile                         ; Set up bitmap graphics mode. 
0113			 
0113			        ; load font. 
0113 21 78 01		        ld      hl,TmsFont 
0116 ed 5b 80 09	        ld      de,(TmsPatternAddr) 
011a 01 00 08		        ld      bc,TmsFontLen 
011d cd 82 0b		        call    TmsWrite 
0120			 
0120			        ; Set background to dark yellow 
0120 3e 0a		        ld      a,TmsDarkYellow 
0122 cd ef 09		        call    TmsBackground 
0125			 
0125			        ; load all colours to Dark Red on Black 
0125 3e 61		        ld      a,(TmsDarkRed<<4)|TmsBlack 
0127 ed 5b 7e 09	        ld      de,(TmsColorAddr) 
012b 01 00 03		        ld      bc,0x300 
012e cd 91 0b		        call    TmsFill 
0131			 
0131			        ; Load all name cells to be 00 
0131 3e 00		        ld      a,0x00 
0133 ed 5b 7c 09	        ld      de,(TmsNameAddr) 
0137 01 00 03		        ld      bc,0x300 
013a cd 91 0b		        call    TmsFill 
013d			 
013d			        ; test set cursor 
013d 3e 10		        ld      a,16 
013f 1e 0c		        ld      e,12 
0141 cd ca 0b		        call    TmsTilePos 
0144			        ; test write a char. 
0144 3e 41		        ld      a,'A' 
0146 cd d3 09		        call    TmsChrOut 
0149			Exit: 
0149 cd 83 0c		        call    getchar 
014c ed 7b 8a 0c	        ld      sp, (OldSP) 
0150 c7			        rst     0 
0151			 
0151			NoTmsMessage: 
0151 ..			        defb    "TMS9918A not found, aborting!$" 
016f 11 51 01		NoTms:  ld      de, NoTmsMessage 
0172 cd 75 0c		        call    strout 
0175 c3 49 01		        jp      Exit 
0178			TmsFont: 
0178			        include "TmsFont.asm" 
0178			; 6x8 bitmap font by Oleg Kosenkov 
0178			; Source: https://github.com/idispatch/raster-fonts/blob/master/font-6x8.c 
0178			 
0178			        ; code=0, hex=0x00, ascii="^@" 
0178 00			        defb %00000000 
0179 00			        defb %00000000 
017a 00			        defb %00000000 
017b 00			        defb %00000000 
017c 00			        defb %00000000 
017d 00			        defb %00000000 
017e 00			        defb %00000000 
017f 00			        defb %00000000 
0180			 
0180			        ; code=1, hex=0x01, ascii="^A" 
0180 38			        defb %00111000 
0181 44			        defb %01000100 
0182 6c			        defb %01101100 
0183 44			        defb %01000100 
0184 54			        defb %01010100 
0185 44			        defb %01000100 
0186 38			        defb %00111000 
0187 00			        defb %00000000 
0188			 
0188			        ; code=2, hex=0x02, ascii="^B" 
0188 38			        defb %00111000 
0189 7c			        defb %01111100 
018a 54			        defb %01010100 
018b 7c			        defb %01111100 
018c 44			        defb %01000100 
018d 7c			        defb %01111100 
018e 38			        defb %00111000 
018f 00			        defb %00000000 
0190			 
0190			        ; code=3, hex=0x03, ascii="^C" 
0190 00			        defb %00000000 
0191 28			        defb %00101000 
0192 7c			        defb %01111100 
0193 7c			        defb %01111100 
0194 7c			        defb %01111100 
0195 38			        defb %00111000 
0196 10			        defb %00010000 
0197 00			        defb %00000000 
0198			 
0198			        ; code=4, hex=0x04, ascii="^D" 
0198 00			        defb %00000000 
0199 10			        defb %00010000 
019a 38			        defb %00111000 
019b 7c			        defb %01111100 
019c 7c			        defb %01111100 
019d 38			        defb %00111000 
019e 10			        defb %00010000 
019f 00			        defb %00000000 
01a0			 
01a0			        ; code=5, hex=0x05, ascii="^E" 
01a0 10			        defb %00010000 
01a1 38			        defb %00111000 
01a2 38			        defb %00111000 
01a3 10			        defb %00010000 
01a4 7c			        defb %01111100 
01a5 7c			        defb %01111100 
01a6 10			        defb %00010000 
01a7 00			        defb %00000000 
01a8			 
01a8			        ; code=6, hex=0x06, ascii="^F" 
01a8 00			        defb %00000000 
01a9 10			        defb %00010000 
01aa 38			        defb %00111000 
01ab 7c			        defb %01111100 
01ac 7c			        defb %01111100 
01ad 10			        defb %00010000 
01ae 38			        defb %00111000 
01af 00			        defb %00000000 
01b0			 
01b0			        ; code=7, hex=0x07, ascii="^G" 
01b0 00			        defb %00000000 
01b1 00			        defb %00000000 
01b2 00			        defb %00000000 
01b3 30			        defb %00110000 
01b4 30			        defb %00110000 
01b5 00			        defb %00000000 
01b6 00			        defb %00000000 
01b7 00			        defb %00000000 
01b8			 
01b8			        ; code=8, hex=0x08, ascii="^H" 
01b8 fc			        defb %11111100 
01b9 fc			        defb %11111100 
01ba fc			        defb %11111100 
01bb cc			        defb %11001100 
01bc cc			        defb %11001100 
01bd fc			        defb %11111100 
01be fc			        defb %11111100 
01bf fc			        defb %11111100 
01c0			 
01c0			        ; code=9, hex=0x09, ascii="^I" 
01c0 00			        defb %00000000 
01c1 00			        defb %00000000 
01c2 78			        defb %01111000 
01c3 48			        defb %01001000 
01c4 48			        defb %01001000 
01c5 78			        defb %01111000 
01c6 00			        defb %00000000 
01c7 00			        defb %00000000 
01c8			 
01c8			        ; code=10, hex=0x0A, ascii="^J" 
01c8 fc			        defb %11111100 
01c9 fc			        defb %11111100 
01ca 84			        defb %10000100 
01cb b4			        defb %10110100 
01cc b4			        defb %10110100 
01cd 84			        defb %10000100 
01ce fc			        defb %11111100 
01cf fc			        defb %11111100 
01d0			 
01d0			        ; code=11, hex=0x0B, ascii="^K" 
01d0 00			        defb %00000000 
01d1 1c			        defb %00011100 
01d2 0c			        defb %00001100 
01d3 34			        defb %00110100 
01d4 48			        defb %01001000 
01d5 48			        defb %01001000 
01d6 30			        defb %00110000 
01d7 00			        defb %00000000 
01d8			 
01d8			        ; code=12, hex=0x0C, ascii="^L" 
01d8 38			        defb %00111000 
01d9 44			        defb %01000100 
01da 44			        defb %01000100 
01db 38			        defb %00111000 
01dc 10			        defb %00010000 
01dd 38			        defb %00111000 
01de 10			        defb %00010000 
01df 00			        defb %00000000 
01e0			 
01e0			        ; code=13, hex=0x0D, ascii="^M" 
01e0 10			        defb %00010000 
01e1 18			        defb %00011000 
01e2 14			        defb %00010100 
01e3 10			        defb %00010000 
01e4 30			        defb %00110000 
01e5 70			        defb %01110000 
01e6 60			        defb %01100000 
01e7 00			        defb %00000000 
01e8			 
01e8			        ; code=14, hex=0x0E, ascii="^N" 
01e8 0c			        defb %00001100 
01e9 34			        defb %00110100 
01ea 2c			        defb %00101100 
01eb 34			        defb %00110100 
01ec 2c			        defb %00101100 
01ed 6c			        defb %01101100 
01ee 60			        defb %01100000 
01ef 00			        defb %00000000 
01f0			 
01f0			        ; code=15, hex=0x0F, ascii="^O" 
01f0 00			        defb %00000000 
01f1 54			        defb %01010100 
01f2 38			        defb %00111000 
01f3 6c			        defb %01101100 
01f4 38			        defb %00111000 
01f5 54			        defb %01010100 
01f6 00			        defb %00000000 
01f7 00			        defb %00000000 
01f8			 
01f8			        ; code=16, hex=0x10, ascii="^P" 
01f8 20			        defb %00100000 
01f9 30			        defb %00110000 
01fa 38			        defb %00111000 
01fb 3c			        defb %00111100 
01fc 38			        defb %00111000 
01fd 30			        defb %00110000 
01fe 20			        defb %00100000 
01ff 00			        defb %00000000 
0200			 
0200			        ; code=17, hex=0x11, ascii="^Q" 
0200 08			        defb %00001000 
0201 18			        defb %00011000 
0202 38			        defb %00111000 
0203 78			        defb %01111000 
0204 38			        defb %00111000 
0205 18			        defb %00011000 
0206 08			        defb %00001000 
0207 00			        defb %00000000 
0208			 
0208			        ; code=18, hex=0x12, ascii="^R" 
0208 10			        defb %00010000 
0209 38			        defb %00111000 
020a 7c			        defb %01111100 
020b 10			        defb %00010000 
020c 7c			        defb %01111100 
020d 38			        defb %00111000 
020e 10			        defb %00010000 
020f 00			        defb %00000000 
0210			 
0210			        ; code=19, hex=0x13, ascii="^S" 
0210 28			        defb %00101000 
0211 28			        defb %00101000 
0212 28			        defb %00101000 
0213 28			        defb %00101000 
0214 28			        defb %00101000 
0215 00			        defb %00000000 
0216 28			        defb %00101000 
0217 00			        defb %00000000 
0218			 
0218			        ; code=20, hex=0x14, ascii="^T" 
0218 3c			        defb %00111100 
0219 54			        defb %01010100 
021a 54			        defb %01010100 
021b 34			        defb %00110100 
021c 14			        defb %00010100 
021d 14			        defb %00010100 
021e 14			        defb %00010100 
021f 00			        defb %00000000 
0220			 
0220			        ; code=21, hex=0x15, ascii="^U" 
0220 38			        defb %00111000 
0221 44			        defb %01000100 
0222 30			        defb %00110000 
0223 28			        defb %00101000 
0224 18			        defb %00011000 
0225 44			        defb %01000100 
0226 38			        defb %00111000 
0227 00			        defb %00000000 
0228			 
0228			        ; code=22, hex=0x16, ascii="^V" 
0228 00			        defb %00000000 
0229 00			        defb %00000000 
022a 00			        defb %00000000 
022b 00			        defb %00000000 
022c 00			        defb %00000000 
022d 78			        defb %01111000 
022e 78			        defb %01111000 
022f 00			        defb %00000000 
0230			 
0230			        ; code=23, hex=0x17, ascii="^W" 
0230 10			        defb %00010000 
0231 38			        defb %00111000 
0232 7c			        defb %01111100 
0233 10			        defb %00010000 
0234 7c			        defb %01111100 
0235 38			        defb %00111000 
0236 10			        defb %00010000 
0237 38			        defb %00111000 
0238			 
0238			        ; code=24, hex=0x18, ascii="^X" 
0238 10			        defb %00010000 
0239 38			        defb %00111000 
023a 7c			        defb %01111100 
023b 10			        defb %00010000 
023c 10			        defb %00010000 
023d 10			        defb %00010000 
023e 10			        defb %00010000 
023f 00			        defb %00000000 
0240			 
0240			        ; code=25, hex=0x19, ascii="^Y" 
0240 10			        defb %00010000 
0241 10			        defb %00010000 
0242 10			        defb %00010000 
0243 10			        defb %00010000 
0244 7c			        defb %01111100 
0245 38			        defb %00111000 
0246 10			        defb %00010000 
0247 00			        defb %00000000 
0248			 
0248			        ; code=26, hex=0x1A, ascii="^Z" 
0248 00			        defb %00000000 
0249 10			        defb %00010000 
024a 18			        defb %00011000 
024b 7c			        defb %01111100 
024c 18			        defb %00011000 
024d 10			        defb %00010000 
024e 00			        defb %00000000 
024f 00			        defb %00000000 
0250			 
0250			        ; code=27, hex=0x1B, ascii="^[" 
0250 00			        defb %00000000 
0251 10			        defb %00010000 
0252 30			        defb %00110000 
0253 7c			        defb %01111100 
0254 30			        defb %00110000 
0255 10			        defb %00010000 
0256 00			        defb %00000000 
0257 00			        defb %00000000 
0258			 
0258			        ; code=28, hex=0x1C, ascii="^\" 
0258 00			        defb %00000000 
0259 00			        defb %00000000 
025a 00			        defb %00000000 
025b 40			        defb %01000000 
025c 40			        defb %01000000 
025d 40			        defb %01000000 
025e 7c			        defb %01111100 
025f 00			        defb %00000000 
0260			 
0260			        ; code=29, hex=0x1D, ascii="^]" 
0260 00			        defb %00000000 
0261 28			        defb %00101000 
0262 28			        defb %00101000 
0263 7c			        defb %01111100 
0264 28			        defb %00101000 
0265 28			        defb %00101000 
0266 00			        defb %00000000 
0267 00			        defb %00000000 
0268			 
0268			        ; code=30, hex=0x1E, ascii="^^" 
0268 10			        defb %00010000 
0269 10			        defb %00010000 
026a 38			        defb %00111000 
026b 38			        defb %00111000 
026c 7c			        defb %01111100 
026d 7c			        defb %01111100 
026e 00			        defb %00000000 
026f 00			        defb %00000000 
0270			 
0270			        ; code=31, hex=0x1F, ascii="^_" 
0270 7c			        defb %01111100 
0271 7c			        defb %01111100 
0272 38			        defb %00111000 
0273 38			        defb %00111000 
0274 10			        defb %00010000 
0275 10			        defb %00010000 
0276 00			        defb %00000000 
0277 00			        defb %00000000 
0278			 
0278			        ; code=32, hex=0x20, ascii=" " 
0278 00			        defb %00000000 
0279 00			        defb %00000000 
027a 00			        defb %00000000 
027b 00			        defb %00000000 
027c 00			        defb %00000000 
027d 00			        defb %00000000 
027e 00			        defb %00000000 
027f 00			        defb %00000000 
0280			 
0280			        ; code=33, hex=0x21, ascii="!" 
0280 10			        defb %00010000 
0281 38			        defb %00111000 
0282 38			        defb %00111000 
0283 10			        defb %00010000 
0284 10			        defb %00010000 
0285 00			        defb %00000000 
0286 10			        defb %00010000 
0287 00			        defb %00000000 
0288			 
0288			        ; code=34, hex=0x22, ascii=""" 
0288 6c			        defb %01101100 
0289 6c			        defb %01101100 
028a 48			        defb %01001000 
028b 00			        defb %00000000 
028c 00			        defb %00000000 
028d 00			        defb %00000000 
028e 00			        defb %00000000 
028f 00			        defb %00000000 
0290			 
0290			        ; code=35, hex=0x23, ascii="#" 
0290 00			        defb %00000000 
0291 28			        defb %00101000 
0292 7c			        defb %01111100 
0293 28			        defb %00101000 
0294 28			        defb %00101000 
0295 7c			        defb %01111100 
0296 28			        defb %00101000 
0297 00			        defb %00000000 
0298			 
0298			        ; code=36, hex=0x24, ascii="$" 
0298 20			        defb %00100000 
0299 38			        defb %00111000 
029a 40			        defb %01000000 
029b 30			        defb %00110000 
029c 08			        defb %00001000 
029d 70			        defb %01110000 
029e 10			        defb %00010000 
029f 00			        defb %00000000 
02a0			 
02a0			        ; code=37, hex=0x25, ascii="%" 
02a0 64			        defb %01100100 
02a1 64			        defb %01100100 
02a2 08			        defb %00001000 
02a3 10			        defb %00010000 
02a4 20			        defb %00100000 
02a5 4c			        defb %01001100 
02a6 4c			        defb %01001100 
02a7 00			        defb %00000000 
02a8			 
02a8			        ; code=38, hex=0x26, ascii="&" 
02a8 20			        defb %00100000 
02a9 50			        defb %01010000 
02aa 50			        defb %01010000 
02ab 20			        defb %00100000 
02ac 54			        defb %01010100 
02ad 48			        defb %01001000 
02ae 34			        defb %00110100 
02af 00			        defb %00000000 
02b0			 
02b0			        ; code=39, hex=0x27, ascii="'" 
02b0 30			        defb %00110000 
02b1 30			        defb %00110000 
02b2 20			        defb %00100000 
02b3 00			        defb %00000000 
02b4 00			        defb %00000000 
02b5 00			        defb %00000000 
02b6 00			        defb %00000000 
02b7 00			        defb %00000000 
02b8			 
02b8			        ; code=40, hex=0x28, ascii="(" 
02b8 10			        defb %00010000 
02b9 20			        defb %00100000 
02ba 20			        defb %00100000 
02bb 20			        defb %00100000 
02bc 20			        defb %00100000 
02bd 20			        defb %00100000 
02be 10			        defb %00010000 
02bf 00			        defb %00000000 
02c0			 
02c0			        ; code=41, hex=0x29, ascii=")" 
02c0 20			        defb %00100000 
02c1 10			        defb %00010000 
02c2 10			        defb %00010000 
02c3 10			        defb %00010000 
02c4 10			        defb %00010000 
02c5 10			        defb %00010000 
02c6 20			        defb %00100000 
02c7 00			        defb %00000000 
02c8			 
02c8			        ; code=42, hex=0x2A, ascii="*" 
02c8 00			        defb %00000000 
02c9 28			        defb %00101000 
02ca 38			        defb %00111000 
02cb 7c			        defb %01111100 
02cc 38			        defb %00111000 
02cd 28			        defb %00101000 
02ce 00			        defb %00000000 
02cf 00			        defb %00000000 
02d0			 
02d0			        ; code=43, hex=0x2B, ascii="+" 
02d0 00			        defb %00000000 
02d1 10			        defb %00010000 
02d2 10			        defb %00010000 
02d3 7c			        defb %01111100 
02d4 10			        defb %00010000 
02d5 10			        defb %00010000 
02d6 00			        defb %00000000 
02d7 00			        defb %00000000 
02d8			 
02d8			        ; code=44, hex=0x2C, ascii="," 
02d8 00			        defb %00000000 
02d9 00			        defb %00000000 
02da 00			        defb %00000000 
02db 00			        defb %00000000 
02dc 00			        defb %00000000 
02dd 30			        defb %00110000 
02de 30			        defb %00110000 
02df 20			        defb %00100000 
02e0			 
02e0			        ; code=45, hex=0x2D, ascii="-" 
02e0 00			        defb %00000000 
02e1 00			        defb %00000000 
02e2 00			        defb %00000000 
02e3 7c			        defb %01111100 
02e4 00			        defb %00000000 
02e5 00			        defb %00000000 
02e6 00			        defb %00000000 
02e7 00			        defb %00000000 
02e8			 
02e8			        ; code=46, hex=0x2E, ascii="." 
02e8 00			        defb %00000000 
02e9 00			        defb %00000000 
02ea 00			        defb %00000000 
02eb 00			        defb %00000000 
02ec 00			        defb %00000000 
02ed 30			        defb %00110000 
02ee 30			        defb %00110000 
02ef 00			        defb %00000000 
02f0			 
02f0			        ; code=47, hex=0x2F, ascii="/" 
02f0 00			        defb %00000000 
02f1 04			        defb %00000100 
02f2 08			        defb %00001000 
02f3 10			        defb %00010000 
02f4 20			        defb %00100000 
02f5 40			        defb %01000000 
02f6 00			        defb %00000000 
02f7 00			        defb %00000000 
02f8			 
02f8			        ; code=48, hex=0x30, ascii="0" 
02f8 38			        defb %00111000 
02f9 44			        defb %01000100 
02fa 4c			        defb %01001100 
02fb 54			        defb %01010100 
02fc 64			        defb %01100100 
02fd 44			        defb %01000100 
02fe 38			        defb %00111000 
02ff 00			        defb %00000000 
0300			 
0300			        ; code=49, hex=0x31, ascii="1" 
0300 10			        defb %00010000 
0301 30			        defb %00110000 
0302 10			        defb %00010000 
0303 10			        defb %00010000 
0304 10			        defb %00010000 
0305 10			        defb %00010000 
0306 38			        defb %00111000 
0307 00			        defb %00000000 
0308			 
0308			        ; code=50, hex=0x32, ascii="2" 
0308 38			        defb %00111000 
0309 44			        defb %01000100 
030a 04			        defb %00000100 
030b 18			        defb %00011000 
030c 20			        defb %00100000 
030d 40			        defb %01000000 
030e 7c			        defb %01111100 
030f 00			        defb %00000000 
0310			 
0310			        ; code=51, hex=0x33, ascii="3" 
0310 38			        defb %00111000 
0311 44			        defb %01000100 
0312 04			        defb %00000100 
0313 38			        defb %00111000 
0314 04			        defb %00000100 
0315 44			        defb %01000100 
0316 38			        defb %00111000 
0317 00			        defb %00000000 
0318			 
0318			        ; code=52, hex=0x34, ascii="4" 
0318 08			        defb %00001000 
0319 18			        defb %00011000 
031a 28			        defb %00101000 
031b 48			        defb %01001000 
031c 7c			        defb %01111100 
031d 08			        defb %00001000 
031e 08			        defb %00001000 
031f 00			        defb %00000000 
0320			 
0320			        ; code=53, hex=0x35, ascii="5" 
0320 7c			        defb %01111100 
0321 40			        defb %01000000 
0322 40			        defb %01000000 
0323 78			        defb %01111000 
0324 04			        defb %00000100 
0325 44			        defb %01000100 
0326 38			        defb %00111000 
0327 00			        defb %00000000 
0328			 
0328			        ; code=54, hex=0x36, ascii="6" 
0328 18			        defb %00011000 
0329 20			        defb %00100000 
032a 40			        defb %01000000 
032b 78			        defb %01111000 
032c 44			        defb %01000100 
032d 44			        defb %01000100 
032e 38			        defb %00111000 
032f 00			        defb %00000000 
0330			 
0330			        ; code=55, hex=0x37, ascii="7" 
0330 7c			        defb %01111100 
0331 04			        defb %00000100 
0332 08			        defb %00001000 
0333 10			        defb %00010000 
0334 20			        defb %00100000 
0335 20			        defb %00100000 
0336 20			        defb %00100000 
0337 00			        defb %00000000 
0338			 
0338			        ; code=56, hex=0x38, ascii="8" 
0338 38			        defb %00111000 
0339 44			        defb %01000100 
033a 44			        defb %01000100 
033b 38			        defb %00111000 
033c 44			        defb %01000100 
033d 44			        defb %01000100 
033e 38			        defb %00111000 
033f 00			        defb %00000000 
0340			 
0340			        ; code=57, hex=0x39, ascii="9" 
0340 38			        defb %00111000 
0341 44			        defb %01000100 
0342 44			        defb %01000100 
0343 3c			        defb %00111100 
0344 04			        defb %00000100 
0345 08			        defb %00001000 
0346 30			        defb %00110000 
0347 00			        defb %00000000 
0348			 
0348			        ; code=58, hex=0x3A, ascii=":" 
0348 00			        defb %00000000 
0349 00			        defb %00000000 
034a 30			        defb %00110000 
034b 30			        defb %00110000 
034c 00			        defb %00000000 
034d 30			        defb %00110000 
034e 30			        defb %00110000 
034f 00			        defb %00000000 
0350			 
0350			        ; code=59, hex=0x3B, ascii=";" 
0350 00			        defb %00000000 
0351 00			        defb %00000000 
0352 30			        defb %00110000 
0353 30			        defb %00110000 
0354 00			        defb %00000000 
0355 30			        defb %00110000 
0356 30			        defb %00110000 
0357 20			        defb %00100000 
0358			 
0358			        ; code=60, hex=0x3C, ascii="<" 
0358 08			        defb %00001000 
0359 10			        defb %00010000 
035a 20			        defb %00100000 
035b 40			        defb %01000000 
035c 20			        defb %00100000 
035d 10			        defb %00010000 
035e 08			        defb %00001000 
035f 00			        defb %00000000 
0360			 
0360			        ; code=61, hex=0x3D, ascii="=" 
0360 00			        defb %00000000 
0361 00			        defb %00000000 
0362 7c			        defb %01111100 
0363 00			        defb %00000000 
0364 00			        defb %00000000 
0365 7c			        defb %01111100 
0366 00			        defb %00000000 
0367 00			        defb %00000000 
0368			 
0368			        ; code=62, hex=0x3E, ascii=">" 
0368 20			        defb %00100000 
0369 10			        defb %00010000 
036a 08			        defb %00001000 
036b 04			        defb %00000100 
036c 08			        defb %00001000 
036d 10			        defb %00010000 
036e 20			        defb %00100000 
036f 00			        defb %00000000 
0370			 
0370			        ; code=63, hex=0x3F, ascii="?" 
0370 38			        defb %00111000 
0371 44			        defb %01000100 
0372 04			        defb %00000100 
0373 18			        defb %00011000 
0374 10			        defb %00010000 
0375 00			        defb %00000000 
0376 10			        defb %00010000 
0377 00			        defb %00000000 
0378			 
0378			        ; code=64, hex=0x40, ascii="@" 
0378 38			        defb %00111000 
0379 44			        defb %01000100 
037a 5c			        defb %01011100 
037b 54			        defb %01010100 
037c 5c			        defb %01011100 
037d 40			        defb %01000000 
037e 38			        defb %00111000 
037f 00			        defb %00000000 
0380			 
0380			        ; code=65, hex=0x41, ascii="A" 
0380 38			        defb %00111000 
0381 44			        defb %01000100 
0382 44			        defb %01000100 
0383 44			        defb %01000100 
0384 7c			        defb %01111100 
0385 44			        defb %01000100 
0386 44			        defb %01000100 
0387 00			        defb %00000000 
0388			 
0388			        ; code=66, hex=0x42, ascii="B" 
0388 78			        defb %01111000 
0389 44			        defb %01000100 
038a 44			        defb %01000100 
038b 78			        defb %01111000 
038c 44			        defb %01000100 
038d 44			        defb %01000100 
038e 78			        defb %01111000 
038f 00			        defb %00000000 
0390			 
0390			        ; code=67, hex=0x43, ascii="C" 
0390 38			        defb %00111000 
0391 44			        defb %01000100 
0392 40			        defb %01000000 
0393 40			        defb %01000000 
0394 40			        defb %01000000 
0395 44			        defb %01000100 
0396 38			        defb %00111000 
0397 00			        defb %00000000 
0398			 
0398			        ; code=68, hex=0x44, ascii="D" 
0398 78			        defb %01111000 
0399 44			        defb %01000100 
039a 44			        defb %01000100 
039b 44			        defb %01000100 
039c 44			        defb %01000100 
039d 44			        defb %01000100 
039e 78			        defb %01111000 
039f 00			        defb %00000000 
03a0			 
03a0			        ; code=69, hex=0x45, ascii="E" 
03a0 7c			        defb %01111100 
03a1 40			        defb %01000000 
03a2 40			        defb %01000000 
03a3 78			        defb %01111000 
03a4 40			        defb %01000000 
03a5 40			        defb %01000000 
03a6 7c			        defb %01111100 
03a7 00			        defb %00000000 
03a8			 
03a8			        ; code=70, hex=0x46, ascii="F" 
03a8 7c			        defb %01111100 
03a9 40			        defb %01000000 
03aa 40			        defb %01000000 
03ab 78			        defb %01111000 
03ac 40			        defb %01000000 
03ad 40			        defb %01000000 
03ae 40			        defb %01000000 
03af 00			        defb %00000000 
03b0			 
03b0			        ; code=71, hex=0x47, ascii="G" 
03b0 38			        defb %00111000 
03b1 44			        defb %01000100 
03b2 40			        defb %01000000 
03b3 5c			        defb %01011100 
03b4 44			        defb %01000100 
03b5 44			        defb %01000100 
03b6 3c			        defb %00111100 
03b7 00			        defb %00000000 
03b8			 
03b8			        ; code=72, hex=0x48, ascii="H" 
03b8 44			        defb %01000100 
03b9 44			        defb %01000100 
03ba 44			        defb %01000100 
03bb 7c			        defb %01111100 
03bc 44			        defb %01000100 
03bd 44			        defb %01000100 
03be 44			        defb %01000100 
03bf 00			        defb %00000000 
03c0			 
03c0			        ; code=73, hex=0x49, ascii="I" 
03c0 38			        defb %00111000 
03c1 10			        defb %00010000 
03c2 10			        defb %00010000 
03c3 10			        defb %00010000 
03c4 10			        defb %00010000 
03c5 10			        defb %00010000 
03c6 38			        defb %00111000 
03c7 00			        defb %00000000 
03c8			 
03c8			        ; code=74, hex=0x4A, ascii="J" 
03c8 04			        defb %00000100 
03c9 04			        defb %00000100 
03ca 04			        defb %00000100 
03cb 04			        defb %00000100 
03cc 44			        defb %01000100 
03cd 44			        defb %01000100 
03ce 38			        defb %00111000 
03cf 00			        defb %00000000 
03d0			 
03d0			        ; code=75, hex=0x4B, ascii="K" 
03d0 44			        defb %01000100 
03d1 48			        defb %01001000 
03d2 50			        defb %01010000 
03d3 60			        defb %01100000 
03d4 50			        defb %01010000 
03d5 48			        defb %01001000 
03d6 44			        defb %01000100 
03d7 00			        defb %00000000 
03d8			 
03d8			        ; code=76, hex=0x4C, ascii="L" 
03d8 40			        defb %01000000 
03d9 40			        defb %01000000 
03da 40			        defb %01000000 
03db 40			        defb %01000000 
03dc 40			        defb %01000000 
03dd 40			        defb %01000000 
03de 7c			        defb %01111100 
03df 00			        defb %00000000 
03e0			 
03e0			        ; code=77, hex=0x4D, ascii="M" 
03e0 44			        defb %01000100 
03e1 6c			        defb %01101100 
03e2 54			        defb %01010100 
03e3 44			        defb %01000100 
03e4 44			        defb %01000100 
03e5 44			        defb %01000100 
03e6 44			        defb %01000100 
03e7 00			        defb %00000000 
03e8			 
03e8			        ; code=78, hex=0x4E, ascii="N" 
03e8 44			        defb %01000100 
03e9 64			        defb %01100100 
03ea 54			        defb %01010100 
03eb 4c			        defb %01001100 
03ec 44			        defb %01000100 
03ed 44			        defb %01000100 
03ee 44			        defb %01000100 
03ef 00			        defb %00000000 
03f0			 
03f0			        ; code=79, hex=0x4F, ascii="O" 
03f0 38			        defb %00111000 
03f1 44			        defb %01000100 
03f2 44			        defb %01000100 
03f3 44			        defb %01000100 
03f4 44			        defb %01000100 
03f5 44			        defb %01000100 
03f6 38			        defb %00111000 
03f7 00			        defb %00000000 
03f8			 
03f8			        ; code=80, hex=0x50, ascii="P" 
03f8 78			        defb %01111000 
03f9 44			        defb %01000100 
03fa 44			        defb %01000100 
03fb 78			        defb %01111000 
03fc 40			        defb %01000000 
03fd 40			        defb %01000000 
03fe 40			        defb %01000000 
03ff 00			        defb %00000000 
0400			 
0400			        ; code=81, hex=0x51, ascii="Q" 
0400 38			        defb %00111000 
0401 44			        defb %01000100 
0402 44			        defb %01000100 
0403 44			        defb %01000100 
0404 54			        defb %01010100 
0405 48			        defb %01001000 
0406 34			        defb %00110100 
0407 00			        defb %00000000 
0408			 
0408			        ; code=82, hex=0x52, ascii="R" 
0408 78			        defb %01111000 
0409 44			        defb %01000100 
040a 44			        defb %01000100 
040b 78			        defb %01111000 
040c 48			        defb %01001000 
040d 44			        defb %01000100 
040e 44			        defb %01000100 
040f 00			        defb %00000000 
0410			 
0410			        ; code=83, hex=0x53, ascii="S" 
0410 38			        defb %00111000 
0411 44			        defb %01000100 
0412 40			        defb %01000000 
0413 38			        defb %00111000 
0414 04			        defb %00000100 
0415 44			        defb %01000100 
0416 38			        defb %00111000 
0417 00			        defb %00000000 
0418			 
0418			        ; code=84, hex=0x54, ascii="T" 
0418 7c			        defb %01111100 
0419 10			        defb %00010000 
041a 10			        defb %00010000 
041b 10			        defb %00010000 
041c 10			        defb %00010000 
041d 10			        defb %00010000 
041e 10			        defb %00010000 
041f 00			        defb %00000000 
0420			 
0420			        ; code=85, hex=0x55, ascii="U" 
0420 44			        defb %01000100 
0421 44			        defb %01000100 
0422 44			        defb %01000100 
0423 44			        defb %01000100 
0424 44			        defb %01000100 
0425 44			        defb %01000100 
0426 38			        defb %00111000 
0427 00			        defb %00000000 
0428			 
0428			        ; code=86, hex=0x56, ascii="V" 
0428 44			        defb %01000100 
0429 44			        defb %01000100 
042a 44			        defb %01000100 
042b 44			        defb %01000100 
042c 44			        defb %01000100 
042d 28			        defb %00101000 
042e 10			        defb %00010000 
042f 00			        defb %00000000 
0430			 
0430			        ; code=87, hex=0x57, ascii="W" 
0430 44			        defb %01000100 
0431 44			        defb %01000100 
0432 54			        defb %01010100 
0433 54			        defb %01010100 
0434 54			        defb %01010100 
0435 54			        defb %01010100 
0436 28			        defb %00101000 
0437 00			        defb %00000000 
0438			 
0438			        ; code=88, hex=0x58, ascii="X" 
0438 44			        defb %01000100 
0439 44			        defb %01000100 
043a 28			        defb %00101000 
043b 10			        defb %00010000 
043c 28			        defb %00101000 
043d 44			        defb %01000100 
043e 44			        defb %01000100 
043f 00			        defb %00000000 
0440			 
0440			        ; code=89, hex=0x59, ascii="Y" 
0440 44			        defb %01000100 
0441 44			        defb %01000100 
0442 44			        defb %01000100 
0443 28			        defb %00101000 
0444 10			        defb %00010000 
0445 10			        defb %00010000 
0446 10			        defb %00010000 
0447 00			        defb %00000000 
0448			 
0448			        ; code=90, hex=0x5A, ascii="Z" 
0448 78			        defb %01111000 
0449 08			        defb %00001000 
044a 10			        defb %00010000 
044b 20			        defb %00100000 
044c 40			        defb %01000000 
044d 40			        defb %01000000 
044e 78			        defb %01111000 
044f 00			        defb %00000000 
0450			 
0450			        ; code=91, hex=0x5B, ascii="[" 
0450 38			        defb %00111000 
0451 20			        defb %00100000 
0452 20			        defb %00100000 
0453 20			        defb %00100000 
0454 20			        defb %00100000 
0455 20			        defb %00100000 
0456 38			        defb %00111000 
0457 00			        defb %00000000 
0458			 
0458			        ; code=92, hex=0x5C, ascii="\" 
0458 00			        defb %00000000 
0459 40			        defb %01000000 
045a 20			        defb %00100000 
045b 10			        defb %00010000 
045c 08			        defb %00001000 
045d 04			        defb %00000100 
045e 00			        defb %00000000 
045f 00			        defb %00000000 
0460			 
0460			        ; code=93, hex=0x5D, ascii="]" 
0460 38			        defb %00111000 
0461 08			        defb %00001000 
0462 08			        defb %00001000 
0463 08			        defb %00001000 
0464 08			        defb %00001000 
0465 08			        defb %00001000 
0466 38			        defb %00111000 
0467 00			        defb %00000000 
0468			 
0468			        ; code=94, hex=0x5E, ascii="^" 
0468 10			        defb %00010000 
0469 28			        defb %00101000 
046a 44			        defb %01000100 
046b 00			        defb %00000000 
046c 00			        defb %00000000 
046d 00			        defb %00000000 
046e 00			        defb %00000000 
046f 00			        defb %00000000 
0470			 
0470			        ; code=95, hex=0x5F, ascii="_" 
0470 00			        defb %00000000 
0471 00			        defb %00000000 
0472 00			        defb %00000000 
0473 00			        defb %00000000 
0474 00			        defb %00000000 
0475 00			        defb %00000000 
0476 00			        defb %00000000 
0477 fc			        defb %11111100 
0478			 
0478			        ; code=96, hex=0x60, ascii="`" 
0478 30			        defb %00110000 
0479 30			        defb %00110000 
047a 10			        defb %00010000 
047b 00			        defb %00000000 
047c 00			        defb %00000000 
047d 00			        defb %00000000 
047e 00			        defb %00000000 
047f 00			        defb %00000000 
0480			 
0480			        ; code=97, hex=0x61, ascii="a" 
0480 00			        defb %00000000 
0481 00			        defb %00000000 
0482 38			        defb %00111000 
0483 04			        defb %00000100 
0484 3c			        defb %00111100 
0485 44			        defb %01000100 
0486 3c			        defb %00111100 
0487 00			        defb %00000000 
0488			 
0488			        ; code=98, hex=0x62, ascii="b" 
0488 40			        defb %01000000 
0489 40			        defb %01000000 
048a 78			        defb %01111000 
048b 44			        defb %01000100 
048c 44			        defb %01000100 
048d 44			        defb %01000100 
048e 78			        defb %01111000 
048f 00			        defb %00000000 
0490			 
0490			        ; code=99, hex=0x63, ascii="c" 
0490 00			        defb %00000000 
0491 00			        defb %00000000 
0492 38			        defb %00111000 
0493 44			        defb %01000100 
0494 40			        defb %01000000 
0495 44			        defb %01000100 
0496 38			        defb %00111000 
0497 00			        defb %00000000 
0498			 
0498			        ; code=100, hex=0x64, ascii="d" 
0498 04			        defb %00000100 
0499 04			        defb %00000100 
049a 3c			        defb %00111100 
049b 44			        defb %01000100 
049c 44			        defb %01000100 
049d 44			        defb %01000100 
049e 3c			        defb %00111100 
049f 00			        defb %00000000 
04a0			 
04a0			        ; code=101, hex=0x65, ascii="e" 
04a0 00			        defb %00000000 
04a1 00			        defb %00000000 
04a2 38			        defb %00111000 
04a3 44			        defb %01000100 
04a4 78			        defb %01111000 
04a5 40			        defb %01000000 
04a6 38			        defb %00111000 
04a7 00			        defb %00000000 
04a8			 
04a8			        ; code=102, hex=0x66, ascii="f" 
04a8 18			        defb %00011000 
04a9 20			        defb %00100000 
04aa 20			        defb %00100000 
04ab 78			        defb %01111000 
04ac 20			        defb %00100000 
04ad 20			        defb %00100000 
04ae 20			        defb %00100000 
04af 00			        defb %00000000 
04b0			 
04b0			        ; code=103, hex=0x67, ascii="g" 
04b0 00			        defb %00000000 
04b1 00			        defb %00000000 
04b2 3c			        defb %00111100 
04b3 44			        defb %01000100 
04b4 44			        defb %01000100 
04b5 3c			        defb %00111100 
04b6 04			        defb %00000100 
04b7 38			        defb %00111000 
04b8			 
04b8			        ; code=104, hex=0x68, ascii="h" 
04b8 40			        defb %01000000 
04b9 40			        defb %01000000 
04ba 70			        defb %01110000 
04bb 48			        defb %01001000 
04bc 48			        defb %01001000 
04bd 48			        defb %01001000 
04be 48			        defb %01001000 
04bf 00			        defb %00000000 
04c0			 
04c0			        ; code=105, hex=0x69, ascii="i" 
04c0 10			        defb %00010000 
04c1 00			        defb %00000000 
04c2 10			        defb %00010000 
04c3 10			        defb %00010000 
04c4 10			        defb %00010000 
04c5 10			        defb %00010000 
04c6 18			        defb %00011000 
04c7 00			        defb %00000000 
04c8			 
04c8			        ; code=106, hex=0x6A, ascii="j" 
04c8 08			        defb %00001000 
04c9 00			        defb %00000000 
04ca 18			        defb %00011000 
04cb 08			        defb %00001000 
04cc 08			        defb %00001000 
04cd 08			        defb %00001000 
04ce 48			        defb %01001000 
04cf 30			        defb %00110000 
04d0			 
04d0			        ; code=107, hex=0x6B, ascii="k" 
04d0 40			        defb %01000000 
04d1 40			        defb %01000000 
04d2 48			        defb %01001000 
04d3 50			        defb %01010000 
04d4 60			        defb %01100000 
04d5 50			        defb %01010000 
04d6 48			        defb %01001000 
04d7 00			        defb %00000000 
04d8			 
04d8			        ; code=108, hex=0x6C, ascii="l" 
04d8 10			        defb %00010000 
04d9 10			        defb %00010000 
04da 10			        defb %00010000 
04db 10			        defb %00010000 
04dc 10			        defb %00010000 
04dd 10			        defb %00010000 
04de 18			        defb %00011000 
04df 00			        defb %00000000 
04e0			 
04e0			        ; code=109, hex=0x6D, ascii="m" 
04e0 00			        defb %00000000 
04e1 00			        defb %00000000 
04e2 68			        defb %01101000 
04e3 54			        defb %01010100 
04e4 54			        defb %01010100 
04e5 44			        defb %01000100 
04e6 44			        defb %01000100 
04e7 00			        defb %00000000 
04e8			 
04e8			        ; code=110, hex=0x6E, ascii="n" 
04e8 00			        defb %00000000 
04e9 00			        defb %00000000 
04ea 70			        defb %01110000 
04eb 48			        defb %01001000 
04ec 48			        defb %01001000 
04ed 48			        defb %01001000 
04ee 48			        defb %01001000 
04ef 00			        defb %00000000 
04f0			 
04f0			        ; code=111, hex=0x6F, ascii="o" 
04f0 00			        defb %00000000 
04f1 00			        defb %00000000 
04f2 38			        defb %00111000 
04f3 44			        defb %01000100 
04f4 44			        defb %01000100 
04f5 44			        defb %01000100 
04f6 38			        defb %00111000 
04f7 00			        defb %00000000 
04f8			 
04f8			        ; code=112, hex=0x70, ascii="p" 
04f8 00			        defb %00000000 
04f9 00			        defb %00000000 
04fa 78			        defb %01111000 
04fb 44			        defb %01000100 
04fc 44			        defb %01000100 
04fd 44			        defb %01000100 
04fe 78			        defb %01111000 
04ff 40			        defb %01000000 
0500			 
0500			        ; code=113, hex=0x71, ascii="q" 
0500 00			        defb %00000000 
0501 00			        defb %00000000 
0502 3c			        defb %00111100 
0503 44			        defb %01000100 
0504 44			        defb %01000100 
0505 44			        defb %01000100 
0506 3c			        defb %00111100 
0507 04			        defb %00000100 
0508			 
0508			        ; code=114, hex=0x72, ascii="r" 
0508 00			        defb %00000000 
0509 00			        defb %00000000 
050a 58			        defb %01011000 
050b 24			        defb %00100100 
050c 20			        defb %00100000 
050d 20			        defb %00100000 
050e 70			        defb %01110000 
050f 00			        defb %00000000 
0510			 
0510			        ; code=115, hex=0x73, ascii="s" 
0510 00			        defb %00000000 
0511 00			        defb %00000000 
0512 38			        defb %00111000 
0513 40			        defb %01000000 
0514 38			        defb %00111000 
0515 04			        defb %00000100 
0516 38			        defb %00111000 
0517 00			        defb %00000000 
0518			 
0518			        ; code=116, hex=0x74, ascii="t" 
0518 00			        defb %00000000 
0519 20			        defb %00100000 
051a 78			        defb %01111000 
051b 20			        defb %00100000 
051c 20			        defb %00100000 
051d 28			        defb %00101000 
051e 10			        defb %00010000 
051f 00			        defb %00000000 
0520			 
0520			        ; code=117, hex=0x75, ascii="u" 
0520 00			        defb %00000000 
0521 00			        defb %00000000 
0522 48			        defb %01001000 
0523 48			        defb %01001000 
0524 48			        defb %01001000 
0525 58			        defb %01011000 
0526 28			        defb %00101000 
0527 00			        defb %00000000 
0528			 
0528			        ; code=118, hex=0x76, ascii="v" 
0528 00			        defb %00000000 
0529 00			        defb %00000000 
052a 44			        defb %01000100 
052b 44			        defb %01000100 
052c 44			        defb %01000100 
052d 28			        defb %00101000 
052e 10			        defb %00010000 
052f 00			        defb %00000000 
0530			 
0530			        ; code=119, hex=0x77, ascii="w" 
0530 00			        defb %00000000 
0531 00			        defb %00000000 
0532 44			        defb %01000100 
0533 44			        defb %01000100 
0534 54			        defb %01010100 
0535 7c			        defb %01111100 
0536 28			        defb %00101000 
0537 00			        defb %00000000 
0538			 
0538			        ; code=120, hex=0x78, ascii="x" 
0538 00			        defb %00000000 
0539 00			        defb %00000000 
053a 48			        defb %01001000 
053b 48			        defb %01001000 
053c 30			        defb %00110000 
053d 48			        defb %01001000 
053e 48			        defb %01001000 
053f 00			        defb %00000000 
0540			 
0540			        ; code=121, hex=0x79, ascii="y" 
0540 00			        defb %00000000 
0541 00			        defb %00000000 
0542 48			        defb %01001000 
0543 48			        defb %01001000 
0544 48			        defb %01001000 
0545 38			        defb %00111000 
0546 10			        defb %00010000 
0547 60			        defb %01100000 
0548			 
0548			        ; code=122, hex=0x7A, ascii="z" 
0548 00			        defb %00000000 
0549 00			        defb %00000000 
054a 78			        defb %01111000 
054b 08			        defb %00001000 
054c 30			        defb %00110000 
054d 40			        defb %01000000 
054e 78			        defb %01111000 
054f 00			        defb %00000000 
0550			 
0550			        ; code=123, hex=0x7B, ascii="{" 
0550 18			        defb %00011000 
0551 20			        defb %00100000 
0552 20			        defb %00100000 
0553 60			        defb %01100000 
0554 20			        defb %00100000 
0555 20			        defb %00100000 
0556 18			        defb %00011000 
0557 00			        defb %00000000 
0558			 
0558			        ; code=124, hex=0x7C, ascii="|" 
0558 10			        defb %00010000 
0559 10			        defb %00010000 
055a 10			        defb %00010000 
055b 00			        defb %00000000 
055c 10			        defb %00010000 
055d 10			        defb %00010000 
055e 10			        defb %00010000 
055f 00			        defb %00000000 
0560			 
0560			        ; code=125, hex=0x7D, ascii="}" 
0560 30			        defb %00110000 
0561 08			        defb %00001000 
0562 08			        defb %00001000 
0563 0c			        defb %00001100 
0564 08			        defb %00001000 
0565 08			        defb %00001000 
0566 30			        defb %00110000 
0567 00			        defb %00000000 
0568			 
0568			        ; code=126, hex=0x7E, ascii="~" 
0568 28			        defb %00101000 
0569 50			        defb %01010000 
056a 00			        defb %00000000 
056b 00			        defb %00000000 
056c 00			        defb %00000000 
056d 00			        defb %00000000 
056e 00			        defb %00000000 
056f 00			        defb %00000000 
0570			 
0570			        ; code=127, hex=0x7F, ascii="^?" 
0570 10			        defb %00010000 
0571 38			        defb %00111000 
0572 6c			        defb %01101100 
0573 44			        defb %01000100 
0574 44			        defb %01000100 
0575 7c			        defb %01111100 
0576 00			        defb %00000000 
0577 00			        defb %00000000 
0578			 
0578			        ; code=128, hex=0x80, ascii="!^@" 
0578 38			        defb %00111000 
0579 44			        defb %01000100 
057a 40			        defb %01000000 
057b 40			        defb %01000000 
057c 44			        defb %01000100 
057d 38			        defb %00111000 
057e 10			        defb %00010000 
057f 30			        defb %00110000 
0580			 
0580			        ; code=129, hex=0x81, ascii="!^A" 
0580 48			        defb %01001000 
0581 00			        defb %00000000 
0582 48			        defb %01001000 
0583 48			        defb %01001000 
0584 48			        defb %01001000 
0585 58			        defb %01011000 
0586 28			        defb %00101000 
0587 00			        defb %00000000 
0588			 
0588			        ; code=130, hex=0x82, ascii="!^B" 
0588 0c			        defb %00001100 
0589 00			        defb %00000000 
058a 38			        defb %00111000 
058b 44			        defb %01000100 
058c 78			        defb %01111000 
058d 40			        defb %01000000 
058e 38			        defb %00111000 
058f 00			        defb %00000000 
0590			 
0590			        ; code=131, hex=0x83, ascii="!^C" 
0590 38			        defb %00111000 
0591 00			        defb %00000000 
0592 38			        defb %00111000 
0593 04			        defb %00000100 
0594 3c			        defb %00111100 
0595 44			        defb %01000100 
0596 3c			        defb %00111100 
0597 00			        defb %00000000 
0598			 
0598			        ; code=132, hex=0x84, ascii="!^D" 
0598 28			        defb %00101000 
0599 00			        defb %00000000 
059a 38			        defb %00111000 
059b 04			        defb %00000100 
059c 3c			        defb %00111100 
059d 44			        defb %01000100 
059e 3c			        defb %00111100 
059f 00			        defb %00000000 
05a0			 
05a0			        ; code=133, hex=0x85, ascii="!^E" 
05a0 30			        defb %00110000 
05a1 00			        defb %00000000 
05a2 38			        defb %00111000 
05a3 04			        defb %00000100 
05a4 3c			        defb %00111100 
05a5 44			        defb %01000100 
05a6 3c			        defb %00111100 
05a7 00			        defb %00000000 
05a8			 
05a8			        ; code=134, hex=0x86, ascii="!^F" 
05a8 38			        defb %00111000 
05a9 28			        defb %00101000 
05aa 38			        defb %00111000 
05ab 04			        defb %00000100 
05ac 3c			        defb %00111100 
05ad 44			        defb %01000100 
05ae 3c			        defb %00111100 
05af 00			        defb %00000000 
05b0			 
05b0			        ; code=135, hex=0x87, ascii="!^G" 
05b0 00			        defb %00000000 
05b1 38			        defb %00111000 
05b2 44			        defb %01000100 
05b3 40			        defb %01000000 
05b4 44			        defb %01000100 
05b5 38			        defb %00111000 
05b6 10			        defb %00010000 
05b7 30			        defb %00110000 
05b8			 
05b8			        ; code=136, hex=0x88, ascii="!^H" 
05b8 38			        defb %00111000 
05b9 00			        defb %00000000 
05ba 38			        defb %00111000 
05bb 44			        defb %01000100 
05bc 78			        defb %01111000 
05bd 40			        defb %01000000 
05be 38			        defb %00111000 
05bf 00			        defb %00000000 
05c0			 
05c0			        ; code=137, hex=0x89, ascii="!^I" 
05c0 28			        defb %00101000 
05c1 00			        defb %00000000 
05c2 38			        defb %00111000 
05c3 44			        defb %01000100 
05c4 78			        defb %01111000 
05c5 40			        defb %01000000 
05c6 38			        defb %00111000 
05c7 00			        defb %00000000 
05c8			 
05c8			        ; code=138, hex=0x8A, ascii="!^J" 
05c8 30			        defb %00110000 
05c9 00			        defb %00000000 
05ca 38			        defb %00111000 
05cb 44			        defb %01000100 
05cc 78			        defb %01111000 
05cd 40			        defb %01000000 
05ce 38			        defb %00111000 
05cf 00			        defb %00000000 
05d0			 
05d0			        ; code=139, hex=0x8B, ascii="!^K" 
05d0 28			        defb %00101000 
05d1 00			        defb %00000000 
05d2 10			        defb %00010000 
05d3 10			        defb %00010000 
05d4 10			        defb %00010000 
05d5 10			        defb %00010000 
05d6 18			        defb %00011000 
05d7 00			        defb %00000000 
05d8			 
05d8			        ; code=140, hex=0x8C, ascii="!^L" 
05d8 10			        defb %00010000 
05d9 28			        defb %00101000 
05da 00			        defb %00000000 
05db 10			        defb %00010000 
05dc 10			        defb %00010000 
05dd 10			        defb %00010000 
05de 18			        defb %00011000 
05df 00			        defb %00000000 
05e0			 
05e0			        ; code=141, hex=0x8D, ascii="!^M" 
05e0 20			        defb %00100000 
05e1 00			        defb %00000000 
05e2 10			        defb %00010000 
05e3 10			        defb %00010000 
05e4 10			        defb %00010000 
05e5 10			        defb %00010000 
05e6 18			        defb %00011000 
05e7 00			        defb %00000000 
05e8			 
05e8			        ; code=142, hex=0x8E, ascii="!^N" 
05e8 28			        defb %00101000 
05e9 00			        defb %00000000 
05ea 10			        defb %00010000 
05eb 28			        defb %00101000 
05ec 44			        defb %01000100 
05ed 7c			        defb %01111100 
05ee 44			        defb %01000100 
05ef 00			        defb %00000000 
05f0			 
05f0			        ; code=143, hex=0x8F, ascii="!^O" 
05f0 38			        defb %00111000 
05f1 28			        defb %00101000 
05f2 38			        defb %00111000 
05f3 6c			        defb %01101100 
05f4 44			        defb %01000100 
05f5 7c			        defb %01111100 
05f6 44			        defb %01000100 
05f7 00			        defb %00000000 
05f8			 
05f8			        ; code=144, hex=0x90, ascii="!^P" 
05f8 0c			        defb %00001100 
05f9 00			        defb %00000000 
05fa 7c			        defb %01111100 
05fb 40			        defb %01000000 
05fc 78			        defb %01111000 
05fd 40			        defb %01000000 
05fe 7c			        defb %01111100 
05ff 00			        defb %00000000 
0600			 
0600			        ; code=145, hex=0x91, ascii="!^Q" 
0600 00			        defb %00000000 
0601 00			        defb %00000000 
0602 78			        defb %01111000 
0603 14			        defb %00010100 
0604 7c			        defb %01111100 
0605 50			        defb %01010000 
0606 3c			        defb %00111100 
0607 00			        defb %00000000 
0608			 
0608			        ; code=146, hex=0x92, ascii="!^R" 
0608 3c			        defb %00111100 
0609 50			        defb %01010000 
060a 50			        defb %01010000 
060b 7c			        defb %01111100 
060c 50			        defb %01010000 
060d 50			        defb %01010000 
060e 5c			        defb %01011100 
060f 00			        defb %00000000 
0610			 
0610			        ; code=147, hex=0x93, ascii="!^S" 
0610 38			        defb %00111000 
0611 00			        defb %00000000 
0612 30			        defb %00110000 
0613 48			        defb %01001000 
0614 48			        defb %01001000 
0615 48			        defb %01001000 
0616 30			        defb %00110000 
0617 00			        defb %00000000 
0618			 
0618			        ; code=148, hex=0x94, ascii="!^T" 
0618 28			        defb %00101000 
0619 00			        defb %00000000 
061a 30			        defb %00110000 
061b 48			        defb %01001000 
061c 48			        defb %01001000 
061d 48			        defb %01001000 
061e 30			        defb %00110000 
061f 00			        defb %00000000 
0620			 
0620			        ; code=149, hex=0x95, ascii="!^U" 
0620 60			        defb %01100000 
0621 00			        defb %00000000 
0622 30			        defb %00110000 
0623 48			        defb %01001000 
0624 48			        defb %01001000 
0625 48			        defb %01001000 
0626 30			        defb %00110000 
0627 00			        defb %00000000 
0628			 
0628			        ; code=150, hex=0x96, ascii="!^V" 
0628 38			        defb %00111000 
0629 00			        defb %00000000 
062a 48			        defb %01001000 
062b 48			        defb %01001000 
062c 48			        defb %01001000 
062d 58			        defb %01011000 
062e 28			        defb %00101000 
062f 00			        defb %00000000 
0630			 
0630			        ; code=151, hex=0x97, ascii="!^W" 
0630 60			        defb %01100000 
0631 00			        defb %00000000 
0632 48			        defb %01001000 
0633 48			        defb %01001000 
0634 48			        defb %01001000 
0635 58			        defb %01011000 
0636 28			        defb %00101000 
0637 00			        defb %00000000 
0638			 
0638			        ; code=152, hex=0x98, ascii="!^X" 
0638 28			        defb %00101000 
0639 00			        defb %00000000 
063a 48			        defb %01001000 
063b 48			        defb %01001000 
063c 48			        defb %01001000 
063d 38			        defb %00111000 
063e 10			        defb %00010000 
063f 60			        defb %01100000 
0640			 
0640			        ; code=153, hex=0x99, ascii="!^Y" 
0640 48			        defb %01001000 
0641 30			        defb %00110000 
0642 48			        defb %01001000 
0643 48			        defb %01001000 
0644 48			        defb %01001000 
0645 48			        defb %01001000 
0646 30			        defb %00110000 
0647 00			        defb %00000000 
0648			 
0648			        ; code=154, hex=0x9A, ascii="!^Z" 
0648 28			        defb %00101000 
0649 00			        defb %00000000 
064a 48			        defb %01001000 
064b 48			        defb %01001000 
064c 48			        defb %01001000 
064d 48			        defb %01001000 
064e 30			        defb %00110000 
064f 00			        defb %00000000 
0650			 
0650			        ; code=155, hex=0x9B, ascii="!^[" 
0650 00			        defb %00000000 
0651 10			        defb %00010000 
0652 38			        defb %00111000 
0653 40			        defb %01000000 
0654 40			        defb %01000000 
0655 38			        defb %00111000 
0656 10			        defb %00010000 
0657 00			        defb %00000000 
0658			 
0658			        ; code=156, hex=0x9C, ascii="!^\" 
0658 18			        defb %00011000 
0659 24			        defb %00100100 
065a 20			        defb %00100000 
065b 78			        defb %01111000 
065c 20			        defb %00100000 
065d 24			        defb %00100100 
065e 5c			        defb %01011100 
065f 00			        defb %00000000 
0660			 
0660			        ; code=157, hex=0x9D, ascii="!^]" 
0660 44			        defb %01000100 
0661 28			        defb %00101000 
0662 10			        defb %00010000 
0663 7c			        defb %01111100 
0664 10			        defb %00010000 
0665 7c			        defb %01111100 
0666 10			        defb %00010000 
0667 00			        defb %00000000 
0668			 
0668			        ; code=158, hex=0x9E, ascii="!^^" 
0668 60			        defb %01100000 
0669 50			        defb %01010000 
066a 50			        defb %01010000 
066b 68			        defb %01101000 
066c 5c			        defb %01011100 
066d 48			        defb %01001000 
066e 48			        defb %01001000 
066f 00			        defb %00000000 
0670			 
0670			        ; code=159, hex=0x9F, ascii="!^_" 
0670 08			        defb %00001000 
0671 14			        defb %00010100 
0672 10			        defb %00010000 
0673 38			        defb %00111000 
0674 10			        defb %00010000 
0675 10			        defb %00010000 
0676 50			        defb %01010000 
0677 20			        defb %00100000 
0678			 
0678			        ; code=160, hex=0xA0, ascii="! " 
0678 18			        defb %00011000 
0679 00			        defb %00000000 
067a 38			        defb %00111000 
067b 04			        defb %00000100 
067c 3c			        defb %00111100 
067d 44			        defb %01000100 
067e 3c			        defb %00111100 
067f 00			        defb %00000000 
0680			 
0680			        ; code=161, hex=0xA1, ascii="!!" 
0680 18			        defb %00011000 
0681 00			        defb %00000000 
0682 10			        defb %00010000 
0683 10			        defb %00010000 
0684 10			        defb %00010000 
0685 10			        defb %00010000 
0686 18			        defb %00011000 
0687 00			        defb %00000000 
0688			 
0688			        ; code=162, hex=0xA2, ascii="!"" 
0688 18			        defb %00011000 
0689 00			        defb %00000000 
068a 30			        defb %00110000 
068b 48			        defb %01001000 
068c 48			        defb %01001000 
068d 48			        defb %01001000 
068e 30			        defb %00110000 
068f 00			        defb %00000000 
0690			 
0690			        ; code=163, hex=0xA3, ascii="!#" 
0690 18			        defb %00011000 
0691 00			        defb %00000000 
0692 48			        defb %01001000 
0693 48			        defb %01001000 
0694 48			        defb %01001000 
0695 58			        defb %01011000 
0696 28			        defb %00101000 
0697 00			        defb %00000000 
0698			 
0698			        ; code=164, hex=0xA4, ascii="!$" 
0698 28			        defb %00101000 
0699 50			        defb %01010000 
069a 00			        defb %00000000 
069b 70			        defb %01110000 
069c 48			        defb %01001000 
069d 48			        defb %01001000 
069e 48			        defb %01001000 
069f 00			        defb %00000000 
06a0			 
06a0			        ; code=165, hex=0xA5, ascii="!%" 
06a0 28			        defb %00101000 
06a1 50			        defb %01010000 
06a2 00			        defb %00000000 
06a3 48			        defb %01001000 
06a4 68			        defb %01101000 
06a5 58			        defb %01011000 
06a6 48			        defb %01001000 
06a7 00			        defb %00000000 
06a8			 
06a8			        ; code=166, hex=0xA6, ascii="!&" 
06a8 38			        defb %00111000 
06a9 04			        defb %00000100 
06aa 3c			        defb %00111100 
06ab 44			        defb %01000100 
06ac 3c			        defb %00111100 
06ad 00			        defb %00000000 
06ae 3c			        defb %00111100 
06af 00			        defb %00000000 
06b0			 
06b0			        ; code=167, hex=0xA7, ascii="!'" 
06b0 30			        defb %00110000 
06b1 48			        defb %01001000 
06b2 48			        defb %01001000 
06b3 48			        defb %01001000 
06b4 30			        defb %00110000 
06b5 00			        defb %00000000 
06b6 78			        defb %01111000 
06b7 00			        defb %00000000 
06b8			 
06b8			        ; code=168, hex=0xA8, ascii="!(" 
06b8 10			        defb %00010000 
06b9 00			        defb %00000000 
06ba 10			        defb %00010000 
06bb 30			        defb %00110000 
06bc 40			        defb %01000000 
06bd 44			        defb %01000100 
06be 38			        defb %00111000 
06bf 00			        defb %00000000 
06c0			 
06c0			        ; code=169, hex=0xA9, ascii="!)" 
06c0 00			        defb %00000000 
06c1 00			        defb %00000000 
06c2 7c			        defb %01111100 
06c3 40			        defb %01000000 
06c4 40			        defb %01000000 
06c5 40			        defb %01000000 
06c6 00			        defb %00000000 
06c7 00			        defb %00000000 
06c8			 
06c8			        ; code=170, hex=0xAA, ascii="!*" 
06c8 00			        defb %00000000 
06c9 00			        defb %00000000 
06ca fc			        defb %11111100 
06cb 04			        defb %00000100 
06cc 04			        defb %00000100 
06cd 00			        defb %00000000 
06ce 00			        defb %00000000 
06cf 00			        defb %00000000 
06d0			 
06d0			        ; code=171, hex=0xAB, ascii="!+" 
06d0 40			        defb %01000000 
06d1 48			        defb %01001000 
06d2 50			        defb %01010000 
06d3 38			        defb %00111000 
06d4 44			        defb %01000100 
06d5 08			        defb %00001000 
06d6 1c			        defb %00011100 
06d7 00			        defb %00000000 
06d8			 
06d8			        ; code=172, hex=0xAC, ascii="!," 
06d8 40			        defb %01000000 
06d9 48			        defb %01001000 
06da 50			        defb %01010000 
06db 2c			        defb %00101100 
06dc 54			        defb %01010100 
06dd 1c			        defb %00011100 
06de 04			        defb %00000100 
06df 00			        defb %00000000 
06e0			 
06e0			        ; code=173, hex=0xAD, ascii="!-" 
06e0 10			        defb %00010000 
06e1 00			        defb %00000000 
06e2 10			        defb %00010000 
06e3 10			        defb %00010000 
06e4 38			        defb %00111000 
06e5 38			        defb %00111000 
06e6 10			        defb %00010000 
06e7 00			        defb %00000000 
06e8			 
06e8			        ; code=174, hex=0xAE, ascii="!." 
06e8 00			        defb %00000000 
06e9 00			        defb %00000000 
06ea 24			        defb %00100100 
06eb 48			        defb %01001000 
06ec 24			        defb %00100100 
06ed 00			        defb %00000000 
06ee 00			        defb %00000000 
06ef 00			        defb %00000000 
06f0			 
06f0			        ; code=175, hex=0xAF, ascii="!/" 
06f0 00			        defb %00000000 
06f1 00			        defb %00000000 
06f2 48			        defb %01001000 
06f3 24			        defb %00100100 
06f4 48			        defb %01001000 
06f5 00			        defb %00000000 
06f6 00			        defb %00000000 
06f7 00			        defb %00000000 
06f8			 
06f8			        ; code=176, hex=0xB0, ascii="!0" 
06f8 54			        defb %01010100 
06f9 00			        defb %00000000 
06fa a8			        defb %10101000 
06fb 00			        defb %00000000 
06fc 54			        defb %01010100 
06fd 00			        defb %00000000 
06fe a8			        defb %10101000 
06ff 00			        defb %00000000 
0700			 
0700			        ; code=177, hex=0xB1, ascii="!1" 
0700 54			        defb %01010100 
0701 a8			        defb %10101000 
0702 54			        defb %01010100 
0703 a8			        defb %10101000 
0704 54			        defb %01010100 
0705 a8			        defb %10101000 
0706 54			        defb %01010100 
0707 a8			        defb %10101000 
0708			 
0708			        ; code=178, hex=0xB2, ascii="!2" 
0708 a8			        defb %10101000 
0709 fc			        defb %11111100 
070a 54			        defb %01010100 
070b fc			        defb %11111100 
070c a8			        defb %10101000 
070d fc			        defb %11111100 
070e 54			        defb %01010100 
070f fc			        defb %11111100 
0710			 
0710			        ; code=179, hex=0xB3, ascii="!3" 
0710 10			        defb %00010000 
0711 10			        defb %00010000 
0712 10			        defb %00010000 
0713 10			        defb %00010000 
0714 10			        defb %00010000 
0715 10			        defb %00010000 
0716 10			        defb %00010000 
0717 10			        defb %00010000 
0718			 
0718			        ; code=180, hex=0xB4, ascii="!4" 
0718 10			        defb %00010000 
0719 10			        defb %00010000 
071a 10			        defb %00010000 
071b f0			        defb %11110000 
071c 10			        defb %00010000 
071d 10			        defb %00010000 
071e 10			        defb %00010000 
071f 10			        defb %00010000 
0720			 
0720			        ; code=181, hex=0xB5, ascii="!5" 
0720 10			        defb %00010000 
0721 f0			        defb %11110000 
0722 10			        defb %00010000 
0723 f0			        defb %11110000 
0724 10			        defb %00010000 
0725 10			        defb %00010000 
0726 10			        defb %00010000 
0727 10			        defb %00010000 
0728			 
0728			        ; code=182, hex=0xB6, ascii="!6" 
0728 50			        defb %01010000 
0729 50			        defb %01010000 
072a 50			        defb %01010000 
072b d0			        defb %11010000 
072c 50			        defb %01010000 
072d 50			        defb %01010000 
072e 50			        defb %01010000 
072f 50			        defb %01010000 
0730			 
0730			        ; code=183, hex=0xB7, ascii="!7" 
0730 00			        defb %00000000 
0731 00			        defb %00000000 
0732 00			        defb %00000000 
0733 f0			        defb %11110000 
0734 50			        defb %01010000 
0735 50			        defb %01010000 
0736 50			        defb %01010000 
0737 50			        defb %01010000 
0738			 
0738			        ; code=184, hex=0xB8, ascii="!8" 
0738 00			        defb %00000000 
0739 f0			        defb %11110000 
073a 10			        defb %00010000 
073b f0			        defb %11110000 
073c 10			        defb %00010000 
073d 10			        defb %00010000 
073e 10			        defb %00010000 
073f 10			        defb %00010000 
0740			 
0740			        ; code=185, hex=0xB9, ascii="!9" 
0740 50			        defb %01010000 
0741 d0			        defb %11010000 
0742 10			        defb %00010000 
0743 d0			        defb %11010000 
0744 50			        defb %01010000 
0745 50			        defb %01010000 
0746 50			        defb %01010000 
0747 50			        defb %01010000 
0748			 
0748			        ; code=186, hex=0xBA, ascii="!:" 
0748 50			        defb %01010000 
0749 50			        defb %01010000 
074a 50			        defb %01010000 
074b 50			        defb %01010000 
074c 50			        defb %01010000 
074d 50			        defb %01010000 
074e 50			        defb %01010000 
074f 50			        defb %01010000 
0750			 
0750			        ; code=187, hex=0xBB, ascii="!;" 
0750 00			        defb %00000000 
0751 f0			        defb %11110000 
0752 10			        defb %00010000 
0753 d0			        defb %11010000 
0754 50			        defb %01010000 
0755 50			        defb %01010000 
0756 50			        defb %01010000 
0757 50			        defb %01010000 
0758			 
0758			        ; code=188, hex=0xBC, ascii="!<" 
0758 50			        defb %01010000 
0759 d0			        defb %11010000 
075a 10			        defb %00010000 
075b f0			        defb %11110000 
075c 00			        defb %00000000 
075d 00			        defb %00000000 
075e 00			        defb %00000000 
075f 00			        defb %00000000 
0760			 
0760			        ; code=189, hex=0xBD, ascii="!=" 
0760 50			        defb %01010000 
0761 50			        defb %01010000 
0762 50			        defb %01010000 
0763 f0			        defb %11110000 
0764 00			        defb %00000000 
0765 00			        defb %00000000 
0766 00			        defb %00000000 
0767 00			        defb %00000000 
0768			 
0768			        ; code=190, hex=0xBE, ascii="!>" 
0768 10			        defb %00010000 
0769 f0			        defb %11110000 
076a 10			        defb %00010000 
076b f0			        defb %11110000 
076c 00			        defb %00000000 
076d 00			        defb %00000000 
076e 00			        defb %00000000 
076f 00			        defb %00000000 
0770			 
0770			        ; code=191, hex=0xBF, ascii="!?" 
0770 00			        defb %00000000 
0771 00			        defb %00000000 
0772 00			        defb %00000000 
0773 f0			        defb %11110000 
0774 10			        defb %00010000 
0775 10			        defb %00010000 
0776 10			        defb %00010000 
0777 10			        defb %00010000 
0778			 
0778			        ; code=192, hex=0xC0, ascii="!@" 
0778 10			        defb %00010000 
0779 10			        defb %00010000 
077a 10			        defb %00010000 
077b 1c			        defb %00011100 
077c 00			        defb %00000000 
077d 00			        defb %00000000 
077e 00			        defb %00000000 
077f 00			        defb %00000000 
0780			 
0780			        ; code=193, hex=0xC1, ascii="!A" 
0780 10			        defb %00010000 
0781 10			        defb %00010000 
0782 10			        defb %00010000 
0783 fc			        defb %11111100 
0784 00			        defb %00000000 
0785 00			        defb %00000000 
0786 00			        defb %00000000 
0787 00			        defb %00000000 
0788			 
0788			        ; code=194, hex=0xC2, ascii="!B" 
0788 00			        defb %00000000 
0789 00			        defb %00000000 
078a 00			        defb %00000000 
078b fc			        defb %11111100 
078c 10			        defb %00010000 
078d 10			        defb %00010000 
078e 10			        defb %00010000 
078f 10			        defb %00010000 
0790			 
0790			        ; code=195, hex=0xC3, ascii="!C" 
0790 10			        defb %00010000 
0791 10			        defb %00010000 
0792 10			        defb %00010000 
0793 1c			        defb %00011100 
0794 10			        defb %00010000 
0795 10			        defb %00010000 
0796 10			        defb %00010000 
0797 10			        defb %00010000 
0798			 
0798			        ; code=196, hex=0xC4, ascii="!D" 
0798 00			        defb %00000000 
0799 00			        defb %00000000 
079a 00			        defb %00000000 
079b fc			        defb %11111100 
079c 00			        defb %00000000 
079d 00			        defb %00000000 
079e 00			        defb %00000000 
079f 00			        defb %00000000 
07a0			 
07a0			        ; code=197, hex=0xC5, ascii="!E" 
07a0 10			        defb %00010000 
07a1 10			        defb %00010000 
07a2 10			        defb %00010000 
07a3 fc			        defb %11111100 
07a4 10			        defb %00010000 
07a5 10			        defb %00010000 
07a6 10			        defb %00010000 
07a7 10			        defb %00010000 
07a8			 
07a8			        ; code=198, hex=0xC6, ascii="!F" 
07a8 10			        defb %00010000 
07a9 1c			        defb %00011100 
07aa 10			        defb %00010000 
07ab 1c			        defb %00011100 
07ac 10			        defb %00010000 
07ad 10			        defb %00010000 
07ae 10			        defb %00010000 
07af 10			        defb %00010000 
07b0			 
07b0			        ; code=199, hex=0xC7, ascii="!G" 
07b0 50			        defb %01010000 
07b1 50			        defb %01010000 
07b2 50			        defb %01010000 
07b3 5c			        defb %01011100 
07b4 50			        defb %01010000 
07b5 50			        defb %01010000 
07b6 50			        defb %01010000 
07b7 50			        defb %01010000 
07b8			 
07b8			        ; code=200, hex=0xC8, ascii="!H" 
07b8 50			        defb %01010000 
07b9 5c			        defb %01011100 
07ba 40			        defb %01000000 
07bb 7c			        defb %01111100 
07bc 00			        defb %00000000 
07bd 00			        defb %00000000 
07be 00			        defb %00000000 
07bf 00			        defb %00000000 
07c0			 
07c0			        ; code=201, hex=0xC9, ascii="!I" 
07c0 00			        defb %00000000 
07c1 7c			        defb %01111100 
07c2 40			        defb %01000000 
07c3 5c			        defb %01011100 
07c4 50			        defb %01010000 
07c5 50			        defb %01010000 
07c6 50			        defb %01010000 
07c7 50			        defb %01010000 
07c8			 
07c8			        ; code=202, hex=0xCA, ascii="!J" 
07c8 50			        defb %01010000 
07c9 dc			        defb %11011100 
07ca 00			        defb %00000000 
07cb fc			        defb %11111100 
07cc 00			        defb %00000000 
07cd 00			        defb %00000000 
07ce 00			        defb %00000000 
07cf 00			        defb %00000000 
07d0			 
07d0			        ; code=203, hex=0xCB, ascii="!K" 
07d0 00			        defb %00000000 
07d1 fc			        defb %11111100 
07d2 00			        defb %00000000 
07d3 dc			        defb %11011100 
07d4 50			        defb %01010000 
07d5 50			        defb %01010000 
07d6 50			        defb %01010000 
07d7 50			        defb %01010000 
07d8			 
07d8			        ; code=204, hex=0xCC, ascii="!L" 
07d8 50			        defb %01010000 
07d9 5c			        defb %01011100 
07da 40			        defb %01000000 
07db 5c			        defb %01011100 
07dc 50			        defb %01010000 
07dd 50			        defb %01010000 
07de 50			        defb %01010000 
07df 50			        defb %01010000 
07e0			 
07e0			        ; code=205, hex=0xCD, ascii="!M" 
07e0 00			        defb %00000000 
07e1 fc			        defb %11111100 
07e2 00			        defb %00000000 
07e3 fc			        defb %11111100 
07e4 00			        defb %00000000 
07e5 00			        defb %00000000 
07e6 00			        defb %00000000 
07e7 00			        defb %00000000 
07e8			 
07e8			        ; code=206, hex=0xCE, ascii="!N" 
07e8 50			        defb %01010000 
07e9 dc			        defb %11011100 
07ea 00			        defb %00000000 
07eb dc			        defb %11011100 
07ec 50			        defb %01010000 
07ed 50			        defb %01010000 
07ee 50			        defb %01010000 
07ef 50			        defb %01010000 
07f0			 
07f0			        ; code=207, hex=0xCF, ascii="!O" 
07f0 10			        defb %00010000 
07f1 fc			        defb %11111100 
07f2 00			        defb %00000000 
07f3 fc			        defb %11111100 
07f4 00			        defb %00000000 
07f5 00			        defb %00000000 
07f6 00			        defb %00000000 
07f7 00			        defb %00000000 
07f8			 
07f8			        ; code=208, hex=0xD0, ascii="!P" 
07f8 50			        defb %01010000 
07f9 50			        defb %01010000 
07fa 50			        defb %01010000 
07fb fc			        defb %11111100 
07fc 00			        defb %00000000 
07fd 00			        defb %00000000 
07fe 00			        defb %00000000 
07ff 00			        defb %00000000 
0800			 
0800			        ; code=209, hex=0xD1, ascii="!Q" 
0800 00			        defb %00000000 
0801 fc			        defb %11111100 
0802 00			        defb %00000000 
0803 fc			        defb %11111100 
0804 10			        defb %00010000 
0805 10			        defb %00010000 
0806 10			        defb %00010000 
0807 10			        defb %00010000 
0808			 
0808			        ; code=210, hex=0xD2, ascii="!R" 
0808 00			        defb %00000000 
0809 00			        defb %00000000 
080a 00			        defb %00000000 
080b fc			        defb %11111100 
080c 50			        defb %01010000 
080d 50			        defb %01010000 
080e 50			        defb %01010000 
080f 50			        defb %01010000 
0810			 
0810			        ; code=211, hex=0xD3, ascii="!S" 
0810 50			        defb %01010000 
0811 50			        defb %01010000 
0812 50			        defb %01010000 
0813 7c			        defb %01111100 
0814 00			        defb %00000000 
0815 00			        defb %00000000 
0816 00			        defb %00000000 
0817 00			        defb %00000000 
0818			 
0818			        ; code=212, hex=0xD4, ascii="!T" 
0818 10			        defb %00010000 
0819 1c			        defb %00011100 
081a 10			        defb %00010000 
081b 1c			        defb %00011100 
081c 00			        defb %00000000 
081d 00			        defb %00000000 
081e 00			        defb %00000000 
081f 00			        defb %00000000 
0820			 
0820			        ; code=213, hex=0xD5, ascii="!U" 
0820 00			        defb %00000000 
0821 1c			        defb %00011100 
0822 10			        defb %00010000 
0823 1c			        defb %00011100 
0824 10			        defb %00010000 
0825 10			        defb %00010000 
0826 10			        defb %00010000 
0827 10			        defb %00010000 
0828			 
0828			        ; code=214, hex=0xD6, ascii="!V" 
0828 00			        defb %00000000 
0829 00			        defb %00000000 
082a 00			        defb %00000000 
082b 7c			        defb %01111100 
082c 50			        defb %01010000 
082d 50			        defb %01010000 
082e 50			        defb %01010000 
082f 50			        defb %01010000 
0830			 
0830			        ; code=215, hex=0xD7, ascii="!W" 
0830 50			        defb %01010000 
0831 50			        defb %01010000 
0832 50			        defb %01010000 
0833 dc			        defb %11011100 
0834 50			        defb %01010000 
0835 50			        defb %01010000 
0836 50			        defb %01010000 
0837 50			        defb %01010000 
0838			 
0838			        ; code=216, hex=0xD8, ascii="!X" 
0838 10			        defb %00010000 
0839 fc			        defb %11111100 
083a 00			        defb %00000000 
083b fc			        defb %11111100 
083c 10			        defb %00010000 
083d 10			        defb %00010000 
083e 10			        defb %00010000 
083f 10			        defb %00010000 
0840			 
0840			        ; code=217, hex=0xD9, ascii="!Y" 
0840 10			        defb %00010000 
0841 10			        defb %00010000 
0842 10			        defb %00010000 
0843 f0			        defb %11110000 
0844 00			        defb %00000000 
0845 00			        defb %00000000 
0846 00			        defb %00000000 
0847 00			        defb %00000000 
0848			 
0848			        ; code=218, hex=0xDA, ascii="!Z" 
0848 00			        defb %00000000 
0849 00			        defb %00000000 
084a 00			        defb %00000000 
084b 1c			        defb %00011100 
084c 10			        defb %00010000 
084d 10			        defb %00010000 
084e 10			        defb %00010000 
084f 10			        defb %00010000 
0850			 
0850			        ; code=219, hex=0xDB, ascii="![" 
0850 fc			        defb %11111100 
0851 fc			        defb %11111100 
0852 fc			        defb %11111100 
0853 fc			        defb %11111100 
0854 fc			        defb %11111100 
0855 fc			        defb %11111100 
0856 fc			        defb %11111100 
0857 fc			        defb %11111100 
0858			 
0858			        ; code=220, hex=0xDC, ascii="!\" 
0858 00			        defb %00000000 
0859 00			        defb %00000000 
085a 00			        defb %00000000 
085b 00			        defb %00000000 
085c fc			        defb %11111100 
085d fc			        defb %11111100 
085e fc			        defb %11111100 
085f fc			        defb %11111100 
0860			 
0860			        ; code=221, hex=0xDD, ascii="!]" 
0860 e0			        defb %11100000 
0861 e0			        defb %11100000 
0862 e0			        defb %11100000 
0863 e0			        defb %11100000 
0864 e0			        defb %11100000 
0865 e0			        defb %11100000 
0866 e0			        defb %11100000 
0867 e0			        defb %11100000 
0868			 
0868			        ; code=222, hex=0xDE, ascii="!^" 
0868 1c			        defb %00011100 
0869 1c			        defb %00011100 
086a 1c			        defb %00011100 
086b 1c			        defb %00011100 
086c 1c			        defb %00011100 
086d 1c			        defb %00011100 
086e 1c			        defb %00011100 
086f 1c			        defb %00011100 
0870			 
0870			        ; code=223, hex=0xDF, ascii="!_" 
0870 fc			        defb %11111100 
0871 fc			        defb %11111100 
0872 fc			        defb %11111100 
0873 fc			        defb %11111100 
0874 00			        defb %00000000 
0875 00			        defb %00000000 
0876 00			        defb %00000000 
0877 00			        defb %00000000 
0878			 
0878			        ; code=224, hex=0xE0, ascii="!`" 
0878 00			        defb %00000000 
0879 00			        defb %00000000 
087a 34			        defb %00110100 
087b 48			        defb %01001000 
087c 48			        defb %01001000 
087d 34			        defb %00110100 
087e 00			        defb %00000000 
087f 00			        defb %00000000 
0880			 
0880			        ; code=225, hex=0xE1, ascii="!a" 
0880 00			        defb %00000000 
0881 70			        defb %01110000 
0882 48			        defb %01001000 
0883 70			        defb %01110000 
0884 48			        defb %01001000 
0885 48			        defb %01001000 
0886 70			        defb %01110000 
0887 40			        defb %01000000 
0888			 
0888			        ; code=226, hex=0xE2, ascii="!b" 
0888 78			        defb %01111000 
0889 48			        defb %01001000 
088a 40			        defb %01000000 
088b 40			        defb %01000000 
088c 40			        defb %01000000 
088d 40			        defb %01000000 
088e 40			        defb %01000000 
088f 00			        defb %00000000 
0890			 
0890			        ; code=227, hex=0xE3, ascii="!c" 
0890 00			        defb %00000000 
0891 7c			        defb %01111100 
0892 28			        defb %00101000 
0893 28			        defb %00101000 
0894 28			        defb %00101000 
0895 28			        defb %00101000 
0896 28			        defb %00101000 
0897 00			        defb %00000000 
0898			 
0898			        ; code=228, hex=0xE4, ascii="!d" 
0898 78			        defb %01111000 
0899 48			        defb %01001000 
089a 20			        defb %00100000 
089b 10			        defb %00010000 
089c 20			        defb %00100000 
089d 48			        defb %01001000 
089e 78			        defb %01111000 
089f 00			        defb %00000000 
08a0			 
08a0			        ; code=229, hex=0xE5, ascii="!e" 
08a0 00			        defb %00000000 
08a1 00			        defb %00000000 
08a2 3c			        defb %00111100 
08a3 48			        defb %01001000 
08a4 48			        defb %01001000 
08a5 30			        defb %00110000 
08a6 00			        defb %00000000 
08a7 00			        defb %00000000 
08a8			 
08a8			        ; code=230, hex=0xE6, ascii="!f" 
08a8 00			        defb %00000000 
08a9 00			        defb %00000000 
08aa 48			        defb %01001000 
08ab 48			        defb %01001000 
08ac 48			        defb %01001000 
08ad 70			        defb %01110000 
08ae 40			        defb %01000000 
08af 40			        defb %01000000 
08b0			 
08b0			        ; code=231, hex=0xE7, ascii="!g" 
08b0 00			        defb %00000000 
08b1 00			        defb %00000000 
08b2 28			        defb %00101000 
08b3 50			        defb %01010000 
08b4 10			        defb %00010000 
08b5 10			        defb %00010000 
08b6 10			        defb %00010000 
08b7 00			        defb %00000000 
08b8			 
08b8			        ; code=232, hex=0xE8, ascii="!h" 
08b8 38			        defb %00111000 
08b9 10			        defb %00010000 
08ba 38			        defb %00111000 
08bb 44			        defb %01000100 
08bc 38			        defb %00111000 
08bd 10			        defb %00010000 
08be 38			        defb %00111000 
08bf 00			        defb %00000000 
08c0			 
08c0			        ; code=233, hex=0xE9, ascii="!i" 
08c0 30			        defb %00110000 
08c1 48			        defb %01001000 
08c2 48			        defb %01001000 
08c3 78			        defb %01111000 
08c4 48			        defb %01001000 
08c5 48			        defb %01001000 
08c6 30			        defb %00110000 
08c7 00			        defb %00000000 
08c8			 
08c8			        ; code=234, hex=0xEA, ascii="!j" 
08c8 00			        defb %00000000 
08c9 38			        defb %00111000 
08ca 44			        defb %01000100 
08cb 44			        defb %01000100 
08cc 28			        defb %00101000 
08cd 28			        defb %00101000 
08ce 6c			        defb %01101100 
08cf 00			        defb %00000000 
08d0			 
08d0			        ; code=235, hex=0xEB, ascii="!k" 
08d0 30			        defb %00110000 
08d1 40			        defb %01000000 
08d2 20			        defb %00100000 
08d3 10			        defb %00010000 
08d4 38			        defb %00111000 
08d5 48			        defb %01001000 
08d6 30			        defb %00110000 
08d7 00			        defb %00000000 
08d8			 
08d8			        ; code=236, hex=0xEC, ascii="!l" 
08d8 00			        defb %00000000 
08d9 00			        defb %00000000 
08da 28			        defb %00101000 
08db 54			        defb %01010100 
08dc 54			        defb %01010100 
08dd 28			        defb %00101000 
08de 00			        defb %00000000 
08df 00			        defb %00000000 
08e0			 
08e0			        ; code=237, hex=0xED, ascii="!m" 
08e0 00			        defb %00000000 
08e1 10			        defb %00010000 
08e2 38			        defb %00111000 
08e3 54			        defb %01010100 
08e4 54			        defb %01010100 
08e5 38			        defb %00111000 
08e6 10			        defb %00010000 
08e7 00			        defb %00000000 
08e8			 
08e8			        ; code=238, hex=0xEE, ascii="!n" 
08e8 00			        defb %00000000 
08e9 38			        defb %00111000 
08ea 40			        defb %01000000 
08eb 78			        defb %01111000 
08ec 40			        defb %01000000 
08ed 38			        defb %00111000 
08ee 00			        defb %00000000 
08ef 00			        defb %00000000 
08f0			 
08f0			        ; code=239, hex=0xEF, ascii="!o" 
08f0 00			        defb %00000000 
08f1 30			        defb %00110000 
08f2 48			        defb %01001000 
08f3 48			        defb %01001000 
08f4 48			        defb %01001000 
08f5 48			        defb %01001000 
08f6 00			        defb %00000000 
08f7 00			        defb %00000000 
08f8			 
08f8			        ; code=240, hex=0xF0, ascii="!p" 
08f8 00			        defb %00000000 
08f9 78			        defb %01111000 
08fa 00			        defb %00000000 
08fb 78			        defb %01111000 
08fc 00			        defb %00000000 
08fd 78			        defb %01111000 
08fe 00			        defb %00000000 
08ff 00			        defb %00000000 
0900			 
0900			        ; code=241, hex=0xF1, ascii="!q" 
0900 00			        defb %00000000 
0901 10			        defb %00010000 
0902 38			        defb %00111000 
0903 10			        defb %00010000 
0904 00			        defb %00000000 
0905 38			        defb %00111000 
0906 00			        defb %00000000 
0907 00			        defb %00000000 
0908			 
0908			        ; code=242, hex=0xF2, ascii="!r" 
0908 40			        defb %01000000 
0909 30			        defb %00110000 
090a 08			        defb %00001000 
090b 30			        defb %00110000 
090c 40			        defb %01000000 
090d 00			        defb %00000000 
090e 78			        defb %01111000 
090f 00			        defb %00000000 
0910			 
0910			        ; code=243, hex=0xF3, ascii="!s" 
0910 08			        defb %00001000 
0911 30			        defb %00110000 
0912 40			        defb %01000000 
0913 30			        defb %00110000 
0914 08			        defb %00001000 
0915 00			        defb %00000000 
0916 78			        defb %01111000 
0917 00			        defb %00000000 
0918			 
0918			        ; code=244, hex=0xF4, ascii="!t" 
0918 00			        defb %00000000 
0919 08			        defb %00001000 
091a 14			        defb %00010100 
091b 10			        defb %00010000 
091c 10			        defb %00010000 
091d 10			        defb %00010000 
091e 10			        defb %00010000 
091f 10			        defb %00010000 
0920			 
0920			        ; code=245, hex=0xF5, ascii="!u" 
0920 10			        defb %00010000 
0921 10			        defb %00010000 
0922 10			        defb %00010000 
0923 10			        defb %00010000 
0924 10			        defb %00010000 
0925 50			        defb %01010000 
0926 20			        defb %00100000 
0927 00			        defb %00000000 
0928			 
0928			        ; code=246, hex=0xF6, ascii="!v" 
0928 00			        defb %00000000 
0929 10			        defb %00010000 
092a 00			        defb %00000000 
092b 7c			        defb %01111100 
092c 00			        defb %00000000 
092d 10			        defb %00010000 
092e 00			        defb %00000000 
092f 00			        defb %00000000 
0930			 
0930			        ; code=247, hex=0xF7, ascii="!w" 
0930 00			        defb %00000000 
0931 28			        defb %00101000 
0932 50			        defb %01010000 
0933 00			        defb %00000000 
0934 28			        defb %00101000 
0935 50			        defb %01010000 
0936 00			        defb %00000000 
0937 00			        defb %00000000 
0938			 
0938			        ; code=248, hex=0xF8, ascii="!x" 
0938 30			        defb %00110000 
0939 48			        defb %01001000 
093a 48			        defb %01001000 
093b 30			        defb %00110000 
093c 00			        defb %00000000 
093d 00			        defb %00000000 
093e 00			        defb %00000000 
093f 00			        defb %00000000 
0940			 
0940			        ; code=249, hex=0xF9, ascii="!y" 
0940 00			        defb %00000000 
0941 00			        defb %00000000 
0942 00			        defb %00000000 
0943 30			        defb %00110000 
0944 30			        defb %00110000 
0945 00			        defb %00000000 
0946 00			        defb %00000000 
0947 00			        defb %00000000 
0948			 
0948			        ; code=250, hex=0xFA, ascii="!z" 
0948 00			        defb %00000000 
0949 00			        defb %00000000 
094a 00			        defb %00000000 
094b 20			        defb %00100000 
094c 00			        defb %00000000 
094d 00			        defb %00000000 
094e 00			        defb %00000000 
094f 00			        defb %00000000 
0950			 
0950			        ; code=251, hex=0xFB, ascii="!{" 
0950 00			        defb %00000000 
0951 1c			        defb %00011100 
0952 10			        defb %00010000 
0953 10			        defb %00010000 
0954 50			        defb %01010000 
0955 50			        defb %01010000 
0956 20			        defb %00100000 
0957 00			        defb %00000000 
0958			 
0958			        ; code=252, hex=0xFC, ascii="!|" 
0958 50			        defb %01010000 
0959 28			        defb %00101000 
095a 28			        defb %00101000 
095b 28			        defb %00101000 
095c 00			        defb %00000000 
095d 00			        defb %00000000 
095e 00			        defb %00000000 
095f 00			        defb %00000000 
0960			 
0960			        ; code=253, hex=0xFD, ascii="!}" 
0960 60			        defb %01100000 
0961 10			        defb %00010000 
0962 20			        defb %00100000 
0963 70			        defb %01110000 
0964 00			        defb %00000000 
0965 00			        defb %00000000 
0966 00			        defb %00000000 
0967 00			        defb %00000000 
0968			 
0968			        ; code=254, hex=0xFE, ascii="!~" 
0968 00			        defb %00000000 
0969 00			        defb %00000000 
096a 78			        defb %01111000 
096b 78			        defb %01111000 
096c 78			        defb %01111000 
096d 78			        defb %01111000 
096e 00			        defb %00000000 
096f 00			        defb %00000000 
0970			 
0970			        ; code=255, hex=0xFF, ascii="!^" 
0970 00			        defb %00000000 
0971 00			        defb %00000000 
0972 00			        defb %00000000 
0973 00			        defb %00000000 
0974 00			        defb %00000000 
0975 00			        defb %00000000 
0976 00			        defb %00000000 
0977 00			        defb %000000
# End of file TmsFont.asm
0978			TmsFontLen:     equ $-TmsFont 
0978			 
0978			        include "tms.asm"                       ; TMS graphics routines 
0978			; TMS9918A graphics subroutines 
0978			; Copyright 2018-2020 J.B. Langston 
0978			; 
0978			; Permission is hereby granted, free of charge, to any person obtaining a  
0978			; copy of this software and associated documentation files (the "Software"),  
0978			; to deal in the Software without restriction, including without limitation  
0978			; the rights to use, copy, modify, merge, publish, distribute, sublicense,  
0978			; and/or sell copies of the Software, and to permit persons to whom the  
0978			; Software is furnished to do so, subject to the following conditions: 
0978			;  
0978			; The above copyright notice and this permission notice shall be included in 
0978			; all copies or substantial portions of the Software. 
0978			;  
0978			; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
0978			; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  
0978			; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
0978			; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER  
0978			; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING  
0978			; FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER  
0978			; DEALINGS IN THE SOFTWARE. 
0978			 
0978			; VDP Programmer's Guide: http://map.grauw.nl/resources/video/ti-vdp-programmers-guide.pdf 
0978			 
0978			; --------------------------------------------------------------------------- 
0978			; configuration parameters; can be changed at runtime 
0978			TmsPort: 
0978 a0			        defb    0xa0            ; port for TMS vram (reg is 1 higher) 
0979			TmsWait: 
0979 1f			        defb    31              ; iterations to wait after ram access 
097a			TmsMode: 
097a 00 00		        defw    0               ; mode registers 
097c			TmsNameAddr: 
097c 00 38		        defw    3800h           ; name table address (multiples of 400H) 
097e			TmsColorAddr: 
097e 00 20		        defw    2000h           ; color table address (multiples of 40H) 
0980			TmsPatternAddr: 
0980 00 00		        defw    0               ; pattern table (multiples of 800H) 
0982			TmsSpritePatternAddr: 
0982 00 18		        defw    1800h           ; sprite attribute table (multiples of 80H) 
0984			TmsSpriteAttrAddr: 
0984 c0 3b		        defw    3bc0h           ; sprite pattern table (multiples of 800H) 
0986			TmsScreenColors: 
0986 00			        defb    0               ; background (low nybble), text color (high nybble) 
0987			; --------------------------------------------------------------------------- 
0987			; register constants 
0987			 
0987			TmsWriteBit:            equ 40h                 ; bit to indicate memory write 
0987			 
0987			; Registers 
0987			TmsCtrl0Reg:            equ 80h 
0987			TmsCtrl1Reg:            equ 81h 
0987			TmsNameReg:             equ 82h 
0987			TmsColorTableReg:       equ 83h 
0987			TmsPatternReg:          equ 84h 
0987			TmsSpriteAttrReg:       equ 85h 
0987			TmsSpritePatternReg:    equ 86h 
0987			TmsColorReg:            equ 87h 
0987			 
0987			; Control Register Bits 
0987			TmsM3:                  equ 200h 
0987			TmsExtVideo:            equ 100h 
0987			Tms16k:                 equ 80h 
0987			TmsDisplayEnable:       equ 40h 
0987			TmsIntEnableBit:        equ 20h 
0987			TmsM1:                  equ 10h 
0987			TmsM2:                  equ 8 
0987			TmsSprite32:            equ 2 
0987			TmsSpriteMag:           equ 1 
0987			 
0987			; --------------------------------------------------------------------------- 
0987			; table lengths 
0987			 
0987			TmsTileNameLen:         equ 300h 
0987			TmsTextNameLen:         equ 3c0h 
0987			 
0987			TmsTileColorLen:        equ 20h 
0987			TmsBitmapColorLen:      equ 800h 
0987			 
0987			TmsTilePatternLen:      equ 800h 
0987			TmsTextPatternLen:      equ 800h 
0987			TmsMulticolorPatternLen: equ 600h 
0987			TmsBitmapPatternLen:    equ 1800h 
0987			 
0987			; --------------------------------------------------------------------------- 
0987			; color constants 
0987			 
0987			TmsTransparent:         equ 0 
0987			TmsBlack:               equ 1 
0987			TmsMediumGreen:         equ 2 
0987			TmsLightGreen:          equ 3 
0987			TmsDarkBlue:            equ 4 
0987			TmsLightBlue:           equ 5 
0987			TmsDarkRed:             equ 6 
0987			TmsCyan:                equ 7 
0987			TmsMediumRed:           equ 8 
0987			TmsLightRed:            equ 9 
0987			TmsDarkYellow:          equ 0ah 
0987			TmsLightYellow:         equ 0bh 
0987			TmsDarkGreen:           equ 0ch 
0987			TmsMagenta:             equ 0dh 
0987			TmsGray:                equ 0eh 
0987			TmsWhite:               equ 0fh 
0987			 
0987			; --------------------------------------------------------------------------- 
0987			; port I/O routines 
0987			 
0987			; These routines access the ports configured in TmsPort. 
0987			 
0987			; These memory locations can be set at runtime to support different hardware 
0987			; configurations from the same binary. TmsProbe automatically detects the 
0987			; TMS9918A on common ports. 
0987			 
0987			; The TMS9918A RAM must not be accessed more than once every 8 us or display  
0987			; corruption may occur.  During vblank and with the display disabled,  
0987			; accesses can be 2 us apart, but we will always use 8 us minimum delay. 
0987			 
0987			; TmsRamIn/TmsRamOut include a configurable delay loop, which waits for the 
0987			; configured iterations between VRAM writes to work properly with faster CPUs 
0987			 
0987			; Minimum time to execute each procedure call: 
0987			; Z80: 88 cycles, 8.8 us @ 10 MHz 
0987			; Z180: 80 cycles, 8.64 us @ 9.216 MHz, 4.32 us @ 18.432, 2.16 us @ 36.864 
0987			; 
0987			; Additional delay per djnz iteration: 
0987			; Z80: 8 cycles * (iterations - 1) 
0987			;       0.8 us @ 10 MHz 
0987			; Z180: 7 cycles * (iterations - 1) 
0987			;       0.756 us @ 9.216 MHz, 0.378 us @ 18.432, 0.189 us @ 36.864 
0987			 
0987			; Delay loop iterations required for different CPU speeds: 
0987			; Z80 @ 10 MHz or less: 1 
0987			; Z180 @ 9.216 MHz or less: 1 
0987			; Z180 @ 18.432 MHz: 10 
0987			; Z180 @ 36.864 MHz: 31 
0987 01 0a 1f		TmsWaits:       defb 1, 10, 31          ; wait iterations to add for different CPU speeds 
098a			 
098a			; set up wait time based on clock multiplier in E 
098a			TmsSetWait: 
098a 21 87 09		        ld      hl, TmsWaits 
098d 16 00		        ld      d, 0 
098f 19			        add     hl, de 
0990 7e			        ld      a, (hl) 
0991 32 79 09		        ld      (TmsWait), a 
0994 c9			        ret 
0995			 
0995			; try to find TMS9918A on common ports 
0995			TmsProbe: 
0995 21 b9 09		        ld      hl, TmsPorts 
0998 06 02		        ld      b, TmsNumPorts 
099a			TmsProbeNext:        
099a 7e			        ld      a, (hl) 
099b 32 78 09		        ld      (TmsPort), a 
099e cd c9 09		        call    TmsRegIn                ; clear vsync bit 
09a1 cd c9 09		        call    TmsRegIn                ; check it again 
09a4 fa b4 09		        jp      m, TmsProbeFailed       ; if still set, not a TMS9918A 
09a7 11 ff ff		        ld      de, 0ffffh              ; long enough for another vsync 
09aa			TmsProbeWait: 
09aa cd c9 09		        call    TmsRegIn                ; check vsync bit again 
09ad f8			        ret     m                       ; if set, it's a TMS9918A (and Z is clear) 
09ae 1b			        dec     de                      ; otherwise, keep waiting 
09af 7b			        ld      a, e 
09b0 b2			        or      d 
09b1 c2 aa 09		        jp      nz, TmsProbeWait 
09b4			TmsProbeFailed: 
09b4 23			        inc     hl                      ; if still clear after this long, try next port 
09b5 10 e3		        djnz    TmsProbeNext 
09b7 af			        xor     a                       ; set Z if we ran out of ports to check 
09b8 c9			        ret 
09b9			 
09b9			TmsPorts:                               ; List of ports to probe: 
09b9 a0			        defb 0xa0                       ; Nabu 
09ba 80			        defb 0x80                       ; Z80-Retro 
09bb			        ; add additional ports to check here 
09bb			TmsNumPorts:    equ $ - TmsPorts 
09bb			 
09bb			; set a single register value 
09bb			;       A = register value 
09bb			;       E = register to set 
09bb			TmsSetReg: 
09bb cd bf 09		        call    TmsRegOut 
09be 7b			        ld      a, e 
09bf			        ; fallthrough to TmsRegOut 
09bf			 
09bf			; write to configured register port 
09bf			; parameters: 
09bf			;       A = value to write 
09bf			TmsRegOut: 
09bf c5			        push    bc 
09c0 ed 4b 78 09	        ld      bc, (TmsPort) 
09c4 0c			        inc     c 
09c5 ed 79		        out     (c), a 
09c7 c1			        pop     bc 
09c8 c9			        ret 
09c9			 
09c9			; read from configured register port 
09c9			; returns: 
09c9			;       A = value read 
09c9			TmsRegIn: 
09c9 c5			        push    bc 
09ca ed 4b 78 09	        ld      bc, (TmsPort) 
09ce 0c			        inc     c 
09cf ed 78		        in      a, (c) 
09d1 c1			        pop     bc 
09d2 c9			        ret 
09d3			 
09d3			; write to configured VRAM port 
09d3			; parameters: 
09d3			;       A = value to write 
09d3			                                        ; Z80 | Z180 cycles... 
09d3			TmsRamOut:                              ; 17  | 16 (call) 
09d3 c5			        push    bc                      ; 11  | 11 
09d4 ed 4b 78 09	        ld      bc, (TmsPort)           ; 20  | 18 
09d8 ed 79		        out     (c), a                  ; 12  | 10 
09da			TmsRamOutDelay: 
09da 10 fe		        djnz    TmsRamOutDelay          ; 8   | 7  plus (13 | 9) * (iterations-1) 
09dc c1			        pop     bc                      ; 10  | 9 
09dd c9			        ret                             ; 10  | 9 
09de			 
09de			; read from configured VRAM port 
09de			; returns: 
09de			;       A = value read 
09de			TmsRamIn: 
09de c5			        push    bc 
09df ed 4b 78 09	        ld      bc, (TmsPort) 
09e3			TmsRamInDelay: 
09e3 10 fe		        djnz    TmsRamInDelay 
09e5 ed 78		        in      a, (c) 
09e7 ed 4b 78 09	        ld      bc, (TmsPort) 
09eb			TmsRamInDelay2: 
09eb 10 fe		        djnz    TmsRamInDelay2 
09ed c1			        pop     bc 
09ee c9			        ret 
09ef			 
09ef			; --------------------------------------------------------------------------- 
09ef			; register configuration routines 
09ef			 
09ef			; set the background color 
09ef			;       A = requested color 
09ef			TmsBackground: 
09ef e6 0f		        and     0fh 
09f1 47			        ld      b, a 
09f2 3a 86 09		        ld      a, (TmsScreenColors) 
09f5 e6 f0		        and     0f0h 
09f7 b0			        or      b 
09f8 32 86 09		        ld      (TmsScreenColors), a 
09fb 1e 87		        ld      e, TmsColorReg 
09fd c3 bb 09		        jp      TmsSetReg 
0a00			 
0a00			; set the sprite configuration 
0a00			;       A = sprite options 
0a00			TmsSpriteConfig: 
0a00 e6 03		        and     TmsSprite32|TmsSpriteMag 
0a02 47			        ld      b, a 
0a03 3a 7a 09		        ld      a, (TmsMode) 
0a06 e6 fc		        and     ~(TmsSprite32|TmsSpriteMag) 
0a08 b0			        or      b 
0a09 32 7a 09		        ld      (TmsMode), a 
0a0c 1e 81		        ld      e, TmsCtrl1Reg 
0a0e c3 bb 09		        jp      TmsSetReg 
0a11			 
0a11			 
0a11			; enable vblank interrupts 
0a11			TmsIntEnable: 
0a11 3a 7a 09		        ld      a, (TmsMode) 
0a14 f6 20		        or      TmsIntEnableBit 
0a16 32 7a 09		        ld      (TmsMode), a 
0a19 1e 81		        ld      e, TmsCtrl1Reg 
0a1b c3 bb 09		        jp      TmsSetReg 
0a1e			 
0a1e			; disable vblank interrupts 
0a1e			TmsIntDisable: 
0a1e 3a 7a 09		        ld      a, (TmsMode) 
0a21 e6 df		        and     ~TmsIntEnableBit 
0a23 32 7a 09		        ld      (TmsMode), a 
0a26 1e 81		        ld      e, TmsCtrl1Reg 
0a28 c3 bb 09		        jp      TmsSetReg 
0a2b			 
0a2b			; --------------------------------------------------------------------------- 
0a2b			; initialization routines 
0a2b			 
0a2b			TmsBlankFlags:          equ     Tms16k 
0a2b			TmsTileFlags:           equ     Tms16k | TmsDisplayEnable 
0a2b			TmsTextFlags:           equ     Tms16k | TmsDisplayEnable | TmsM1 
0a2b			TmsMulticolorFlags:     equ     Tms16k | TmsDisplayEnable | TmsM2 
0a2b			TmsBitmapFlags:         equ     Tms16k | TmsDisplayEnable | TmsM3 
0a2b			 
0a2b			; reset registers and clear all 16KB of video memory 
0a2b			TmsReset: 
0a2b 21 80 00		        ld      hl, TmsBlankFlags       ; blank the screen with 16KB enabled 
0a2e 22 7a 09		        ld      (TmsMode), hl 
0a31 7d			        ld      a, l 
0a32 1e 81		        ld      e, TmsCtrl1Reg 
0a34 cd bb 09		        call    TmsSetReg 
0a37 7c			        ld      a, h 
0a38 1e 80		        ld      e, TmsCtrl0Reg 
0a3a cd bb 09		        call    TmsSetReg 
0a3d 3e 00		        ld      a, TmsTransparent 
0a3f cd ef 09		        call    TmsBackground 
0a42 3e 00		        ld      a, TmsTransparent 
0a44 cd a0 0b		        call    TmsTextColor 
0a47 11 00 00		        ld      de, 0                   ; clear entire VRAM 
0a4a 01 00 40		        ld      bc, 4000h 
0a4d 3e 00		        ld      a, 0 
0a4f cd 91 0b		        call    TmsFill 
0a52 c9			        ret 
0a53			 
0a53			; initialize for multicolor mode  
0a53			TmsMulticolor: 
0a53 cd 2b 0a		        call    TmsReset 
0a56 ed 5b 7c 09	        ld      de, (TmsNameAddr) 
0a5a cd 6a 0b		        call    TmsWriteAddr 
0a5d 16 06		        ld      d, 6                    ; name table has 6 sections 
0a5f 1e 00		        ld      e, 0                    ; lines in first section start at 0 
0a61			TmsSectionLoop: 
0a61 0e 04		        ld      c, 4                    ; each section has 4 identical lines 
0a63			TmsLineLoop: 
0a63 06 20		        ld      b, 32                   ; each line is 32 bytes long 
0a65 7b			        ld      a, e                    ; same starting value for each line in section 
0a66			TmsByteLoop:  
0a66 cd d3 09		        call    TmsRamOut 
0a69 3c			        inc     a                       ; byte value 
0a6a 10 fa		        djnz    TmsByteLoop 
0a6c 0d			        dec     c                       ; line counter 
0a6d c2 63 0a		        jp      nz, TmsLineLoop 
0a70 5f			        ld      e, a                    ; next starting value = current + 32 
0a71 15			        dec     d                       ; section counter 
0a72 c2 61 0a		        jp      nz, TmsSectionLoop 
0a75 21 c8 00		        ld      hl, TmsMulticolorFlags 
0a78 22 7a 09		        ld      (TmsMode), hl 
0a7b c3 9f 0a		        jp      TmsInitNonBitmap 
0a7e			 
0a7e			; initialize for tiled graphics 
0a7e			TmsTile: 
0a7e cd 2b 0a		        call    TmsReset 
0a81 21 c0 00		        ld      hl, TmsTileFlags 
0a84 22 7a 09		        ld      (TmsMode), hl 
0a87 c3 9f 0a		        jp      TmsInitNonBitmap 
0a8a			 
0a8a			; initialize for text mode 
0a8a			;       HL = address of font to load 
0a8a			TmsTextMode: 
0a8a e5			        push    hl 
0a8b cd 2b 0a		        call    TmsReset 
0a8e e1			        pop     hl 
0a8f ed 5b 80 09	        ld      de, (TmsPatternAddr)    ; load font from address in hl 
0a93 01 00 08		        ld      bc, TmsTextPatternLen 
0a96 cd 82 0b		        call    TmsWrite 
0a99 21 d0 00		        ld      hl, TmsTextFlags 
0a9c 22 7a 09		        ld      (TmsMode), hl 
0a9f			        ; fallthrough to TmsInitNonBitmap 
0a9f			 
0a9f			; non-bitmap color and pattern table configuration 
0a9f			TmsInitNonBitmap: 
0a9f			        ; set up color table address (register = address / 400H) 
0a9f 3a 7e 09		        ld      a, (TmsColorAddr) 
0aa2 e6 c0		        and     0c0h 
0aa4 32 7e 09		        ld      (TmsColorAddr), a 
0aa7 57			        ld      d, a 
0aa8 3a 7f 09		        ld      a, (TmsColorAddr+1) 
0aab e6 3f		        and     3fh 
0aad 32 7f 09		        ld      (TmsColorAddr+1), a 
0ab0 cb 12		        rl      d 
0ab2 17			        rla 
0ab3 cb 12		        rl      d 
0ab5 17			        rla 
0ab6 1e 83		        ld      e, TmsColorTableReg 
0ab8 cd bb 09		        call    TmsSetReg 
0abb			 
0abb			        ; set up pattern table address (register = address / 800H) 
0abb af			        xor     a 
0abc 32 80 09		        ld      (TmsPatternAddr), a 
0abf 3a 81 09		        ld      a, (TmsPatternAddr+1)  
0ac2 e6 38		        and     38h 
0ac4 32 81 09		        ld      (TmsPatternAddr+1), a 
0ac7 0f			        rrca 
0ac8 0f			        rrca 
0ac9 0f			        rrca 
0aca 1e 84		        ld      e, TmsPatternReg 
0acc cd bb 09		        call    TmsSetReg 
0acf c3 1d 0b		        jp      TmsInitCommon 
0ad2			 
0ad2			; initialize for bitmapped graphics 
0ad2			TmsBitmap: 
0ad2 cd 2b 0a		        call    TmsReset 
0ad5 ed 5b 7c 09	        ld      de, (TmsNameAddr)       ; initialize name table with 3 sets 
0ad9 cd 6a 0b		        call    TmsWriteAddr            ; of 256 bytes ranging from 00-FF 
0adc 06 03		        ld      b, 3 
0ade af			        xor     a 
0adf			TmsBitmapLoop: 
0adf cd d3 09		        call    TmsRamOut 
0ae2 3c			        inc     a 
0ae3 c2 df 0a		        jp      nz, TmsBitmapLoop 
0ae6 10 f7		        djnz    TmsBitmapLoop 
0ae8 21 c0 02		        ld      hl, TmsBitmapFlags 
0aeb 22 7a 09		        ld      (TmsMode), hl 
0aee			 
0aee			        ; set up color table at 0H (register = 7FH) or 2000H (register = 0FFH) 
0aee af			        xor     a 
0aef 32 7e 09		        ld      (TmsColorAddr), a 
0af2 32 80 09		        ld      (TmsPatternAddr), a 
0af5 3a 7f 09		        ld      a, (TmsColorAddr+1) 
0af8 e6 20		        and     20h 
0afa 32 7f 09		        ld      (TmsColorAddr+1), a 
0afd 3e ff		        ld      a, 0ffh                 ; color table at 2000H 
0aff c2 04 0b		        jp      nz, TmsColorTableHigh 
0b02 3e 7f		        ld      a, 7fh                  ; color table at 0H 
0b04			TmsColorTableHigh: 
0b04 1e 83		        ld      e, TmsColorTableReg 
0b06 cd bb 09		        call    TmsSetReg 
0b09			 
0b09			        ; set up pattern table at 0H (register = 3) or 2000H (register = 7) 
0b09 3a 81 09		        ld      a, (TmsPatternAddr+1) 
0b0c e6 20		        and     20h 
0b0e 32 81 09		        ld      (TmsPatternAddr+1), a 
0b11 3e 07		        ld      a, 7                    ; pattern table at 2000H 
0b13 c2 18 0b		        jp      nz, TmsPatternTableHigh 
0b16 3e 03		        ld      a, 3                    ; pattern table at 0H 
0b18			TmsPatternTableHigh: 
0b18 1e 84		        ld      e, TmsPatternReg 
0b1a cd bb 09		        call    TmsSetReg 
0b1d			        ; fall through to TmsInitCommon 
0b1d			 
0b1d			 
0b1d			; common initialization for all modes 
0b1d			TmsInitCommon: 
0b1d			        ; set up name table address (register = address / 400H) 
0b1d af			        xor     a 
0b1e 32 7c 09		        ld      (TmsNameAddr), a 
0b21 3a 7d 09		        ld      a, (TmsNameAddr+1) 
0b24 e6 3c		        and     3ch 
0b26 32 7d 09		        ld      (TmsNameAddr+1), a 
0b29 0f			        rrca 
0b2a 0f			        rrca 
0b2b 1e 82		        ld      e, TmsNameReg 
0b2d cd bb 09		        call    TmsSetReg 
0b30			 
0b30			        ; set up sprite pattern table address (register = address / 80H) 
0b30 3a 84 09		        ld      a, (TmsSpriteAttrAddr) 
0b33 e6 80		        and     80h 
0b35 32 84 09		        ld      (TmsSpriteAttrAddr), a 
0b38 57			        ld      d, a 
0b39 3a 85 09		        ld      a, (TmsSpriteAttrAddr+1) 
0b3c e6 7f		        and     7fh 
0b3e cb 12		        rl      d 
0b40 17			        rla 
0b41 1e 85		        ld      e, TmsSpriteAttrReg 
0b43 cd bb 09		        call    TmsSetReg 
0b46			 
0b46			        ; set up sprite attribute table address (register = address / 800H) 
0b46 af			        xor     a                        
0b47 32 82 09		        ld      (TmsSpritePatternAddr), a 
0b4a 3a 83 09		        ld      a, (TmsSpritePatternAddr+1) 
0b4d e6 38		        and     38h 
0b4f 32 83 09		        ld      (TmsSpritePatternAddr+1), a 
0b52 0f			        rrca 
0b53 0f			        rrca 
0b54 0f			        rrca 
0b55 1e 86		        ld      e, TmsSpritePatternReg 
0b57 cd bb 09		        call    TmsSetReg 
0b5a			 
0b5a			        ; set up control registers 
0b5a 1e 81		        ld      e, TmsCtrl1Reg 
0b5c 3a 7a 09		        ld      a, (TmsMode) 
0b5f cd bb 09		        call    TmsSetReg 
0b62 3a 7b 09		        ld      a, (TmsMode+1) 
0b65 1e 80		        ld      e, TmsCtrl0Reg 
0b67 c3 bb 09		        jp      TmsSetReg 
0b6a			 
0b6a			; --------------------------------------------------------------------------- 
0b6a			; memory access routines 
0b6a			 
0b6a			; set the next address of vram to write 
0b6a			;       DE = address 
0b6a			TmsWriteAddr: 
0b6a 7b			        ld      a, e                    ; send lsb 
0b6b cd bf 09		        call    TmsRegOut 
0b6e 7a			        ld      a, d                    ; mask off msb to max of 16KB 
0b6f e6 3f		        and     3fh 
0b71 f6 40		        or      TmsWriteBit             ; indicate that this is a write 
0b73 cd bf 09		        call    TmsRegOut 
0b76 c9			        ret 
0b77			 
0b77			; set the next address of vram to read 
0b77			;       DE = address 
0b77			TmsReadAddr: 
0b77 7b			        ld      a, e                    ; send lsb 
0b78 cd bf 09		        call    TmsRegOut 
0b7b 7a			        ld      a, d                    ; mask off msb to max of 16KB 
0b7c e6 3f		        and     3Fh 
0b7e cd bf 09		        call    TmsRegOut 
0b81 c9			        ret 
0b82			 
0b82			; copy bytes from ram to vram 
0b82			;       HL = ram source address 
0b82			;       DE = vram destination address 
0b82			;       BC = byte count 
0b82			TmsWrite: 
0b82 cd 6a 0b		        call    TmsWriteAddr 
0b85			TmsWriteLoop: 
0b85 7e			        ld      a, (hl) 
0b86 cd d3 09		        call    TmsRamOut 
0b89 23			        inc     hl 
0b8a 0b			        dec     bc 
0b8b 78			        ld      a, b 
0b8c b1			        or      c 
0b8d c2 85 0b		        jp      nz, TmsWriteLoop 
0b90 c9			        ret 
0b91			 
0b91			; fill a section of memory with a single value 
0b91			;       A = value to fill 
0b91			;       DE = vram destination address 
0b91			;       BC = byte count 
0b91			TmsFill: 
0b91 f5			        push    af 
0b92 cd 6a 0b		        call    TmsWriteAddr 
0b95 f1			        pop     af 
0b96			TmsFillLoop: 
0b96 cd d3 09		        call    TmsRamOut 
0b99 0d			        dec     c 
0b9a c2 96 0b		        jp      nz, TmsFillLoop 
0b9d 10 f7		        djnz    TmsFillLoop 
0b9f c9			        ret 
0ba0			 
0ba0			; --------------------------------------------------------------------------- 
0ba0			; text routines 
0ba0			; set text color 
0ba0			;       A = requested color 
0ba0			TmsTextColor: 
0ba0 87			        add     a, a                    ; text color into high nybble 
0ba1 87			        add     a, a 
0ba2 87			        add     a, a 
0ba3 87			        add     a, a 
0ba4 47			        ld      b, a                    ; save for later 
0ba5 3a 86 09		        ld      a, (TmsScreenColors)    ; get current colors 
0ba8 e6 0f		        and     0fh                     ; mask off old text color 
0baa b0			        or      b                       ; set new text color 
0bab 32 86 09		        ld      (TmsScreenColors), a 
0bae 1e 87		        ld      e, TmsColorReg 
0bb0 c3 bb 09		        jp      TmsSetReg               ; save it back 
0bb3			 
0bb3			; set the address to place text at X/Y coordinate 
0bb3			;       A = X 
0bb3			;       E = Y 
0bb3			TmsTextPos: 
0bb3 16 00		        ld      d, 0 
0bb5 21 00 00		        ld      hl, 0 
0bb8 19			        add     hl, de                  ; Y x 1 
0bb9 29			        add     hl, hl                  ; Y x 2 
0bba 29			        add     hl, hl                  ; Y x 4 
0bbb 19			        add     hl, de                  ; Y x 5 
0bbc 29			        add     hl, hl                  ; Y x 10 
0bbd 29			        add     hl, hl                  ; Y x 20 
0bbe 29			        add     hl, hl                  ; Y x 40 
0bbf 5f			        ld      e, a 
0bc0 19			        add     hl, de                  ; add X for final address 
0bc1 ed 5b 7c 09	        ld      de, (TmsNameAddr)       ; add name table base address 
0bc5 19			        add     hl, de 
0bc6 eb			        ex      de, hl 
0bc7 c3 6a 0b		        jp      TmsWriteAddr 
0bca			 
0bca			; set the address to place a tile at X/Y coordinate 
0bca			;       A = X 
0bca			;       E = Y 
0bca			TmsTilePos: 
0bca 16 00		        ld      d, 0 
0bcc 21 00 00		        ld      hl, 0 
0bcf 19			        add     hl, de                  ; Y x 1 
0bd0 29			        add     hl, hl                  ; Y x 2 
0bd1 29			        add     hl, hl                  ; Y x 4 
0bd2 29			        add     hl, hl                  ; Y x 8 
0bd3 29			        add     hl, hl                  ; Y x 16 
0bd4 29			        add     hl, hl                  ; Y x 32 
0bd5 5f			        ld      e, a 
0bd6 19			        add     hl, de                  ; add X for final address 
0bd7 ed 5b 7c 09	        ld      de, (TmsNameAddr)       ; add name table base address 
0bdb 19			        add     hl, de 
0bdc eb			        ex      de, hl 
0bdd c3 6a 0b		        jp      TmsWriteAddr  
0be0			 
0be0			 
0be0			; copy a null-terminated string to VRAM 
0be0			;       HL = ram source address 
0be0			TmsStrOut: 
0be0 7e			        ld      a, (hl) 
0be1 fe 00		        cp      0                       ; return when NULL is encountered 
0be3 c8			        ret     z 
0be4 cd d3 09		        call    TmsRamOut 
0be7 23			        inc     hl 
0be8 c3 e0 0b		        jp      TmsStrOut 
0beb			 
0beb			; repeat a character a certain number of times 
0beb			;       A = character to output 
0beb			;       B = count 
0beb			TmsRepeat: 
0beb cd d3 09		        call    TmsRamOut 
0bee 10 fb		        djnz    TmsRepeat 
0bf0 c9			        ret 
0bf1			 
0bf1			; output a character 
0bf1			;       A = character to output 
0bf1			TmsChrOut:      equ TmsRamOut 
0bf1			 
0bf1			; --------------------------------------------------------------------------- 
0bf1			; bitmap routines 
0bf1			 
0bf1			TmsClearPixel:  equ 0A02Fh              ; cpl, and b 
0bf1			TmsSetPixel:    equ 0B0h                ; nop, or b 
0bf1			 
0bf1			; set operation for TmsPlotPixel to perform 
0bf1			;       HL = pixel operation (TmsClearPixel, TmsSetPixel) 
0bf1			TmsPixelOp: 
0bf1 22 12 0c		        ld      (TmsPixelOpPlaceHolder), hl 
0bf4 c9			        ret 
0bf5			 
0bf5			; set or clear pixel at X, Y position 
0bf5			;       B = Y position 
0bf5			;       C = X position 
0bf5			TmsPlotPixel: 
0bf5 78			        ld      a, b                    ; bail out if Y coord > 191 
0bf6 fe c0		        cp      192 
0bf8 d0			        ret     nc 
0bf9 cd 38 0c		        call    TmsXYAddr               ; get address in DE for X/Y coord in BC 
0bfc 79			        ld      a, c                    ; get lower 3 bits of X coord 
0bfd e6 07		        and     7 
0bff 06 00		        ld      b, 0 
0c01 4f			        ld      c, a 
0c02 21 1c 0c		        ld      hl, TmsMaskLookup       ; address of mask in table 
0c05 09			        add     hl, bc 
0c06 46			        ld      b, (hl)                 ; save mask in B 
0c07 2a 80 09		        ld      hl, (TmsPatternAddr)    ; get base address for pattern table 
0c0a 19			        add     hl, de 
0c0b eb			        ex      de, hl 
0c0c cd 77 0b		        call    TmsReadAddr             ; set read within pattern table 
0c0f cd de 09		        call    TmsRamIn 
0c12			TmsPixelOpPlaceHolder: 
0c12 b0			        or      b                       ; mask bit in previous byte 
0c13 00			        nop                             ; place holder for 2 byte mask operation 
0c14 f5			        push    af 
0c15 cd 6a 0b		        call    TmsWriteAddr            ; set write address within pattern table 
0c18 f1			        pop     af 
0c19 c3 d3 09		        jp      TmsRamOut 
0c1c			 
0c1c			TmsMaskLookup: 
0c1c 80 40 20 10 08 04 02 01	        defb 80h, 40h, 20h, 10h, 8h, 4h, 2h, 1h 
0c24			 
0c24			; set the color for a block of pixels in bitmap mode 
0c24			;       B = Y position 
0c24			;       C = X position 
0c24			;       A = foreground/background color to set 
0c24			TmsPixelColor: 
0c24 f5			        push    af 
0c25 78			        ld      a, b                    ; bail out if Y coord > 191 
0c26 fe c0		        cp      192 
0c28 d0			        ret     nc 
0c29 cd 38 0c		        call    TmsXYAddr               ; get address in DE for X/Y coord in BC 
0c2c 2a 7e 09		        ld      hl, (TmsColorAddr)      ; add the color table base address 
0c2f 19			        add     hl, de 
0c30 eb			        ex      de, hl 
0c31 cd 6a 0b		        call    TmsWriteAddr            ; set write address within color table 
0c34 f1			        pop     af 
0c35 c3 d3 09		        jp      TmsRamOut 
0c38			 
0c38			; calculate address byte containing X/Y coordinate 
0c38			;       B = Y position 
0c38			;       C = X position 
0c38			;       returns address in DE 
0c38			TmsXYAddr: 
0c38 78			        ld      a, b                    ; d = (y / 8) 
0c39 0f			        rrca 
0c3a 0f			        rrca 
0c3b 0f			        rrca 
0c3c e6 1f		        and     1fh 
0c3e 57			        ld      d, a 
0c3f			 
0c3f 79			        ld      a, c                    ; e = (x & f8) 
0c40 e6 f8		        and     0f8h 
0c42 5f			        ld      e, a 
0c43			 
0c43 78			        ld      a, b                    ; e += (y & 7) 
0c44 e6 07		        and     7 
0c46 b3			        or      e 
0c47 5f			        ld      e, a 
0c48 c9			        ret
# End of file tms.asm
0c49			        include "utility.asm" 
0c49			; BDOS and misc utility routines 
0c49			; Copyright 2020 J.B. Langston 
0c49			; 
0c49			; Permission is hereby granted, free of charge, to any person obtaining a  
0c49			; copy of this software and associated documentation files (the "Software"),  
0c49			; to deal in the Software without restriction, including without limitation  
0c49			; the rights to use, copy, modify, merge, publish, distribute, sublicense,  
0c49			; and/or sell copies of the Software, and to permit persons to whom the  
0c49			; Software is furnished to do so, subject to the following conditions: 
0c49			;  
0c49			; The above copyright notice and this permission notice shall be included in 
0c49			; all copies or substantial portions of the Software. 
0c49			;  
0c49			; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
0c49			; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  
0c49			; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
0c49			; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER  
0c49			; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING  
0c49			; FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER  
0c49			; DEALINGS IN THE SOFTWARE. 
0c49			 
0c49			cr:	equ     0dh 
0c49			lf:	equ     0ah 
0c49			eos:	equ     '$' 
0c49			bdos:   equ     5 
0c49			 
0c49			; Output A in hexidecimal 
0c49			hexout: 
0c49 f5			        push    af 
0c4a 1f			        rra 
0c4b 1f			        rra 
0c4c 1f			        rra 
0c4d 1f			        rra 
0c4e cd 5b 0c		        call    nybhex 
0c51 cd 6f 0c		        call    chrout 
0c54 f1			        pop     af 
0c55 cd 5b 0c		        call    nybhex 
0c58 c3 6f 0c		        jp      chrout 
0c5b			 
0c5b			; convert lower nybble of A to hex (also in A) 
0c5b			; from http://map.grauw.nl/sources/external/z80bits.html#5.1 
0c5b			nybhex: 
0c5b f6 f0		        or      0f0h 
0c5d 27			        daa 
0c5e c6 a0		        add     a, 0a0h 
0c60 ce 40		        adc     a, 40h 
0c62 c9			        ret 
0c63			 
0c63			space: 
0c63 3e 20		        ld      a, ' ' 
0c65 c3 6f 0c		        jp      chrout 
0c68			 
0c68			; output a new line 
0c68			crlf: 
0c68 3e 0d		        ld      a, cr 
0c6a cd 6f 0c		        call    chrout 
0c6d 3e 0a		        ld      a, lf 
0c6f			        ; fallthrough 
0c6f			 
0c6f			; output character in A 
0c6f			chrout: 
0c6f 0e 02		        ld      c, 2 
0c71 5f			        ld      e, a 
0c72 c3 05 00		        jp      bdos 
0c75			 
0c75			; output $-terminated string pointed to by DE 
0c75			strout: 
0c75 0e 09		        ld      c, 9 
0c77 c3 05 00		        jp      bdos 
0c7a			 
0c7a			; check for keypress and clear Z flag if pressed 
0c7a			keypress: 
0c7a 0e 06		        ld      c, 6 
0c7c 1e ff		        ld      e, 0ffh 
0c7e cd 05 00		        call    bdos 
0c81 b7			        or      a 
0c82 c9			        ret 
0c83			 
0c83			; blocking keypress, return char 
0c83			getchar: 
0c83 cd 7a 0c		        call    keypress 
0c86 ca 83 0c		        jp      z,getchar 
0c89 c9			        ret
# End of file utility.asm
0c8a			 
0c8a			OldSP: 
0c8a 00 00		        defw 0 
0c8c 00...		        defs 64 
0ccc			Stack:
# End of file modetile.asm
0ccc
