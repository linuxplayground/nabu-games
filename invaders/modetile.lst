# File modetile.asm
0000			; Tile Mode on TMS9918A example program 
0000			; by David Latham - 2023 
0000			; 
0000			; Based on TMS9918A graphics subroutines 
0000			; Copyright 2018-2020 J.B. Langston 
0000			; 
0000			 
0000			        org     100h 
0100			 
0100 00			.bufx:  defb 0x00 
0101 00			.bufy:  defb 0x00 
0102 00			.bufc:  defb 0x00 
0103			 
0103			main: 
0103 ed 73 c0 0f	        ld      (OldSP),sp                      ; save old Stack poitner 
0107 31 02 10		        ld      sp, Stack                       ; set up Stack 
010a			 
010a cd 9b 09		        call    TmsSetWait                      ; set VDP wait loop based on clock multiple 
010d			 
010d cd a6 09		        call    TmsProbe                        ; find what port TMS9918A listens on 
0110 ca 80 01		        jp      z, NoTms 
0113			 
0113 cd 8f 0a		        call    TmsTile                         ; Set up bitmap graphics mode. 
0116			 
0116			        ; load font. 
0116 21 89 01		        ld      hl,TmsFont 
0119 ed 5b 91 09	        ld      de,(TmsPatternAddr) 
011d 01 00 08		        ld      bc,TmsFontLen 
0120 cd 93 0b		        call    TmsWrite 
0123			 
0123			        ; Set background to dark yellow 
0123 3e 0a		        ld      a,TmsDarkYellow 
0125 cd 00 0a		        call    TmsBackground 
0128			 
0128			        ; load all colours to Dark Red on Black 
0128 3e 41		        ld      a,(TmsDarkBlue<<4)|TmsBlack 
012a ed 5b 8f 09	        ld      de,(TmsColorAddr) 
012e 01 00 03		        ld      bc,0x300 
0131 cd a2 0b		        call    TmsFill 
0134			 
0134			.start: 
0134			        ; Load all name cells to be 00 
0134 b7			        or      a 
0135 32 02 01		        ld      (.bufc),a 
0138			 
0138			.loop: 
0138 cd b0 0f		        call    keypress 
013b c2 5a 01		        jp      nz,Exit 
013e 3a 02 01		        ld      a,(.bufc) 
0141 ed 5b 8d 09	        ld      de,(TmsNameAddr) 
0145 01 00 03		        ld      bc,0x300 
0148 cd a2 0b		        call    TmsFill 
014b 3a 02 01		        ld      a,(.bufc) 
014e 3c			        inc     a 
014f fe ff		        cp      0xFF 
0151 ca 34 01		        jp      z,.start 
0154 32 02 01		        ld      (.bufc),a 
0157 c3 38 01		        jp      .loop 
015a			Exit: 
015a cd b9 0f		        call    getchar 
015d ed 7b c0 0f	        ld      sp, (OldSP) 
0161 c7			        rst     0 
0162			 
0162			NoTmsMessage: 
0162 ..			        defb    "TMS9918A not found, aborting!$" 
0180 11 62 01		NoTms:  ld      de, NoTmsMessage 
0183 cd ab 0f		        call    strout 
0186 c3 5a 01		        jp      Exit 
0189			TmsFont: 
0189			        include "TmsFont.asm" 
0189			; 6x8 bitmap font by Oleg Kosenkov 
0189			; Source: https://github.com/idispatch/raster-fonts/blob/master/font-6x8.c 
0189			 
0189			        ; code=0, hex=0x00, ascii="^@" 
0189 00			        defb %00000000 
018a 00			        defb %00000000 
018b 00			        defb %00000000 
018c 00			        defb %00000000 
018d 00			        defb %00000000 
018e 00			        defb %00000000 
018f 00			        defb %00000000 
0190 00			        defb %00000000 
0191			 
0191			        ; code=1, hex=0x01, ascii="^A" 
0191 38			        defb %00111000 
0192 44			        defb %01000100 
0193 6c			        defb %01101100 
0194 44			        defb %01000100 
0195 54			        defb %01010100 
0196 44			        defb %01000100 
0197 38			        defb %00111000 
0198 00			        defb %00000000 
0199			 
0199			        ; code=2, hex=0x02, ascii="^B" 
0199 38			        defb %00111000 
019a 7c			        defb %01111100 
019b 54			        defb %01010100 
019c 7c			        defb %01111100 
019d 44			        defb %01000100 
019e 7c			        defb %01111100 
019f 38			        defb %00111000 
01a0 00			        defb %00000000 
01a1			 
01a1			        ; code=3, hex=0x03, ascii="^C" 
01a1 00			        defb %00000000 
01a2 28			        defb %00101000 
01a3 7c			        defb %01111100 
01a4 7c			        defb %01111100 
01a5 7c			        defb %01111100 
01a6 38			        defb %00111000 
01a7 10			        defb %00010000 
01a8 00			        defb %00000000 
01a9			 
01a9			        ; code=4, hex=0x04, ascii="^D" 
01a9 00			        defb %00000000 
01aa 10			        defb %00010000 
01ab 38			        defb %00111000 
01ac 7c			        defb %01111100 
01ad 7c			        defb %01111100 
01ae 38			        defb %00111000 
01af 10			        defb %00010000 
01b0 00			        defb %00000000 
01b1			 
01b1			        ; code=5, hex=0x05, ascii="^E" 
01b1 10			        defb %00010000 
01b2 38			        defb %00111000 
01b3 38			        defb %00111000 
01b4 10			        defb %00010000 
01b5 7c			        defb %01111100 
01b6 7c			        defb %01111100 
01b7 10			        defb %00010000 
01b8 00			        defb %00000000 
01b9			 
01b9			        ; code=6, hex=0x06, ascii="^F" 
01b9 00			        defb %00000000 
01ba 10			        defb %00010000 
01bb 38			        defb %00111000 
01bc 7c			        defb %01111100 
01bd 7c			        defb %01111100 
01be 10			        defb %00010000 
01bf 38			        defb %00111000 
01c0 00			        defb %00000000 
01c1			 
01c1			        ; code=7, hex=0x07, ascii="^G" 
01c1 00			        defb %00000000 
01c2 00			        defb %00000000 
01c3 00			        defb %00000000 
01c4 30			        defb %00110000 
01c5 30			        defb %00110000 
01c6 00			        defb %00000000 
01c7 00			        defb %00000000 
01c8 00			        defb %00000000 
01c9			 
01c9			        ; code=8, hex=0x08, ascii="^H" 
01c9 fc			        defb %11111100 
01ca fc			        defb %11111100 
01cb fc			        defb %11111100 
01cc cc			        defb %11001100 
01cd cc			        defb %11001100 
01ce fc			        defb %11111100 
01cf fc			        defb %11111100 
01d0 fc			        defb %11111100 
01d1			 
01d1			        ; code=9, hex=0x09, ascii="^I" 
01d1 00			        defb %00000000 
01d2 00			        defb %00000000 
01d3 78			        defb %01111000 
01d4 48			        defb %01001000 
01d5 48			        defb %01001000 
01d6 78			        defb %01111000 
01d7 00			        defb %00000000 
01d8 00			        defb %00000000 
01d9			 
01d9			        ; code=10, hex=0x0A, ascii="^J" 
01d9 fc			        defb %11111100 
01da fc			        defb %11111100 
01db 84			        defb %10000100 
01dc b4			        defb %10110100 
01dd b4			        defb %10110100 
01de 84			        defb %10000100 
01df fc			        defb %11111100 
01e0 fc			        defb %11111100 
01e1			 
01e1			        ; code=11, hex=0x0B, ascii="^K" 
01e1 00			        defb %00000000 
01e2 1c			        defb %00011100 
01e3 0c			        defb %00001100 
01e4 34			        defb %00110100 
01e5 48			        defb %01001000 
01e6 48			        defb %01001000 
01e7 30			        defb %00110000 
01e8 00			        defb %00000000 
01e9			 
01e9			        ; code=12, hex=0x0C, ascii="^L" 
01e9 38			        defb %00111000 
01ea 44			        defb %01000100 
01eb 44			        defb %01000100 
01ec 38			        defb %00111000 
01ed 10			        defb %00010000 
01ee 38			        defb %00111000 
01ef 10			        defb %00010000 
01f0 00			        defb %00000000 
01f1			 
01f1			        ; code=13, hex=0x0D, ascii="^M" 
01f1 10			        defb %00010000 
01f2 18			        defb %00011000 
01f3 14			        defb %00010100 
01f4 10			        defb %00010000 
01f5 30			        defb %00110000 
01f6 70			        defb %01110000 
01f7 60			        defb %01100000 
01f8 00			        defb %00000000 
01f9			 
01f9			        ; code=14, hex=0x0E, ascii="^N" 
01f9 0c			        defb %00001100 
01fa 34			        defb %00110100 
01fb 2c			        defb %00101100 
01fc 34			        defb %00110100 
01fd 2c			        defb %00101100 
01fe 6c			        defb %01101100 
01ff 60			        defb %01100000 
0200 00			        defb %00000000 
0201			 
0201			        ; code=15, hex=0x0F, ascii="^O" 
0201 00			        defb %00000000 
0202 54			        defb %01010100 
0203 38			        defb %00111000 
0204 6c			        defb %01101100 
0205 38			        defb %00111000 
0206 54			        defb %01010100 
0207 00			        defb %00000000 
0208 00			        defb %00000000 
0209			 
0209			        ; code=16, hex=0x10, ascii="^P" 
0209 20			        defb %00100000 
020a 30			        defb %00110000 
020b 38			        defb %00111000 
020c 3c			        defb %00111100 
020d 38			        defb %00111000 
020e 30			        defb %00110000 
020f 20			        defb %00100000 
0210 00			        defb %00000000 
0211			 
0211			        ; code=17, hex=0x11, ascii="^Q" 
0211 08			        defb %00001000 
0212 18			        defb %00011000 
0213 38			        defb %00111000 
0214 78			        defb %01111000 
0215 38			        defb %00111000 
0216 18			        defb %00011000 
0217 08			        defb %00001000 
0218 00			        defb %00000000 
0219			 
0219			        ; code=18, hex=0x12, ascii="^R" 
0219 10			        defb %00010000 
021a 38			        defb %00111000 
021b 7c			        defb %01111100 
021c 10			        defb %00010000 
021d 7c			        defb %01111100 
021e 38			        defb %00111000 
021f 10			        defb %00010000 
0220 00			        defb %00000000 
0221			 
0221			        ; code=19, hex=0x13, ascii="^S" 
0221 28			        defb %00101000 
0222 28			        defb %00101000 
0223 28			        defb %00101000 
0224 28			        defb %00101000 
0225 28			        defb %00101000 
0226 00			        defb %00000000 
0227 28			        defb %00101000 
0228 00			        defb %00000000 
0229			 
0229			        ; code=20, hex=0x14, ascii="^T" 
0229 3c			        defb %00111100 
022a 54			        defb %01010100 
022b 54			        defb %01010100 
022c 34			        defb %00110100 
022d 14			        defb %00010100 
022e 14			        defb %00010100 
022f 14			        defb %00010100 
0230 00			        defb %00000000 
0231			 
0231			        ; code=21, hex=0x15, ascii="^U" 
0231 38			        defb %00111000 
0232 44			        defb %01000100 
0233 30			        defb %00110000 
0234 28			        defb %00101000 
0235 18			        defb %00011000 
0236 44			        defb %01000100 
0237 38			        defb %00111000 
0238 00			        defb %00000000 
0239			 
0239			        ; code=22, hex=0x16, ascii="^V" 
0239 00			        defb %00000000 
023a 00			        defb %00000000 
023b 00			        defb %00000000 
023c 00			        defb %00000000 
023d 00			        defb %00000000 
023e 78			        defb %01111000 
023f 78			        defb %01111000 
0240 00			        defb %00000000 
0241			 
0241			        ; code=23, hex=0x17, ascii="^W" 
0241 10			        defb %00010000 
0242 38			        defb %00111000 
0243 7c			        defb %01111100 
0244 10			        defb %00010000 
0245 7c			        defb %01111100 
0246 38			        defb %00111000 
0247 10			        defb %00010000 
0248 38			        defb %00111000 
0249			 
0249			        ; code=24, hex=0x18, ascii="^X" 
0249 10			        defb %00010000 
024a 38			        defb %00111000 
024b 7c			        defb %01111100 
024c 10			        defb %00010000 
024d 10			        defb %00010000 
024e 10			        defb %00010000 
024f 10			        defb %00010000 
0250 00			        defb %00000000 
0251			 
0251			        ; code=25, hex=0x19, ascii="^Y" 
0251 10			        defb %00010000 
0252 10			        defb %00010000 
0253 10			        defb %00010000 
0254 10			        defb %00010000 
0255 7c			        defb %01111100 
0256 38			        defb %00111000 
0257 10			        defb %00010000 
0258 00			        defb %00000000 
0259			 
0259			        ; code=26, hex=0x1A, ascii="^Z" 
0259 00			        defb %00000000 
025a 10			        defb %00010000 
025b 18			        defb %00011000 
025c 7c			        defb %01111100 
025d 18			        defb %00011000 
025e 10			        defb %00010000 
025f 00			        defb %00000000 
0260 00			        defb %00000000 
0261			 
0261			        ; code=27, hex=0x1B, ascii="^[" 
0261 00			        defb %00000000 
0262 10			        defb %00010000 
0263 30			        defb %00110000 
0264 7c			        defb %01111100 
0265 30			        defb %00110000 
0266 10			        defb %00010000 
0267 00			        defb %00000000 
0268 00			        defb %00000000 
0269			 
0269			        ; code=28, hex=0x1C, ascii="^\" 
0269 00			        defb %00000000 
026a 00			        defb %00000000 
026b 00			        defb %00000000 
026c 40			        defb %01000000 
026d 40			        defb %01000000 
026e 40			        defb %01000000 
026f 7c			        defb %01111100 
0270 00			        defb %00000000 
0271			 
0271			        ; code=29, hex=0x1D, ascii="^]" 
0271 00			        defb %00000000 
0272 28			        defb %00101000 
0273 28			        defb %00101000 
0274 7c			        defb %01111100 
0275 28			        defb %00101000 
0276 28			        defb %00101000 
0277 00			        defb %00000000 
0278 00			        defb %00000000 
0279			 
0279			        ; code=30, hex=0x1E, ascii="^^" 
0279 10			        defb %00010000 
027a 10			        defb %00010000 
027b 38			        defb %00111000 
027c 38			        defb %00111000 
027d 7c			        defb %01111100 
027e 7c			        defb %01111100 
027f 00			        defb %00000000 
0280 00			        defb %00000000 
0281			 
0281			        ; code=31, hex=0x1F, ascii="^_" 
0281 7c			        defb %01111100 
0282 7c			        defb %01111100 
0283 38			        defb %00111000 
0284 38			        defb %00111000 
0285 10			        defb %00010000 
0286 10			        defb %00010000 
0287 00			        defb %00000000 
0288 00			        defb %00000000 
0289			 
0289			        ; code=32, hex=0x20, ascii=" " 
0289 00			        defb %00000000 
028a 00			        defb %00000000 
028b 00			        defb %00000000 
028c 00			        defb %00000000 
028d 00			        defb %00000000 
028e 00			        defb %00000000 
028f 00			        defb %00000000 
0290 00			        defb %00000000 
0291			 
0291			        ; code=33, hex=0x21, ascii="!" 
0291 10			        defb %00010000 
0292 38			        defb %00111000 
0293 38			        defb %00111000 
0294 10			        defb %00010000 
0295 10			        defb %00010000 
0296 00			        defb %00000000 
0297 10			        defb %00010000 
0298 00			        defb %00000000 
0299			 
0299			        ; code=34, hex=0x22, ascii=""" 
0299 6c			        defb %01101100 
029a 6c			        defb %01101100 
029b 48			        defb %01001000 
029c 00			        defb %00000000 
029d 00			        defb %00000000 
029e 00			        defb %00000000 
029f 00			        defb %00000000 
02a0 00			        defb %00000000 
02a1			 
02a1			        ; code=35, hex=0x23, ascii="#" 
02a1 00			        defb %00000000 
02a2 28			        defb %00101000 
02a3 7c			        defb %01111100 
02a4 28			        defb %00101000 
02a5 28			        defb %00101000 
02a6 7c			        defb %01111100 
02a7 28			        defb %00101000 
02a8 00			        defb %00000000 
02a9			 
02a9			        ; code=36, hex=0x24, ascii="$" 
02a9 20			        defb %00100000 
02aa 38			        defb %00111000 
02ab 40			        defb %01000000 
02ac 30			        defb %00110000 
02ad 08			        defb %00001000 
02ae 70			        defb %01110000 
02af 10			        defb %00010000 
02b0 00			        defb %00000000 
02b1			 
02b1			        ; code=37, hex=0x25, ascii="%" 
02b1 64			        defb %01100100 
02b2 64			        defb %01100100 
02b3 08			        defb %00001000 
02b4 10			        defb %00010000 
02b5 20			        defb %00100000 
02b6 4c			        defb %01001100 
02b7 4c			        defb %01001100 
02b8 00			        defb %00000000 
02b9			 
02b9			        ; code=38, hex=0x26, ascii="&" 
02b9 20			        defb %00100000 
02ba 50			        defb %01010000 
02bb 50			        defb %01010000 
02bc 20			        defb %00100000 
02bd 54			        defb %01010100 
02be 48			        defb %01001000 
02bf 34			        defb %00110100 
02c0 00			        defb %00000000 
02c1			 
02c1			        ; code=39, hex=0x27, ascii="'" 
02c1 30			        defb %00110000 
02c2 30			        defb %00110000 
02c3 20			        defb %00100000 
02c4 00			        defb %00000000 
02c5 00			        defb %00000000 
02c6 00			        defb %00000000 
02c7 00			        defb %00000000 
02c8 00			        defb %00000000 
02c9			 
02c9			        ; code=40, hex=0x28, ascii="(" 
02c9 10			        defb %00010000 
02ca 20			        defb %00100000 
02cb 20			        defb %00100000 
02cc 20			        defb %00100000 
02cd 20			        defb %00100000 
02ce 20			        defb %00100000 
02cf 10			        defb %00010000 
02d0 00			        defb %00000000 
02d1			 
02d1			        ; code=41, hex=0x29, ascii=")" 
02d1 20			        defb %00100000 
02d2 10			        defb %00010000 
02d3 10			        defb %00010000 
02d4 10			        defb %00010000 
02d5 10			        defb %00010000 
02d6 10			        defb %00010000 
02d7 20			        defb %00100000 
02d8 00			        defb %00000000 
02d9			 
02d9			        ; code=42, hex=0x2A, ascii="*" 
02d9 00			        defb %00000000 
02da 28			        defb %00101000 
02db 38			        defb %00111000 
02dc 7c			        defb %01111100 
02dd 38			        defb %00111000 
02de 28			        defb %00101000 
02df 00			        defb %00000000 
02e0 00			        defb %00000000 
02e1			 
02e1			        ; code=43, hex=0x2B, ascii="+" 
02e1 00			        defb %00000000 
02e2 10			        defb %00010000 
02e3 10			        defb %00010000 
02e4 7c			        defb %01111100 
02e5 10			        defb %00010000 
02e6 10			        defb %00010000 
02e7 00			        defb %00000000 
02e8 00			        defb %00000000 
02e9			 
02e9			        ; code=44, hex=0x2C, ascii="," 
02e9 00			        defb %00000000 
02ea 00			        defb %00000000 
02eb 00			        defb %00000000 
02ec 00			        defb %00000000 
02ed 00			        defb %00000000 
02ee 30			        defb %00110000 
02ef 30			        defb %00110000 
02f0 20			        defb %00100000 
02f1			 
02f1			        ; code=45, hex=0x2D, ascii="-" 
02f1 00			        defb %00000000 
02f2 00			        defb %00000000 
02f3 00			        defb %00000000 
02f4 7c			        defb %01111100 
02f5 00			        defb %00000000 
02f6 00			        defb %00000000 
02f7 00			        defb %00000000 
02f8 00			        defb %00000000 
02f9			 
02f9			        ; code=46, hex=0x2E, ascii="." 
02f9 00			        defb %00000000 
02fa 00			        defb %00000000 
02fb 00			        defb %00000000 
02fc 00			        defb %00000000 
02fd 00			        defb %00000000 
02fe 30			        defb %00110000 
02ff 30			        defb %00110000 
0300 00			        defb %00000000 
0301			 
0301			        ; code=47, hex=0x2F, ascii="/" 
0301 00			        defb %00000000 
0302 04			        defb %00000100 
0303 08			        defb %00001000 
0304 10			        defb %00010000 
0305 20			        defb %00100000 
0306 40			        defb %01000000 
0307 00			        defb %00000000 
0308 00			        defb %00000000 
0309			 
0309			        ; code=48, hex=0x30, ascii="0" 
0309 38			        defb %00111000 
030a 44			        defb %01000100 
030b 4c			        defb %01001100 
030c 54			        defb %01010100 
030d 64			        defb %01100100 
030e 44			        defb %01000100 
030f 38			        defb %00111000 
0310 00			        defb %00000000 
0311			 
0311			        ; code=49, hex=0x31, ascii="1" 
0311 10			        defb %00010000 
0312 30			        defb %00110000 
0313 10			        defb %00010000 
0314 10			        defb %00010000 
0315 10			        defb %00010000 
0316 10			        defb %00010000 
0317 38			        defb %00111000 
0318 00			        defb %00000000 
0319			 
0319			        ; code=50, hex=0x32, ascii="2" 
0319 38			        defb %00111000 
031a 44			        defb %01000100 
031b 04			        defb %00000100 
031c 18			        defb %00011000 
031d 20			        defb %00100000 
031e 40			        defb %01000000 
031f 7c			        defb %01111100 
0320 00			        defb %00000000 
0321			 
0321			        ; code=51, hex=0x33, ascii="3" 
0321 38			        defb %00111000 
0322 44			        defb %01000100 
0323 04			        defb %00000100 
0324 38			        defb %00111000 
0325 04			        defb %00000100 
0326 44			        defb %01000100 
0327 38			        defb %00111000 
0328 00			        defb %00000000 
0329			 
0329			        ; code=52, hex=0x34, ascii="4" 
0329 08			        defb %00001000 
032a 18			        defb %00011000 
032b 28			        defb %00101000 
032c 48			        defb %01001000 
032d 7c			        defb %01111100 
032e 08			        defb %00001000 
032f 08			        defb %00001000 
0330 00			        defb %00000000 
0331			 
0331			        ; code=53, hex=0x35, ascii="5" 
0331 7c			        defb %01111100 
0332 40			        defb %01000000 
0333 40			        defb %01000000 
0334 78			        defb %01111000 
0335 04			        defb %00000100 
0336 44			        defb %01000100 
0337 38			        defb %00111000 
0338 00			        defb %00000000 
0339			 
0339			        ; code=54, hex=0x36, ascii="6" 
0339 18			        defb %00011000 
033a 20			        defb %00100000 
033b 40			        defb %01000000 
033c 78			        defb %01111000 
033d 44			        defb %01000100 
033e 44			        defb %01000100 
033f 38			        defb %00111000 
0340 00			        defb %00000000 
0341			 
0341			        ; code=55, hex=0x37, ascii="7" 
0341 7c			        defb %01111100 
0342 04			        defb %00000100 
0343 08			        defb %00001000 
0344 10			        defb %00010000 
0345 20			        defb %00100000 
0346 20			        defb %00100000 
0347 20			        defb %00100000 
0348 00			        defb %00000000 
0349			 
0349			        ; code=56, hex=0x38, ascii="8" 
0349 38			        defb %00111000 
034a 44			        defb %01000100 
034b 44			        defb %01000100 
034c 38			        defb %00111000 
034d 44			        defb %01000100 
034e 44			        defb %01000100 
034f 38			        defb %00111000 
0350 00			        defb %00000000 
0351			 
0351			        ; code=57, hex=0x39, ascii="9" 
0351 38			        defb %00111000 
0352 44			        defb %01000100 
0353 44			        defb %01000100 
0354 3c			        defb %00111100 
0355 04			        defb %00000100 
0356 08			        defb %00001000 
0357 30			        defb %00110000 
0358 00			        defb %00000000 
0359			 
0359			        ; code=58, hex=0x3A, ascii=":" 
0359 00			        defb %00000000 
035a 00			        defb %00000000 
035b 30			        defb %00110000 
035c 30			        defb %00110000 
035d 00			        defb %00000000 
035e 30			        defb %00110000 
035f 30			        defb %00110000 
0360 00			        defb %00000000 
0361			 
0361			        ; code=59, hex=0x3B, ascii=";" 
0361 00			        defb %00000000 
0362 00			        defb %00000000 
0363 30			        defb %00110000 
0364 30			        defb %00110000 
0365 00			        defb %00000000 
0366 30			        defb %00110000 
0367 30			        defb %00110000 
0368 20			        defb %00100000 
0369			 
0369			        ; code=60, hex=0x3C, ascii="<" 
0369 08			        defb %00001000 
036a 10			        defb %00010000 
036b 20			        defb %00100000 
036c 40			        defb %01000000 
036d 20			        defb %00100000 
036e 10			        defb %00010000 
036f 08			        defb %00001000 
0370 00			        defb %00000000 
0371			 
0371			        ; code=61, hex=0x3D, ascii="=" 
0371 00			        defb %00000000 
0372 00			        defb %00000000 
0373 7c			        defb %01111100 
0374 00			        defb %00000000 
0375 00			        defb %00000000 
0376 7c			        defb %01111100 
0377 00			        defb %00000000 
0378 00			        defb %00000000 
0379			 
0379			        ; code=62, hex=0x3E, ascii=">" 
0379 20			        defb %00100000 
037a 10			        defb %00010000 
037b 08			        defb %00001000 
037c 04			        defb %00000100 
037d 08			        defb %00001000 
037e 10			        defb %00010000 
037f 20			        defb %00100000 
0380 00			        defb %00000000 
0381			 
0381			        ; code=63, hex=0x3F, ascii="?" 
0381 38			        defb %00111000 
0382 44			        defb %01000100 
0383 04			        defb %00000100 
0384 18			        defb %00011000 
0385 10			        defb %00010000 
0386 00			        defb %00000000 
0387 10			        defb %00010000 
0388 00			        defb %00000000 
0389			 
0389			        ; code=64, hex=0x40, ascii="@" 
0389 38			        defb %00111000 
038a 44			        defb %01000100 
038b 5c			        defb %01011100 
038c 54			        defb %01010100 
038d 5c			        defb %01011100 
038e 40			        defb %01000000 
038f 38			        defb %00111000 
0390 00			        defb %00000000 
0391			 
0391			        ; code=65, hex=0x41, ascii="A" 
0391 38			        defb %00111000 
0392 44			        defb %01000100 
0393 44			        defb %01000100 
0394 44			        defb %01000100 
0395 7c			        defb %01111100 
0396 44			        defb %01000100 
0397 44			        defb %01000100 
0398 00			        defb %00000000 
0399			 
0399			        ; code=66, hex=0x42, ascii="B" 
0399 78			        defb %01111000 
039a 44			        defb %01000100 
039b 44			        defb %01000100 
039c 78			        defb %01111000 
039d 44			        defb %01000100 
039e 44			        defb %01000100 
039f 78			        defb %01111000 
03a0 00			        defb %00000000 
03a1			 
03a1			        ; code=67, hex=0x43, ascii="C" 
03a1 38			        defb %00111000 
03a2 44			        defb %01000100 
03a3 40			        defb %01000000 
03a4 40			        defb %01000000 
03a5 40			        defb %01000000 
03a6 44			        defb %01000100 
03a7 38			        defb %00111000 
03a8 00			        defb %00000000 
03a9			 
03a9			        ; code=68, hex=0x44, ascii="D" 
03a9 78			        defb %01111000 
03aa 44			        defb %01000100 
03ab 44			        defb %01000100 
03ac 44			        defb %01000100 
03ad 44			        defb %01000100 
03ae 44			        defb %01000100 
03af 78			        defb %01111000 
03b0 00			        defb %00000000 
03b1			 
03b1			        ; code=69, hex=0x45, ascii="E" 
03b1 7c			        defb %01111100 
03b2 40			        defb %01000000 
03b3 40			        defb %01000000 
03b4 78			        defb %01111000 
03b5 40			        defb %01000000 
03b6 40			        defb %01000000 
03b7 7c			        defb %01111100 
03b8 00			        defb %00000000 
03b9			 
03b9			        ; code=70, hex=0x46, ascii="F" 
03b9 7c			        defb %01111100 
03ba 40			        defb %01000000 
03bb 40			        defb %01000000 
03bc 78			        defb %01111000 
03bd 40			        defb %01000000 
03be 40			        defb %01000000 
03bf 40			        defb %01000000 
03c0 00			        defb %00000000 
03c1			 
03c1			        ; code=71, hex=0x47, ascii="G" 
03c1 38			        defb %00111000 
03c2 44			        defb %01000100 
03c3 40			        defb %01000000 
03c4 5c			        defb %01011100 
03c5 44			        defb %01000100 
03c6 44			        defb %01000100 
03c7 3c			        defb %00111100 
03c8 00			        defb %00000000 
03c9			 
03c9			        ; code=72, hex=0x48, ascii="H" 
03c9 44			        defb %01000100 
03ca 44			        defb %01000100 
03cb 44			        defb %01000100 
03cc 7c			        defb %01111100 
03cd 44			        defb %01000100 
03ce 44			        defb %01000100 
03cf 44			        defb %01000100 
03d0 00			        defb %00000000 
03d1			 
03d1			        ; code=73, hex=0x49, ascii="I" 
03d1 38			        defb %00111000 
03d2 10			        defb %00010000 
03d3 10			        defb %00010000 
03d4 10			        defb %00010000 
03d5 10			        defb %00010000 
03d6 10			        defb %00010000 
03d7 38			        defb %00111000 
03d8 00			        defb %00000000 
03d9			 
03d9			        ; code=74, hex=0x4A, ascii="J" 
03d9 04			        defb %00000100 
03da 04			        defb %00000100 
03db 04			        defb %00000100 
03dc 04			        defb %00000100 
03dd 44			        defb %01000100 
03de 44			        defb %01000100 
03df 38			        defb %00111000 
03e0 00			        defb %00000000 
03e1			 
03e1			        ; code=75, hex=0x4B, ascii="K" 
03e1 44			        defb %01000100 
03e2 48			        defb %01001000 
03e3 50			        defb %01010000 
03e4 60			        defb %01100000 
03e5 50			        defb %01010000 
03e6 48			        defb %01001000 
03e7 44			        defb %01000100 
03e8 00			        defb %00000000 
03e9			 
03e9			        ; code=76, hex=0x4C, ascii="L" 
03e9 40			        defb %01000000 
03ea 40			        defb %01000000 
03eb 40			        defb %01000000 
03ec 40			        defb %01000000 
03ed 40			        defb %01000000 
03ee 40			        defb %01000000 
03ef 7c			        defb %01111100 
03f0 00			        defb %00000000 
03f1			 
03f1			        ; code=77, hex=0x4D, ascii="M" 
03f1 44			        defb %01000100 
03f2 6c			        defb %01101100 
03f3 54			        defb %01010100 
03f4 44			        defb %01000100 
03f5 44			        defb %01000100 
03f6 44			        defb %01000100 
03f7 44			        defb %01000100 
03f8 00			        defb %00000000 
03f9			 
03f9			        ; code=78, hex=0x4E, ascii="N" 
03f9 44			        defb %01000100 
03fa 64			        defb %01100100 
03fb 54			        defb %01010100 
03fc 4c			        defb %01001100 
03fd 44			        defb %01000100 
03fe 44			        defb %01000100 
03ff 44			        defb %01000100 
0400 00			        defb %00000000 
0401			 
0401			        ; code=79, hex=0x4F, ascii="O" 
0401 38			        defb %00111000 
0402 44			        defb %01000100 
0403 44			        defb %01000100 
0404 44			        defb %01000100 
0405 44			        defb %01000100 
0406 44			        defb %01000100 
0407 38			        defb %00111000 
0408 00			        defb %00000000 
0409			 
0409			        ; code=80, hex=0x50, ascii="P" 
0409 78			        defb %01111000 
040a 44			        defb %01000100 
040b 44			        defb %01000100 
040c 78			        defb %01111000 
040d 40			        defb %01000000 
040e 40			        defb %01000000 
040f 40			        defb %01000000 
0410 00			        defb %00000000 
0411			 
0411			        ; code=81, hex=0x51, ascii="Q" 
0411 38			        defb %00111000 
0412 44			        defb %01000100 
0413 44			        defb %01000100 
0414 44			        defb %01000100 
0415 54			        defb %01010100 
0416 48			        defb %01001000 
0417 34			        defb %00110100 
0418 00			        defb %00000000 
0419			 
0419			        ; code=82, hex=0x52, ascii="R" 
0419 78			        defb %01111000 
041a 44			        defb %01000100 
041b 44			        defb %01000100 
041c 78			        defb %01111000 
041d 48			        defb %01001000 
041e 44			        defb %01000100 
041f 44			        defb %01000100 
0420 00			        defb %00000000 
0421			 
0421			        ; code=83, hex=0x53, ascii="S" 
0421 38			        defb %00111000 
0422 44			        defb %01000100 
0423 40			        defb %01000000 
0424 38			        defb %00111000 
0425 04			        defb %00000100 
0426 44			        defb %01000100 
0427 38			        defb %00111000 
0428 00			        defb %00000000 
0429			 
0429			        ; code=84, hex=0x54, ascii="T" 
0429 7c			        defb %01111100 
042a 10			        defb %00010000 
042b 10			        defb %00010000 
042c 10			        defb %00010000 
042d 10			        defb %00010000 
042e 10			        defb %00010000 
042f 10			        defb %00010000 
0430 00			        defb %00000000 
0431			 
0431			        ; code=85, hex=0x55, ascii="U" 
0431 44			        defb %01000100 
0432 44			        defb %01000100 
0433 44			        defb %01000100 
0434 44			        defb %01000100 
0435 44			        defb %01000100 
0436 44			        defb %01000100 
0437 38			        defb %00111000 
0438 00			        defb %00000000 
0439			 
0439			        ; code=86, hex=0x56, ascii="V" 
0439 44			        defb %01000100 
043a 44			        defb %01000100 
043b 44			        defb %01000100 
043c 44			        defb %01000100 
043d 44			        defb %01000100 
043e 28			        defb %00101000 
043f 10			        defb %00010000 
0440 00			        defb %00000000 
0441			 
0441			        ; code=87, hex=0x57, ascii="W" 
0441 44			        defb %01000100 
0442 44			        defb %01000100 
0443 54			        defb %01010100 
0444 54			        defb %01010100 
0445 54			        defb %01010100 
0446 54			        defb %01010100 
0447 28			        defb %00101000 
0448 00			        defb %00000000 
0449			 
0449			        ; code=88, hex=0x58, ascii="X" 
0449 44			        defb %01000100 
044a 44			        defb %01000100 
044b 28			        defb %00101000 
044c 10			        defb %00010000 
044d 28			        defb %00101000 
044e 44			        defb %01000100 
044f 44			        defb %01000100 
0450 00			        defb %00000000 
0451			 
0451			        ; code=89, hex=0x59, ascii="Y" 
0451 44			        defb %01000100 
0452 44			        defb %01000100 
0453 44			        defb %01000100 
0454 28			        defb %00101000 
0455 10			        defb %00010000 
0456 10			        defb %00010000 
0457 10			        defb %00010000 
0458 00			        defb %00000000 
0459			 
0459			        ; code=90, hex=0x5A, ascii="Z" 
0459 78			        defb %01111000 
045a 08			        defb %00001000 
045b 10			        defb %00010000 
045c 20			        defb %00100000 
045d 40			        defb %01000000 
045e 40			        defb %01000000 
045f 78			        defb %01111000 
0460 00			        defb %00000000 
0461			 
0461			        ; code=91, hex=0x5B, ascii="[" 
0461 38			        defb %00111000 
0462 20			        defb %00100000 
0463 20			        defb %00100000 
0464 20			        defb %00100000 
0465 20			        defb %00100000 
0466 20			        defb %00100000 
0467 38			        defb %00111000 
0468 00			        defb %00000000 
0469			 
0469			        ; code=92, hex=0x5C, ascii="\" 
0469 00			        defb %00000000 
046a 40			        defb %01000000 
046b 20			        defb %00100000 
046c 10			        defb %00010000 
046d 08			        defb %00001000 
046e 04			        defb %00000100 
046f 00			        defb %00000000 
0470 00			        defb %00000000 
0471			 
0471			        ; code=93, hex=0x5D, ascii="]" 
0471 38			        defb %00111000 
0472 08			        defb %00001000 
0473 08			        defb %00001000 
0474 08			        defb %00001000 
0475 08			        defb %00001000 
0476 08			        defb %00001000 
0477 38			        defb %00111000 
0478 00			        defb %00000000 
0479			 
0479			        ; code=94, hex=0x5E, ascii="^" 
0479 10			        defb %00010000 
047a 28			        defb %00101000 
047b 44			        defb %01000100 
047c 00			        defb %00000000 
047d 00			        defb %00000000 
047e 00			        defb %00000000 
047f 00			        defb %00000000 
0480 00			        defb %00000000 
0481			 
0481			        ; code=95, hex=0x5F, ascii="_" 
0481 00			        defb %00000000 
0482 00			        defb %00000000 
0483 00			        defb %00000000 
0484 00			        defb %00000000 
0485 00			        defb %00000000 
0486 00			        defb %00000000 
0487 00			        defb %00000000 
0488 fc			        defb %11111100 
0489			 
0489			        ; code=96, hex=0x60, ascii="`" 
0489 30			        defb %00110000 
048a 30			        defb %00110000 
048b 10			        defb %00010000 
048c 00			        defb %00000000 
048d 00			        defb %00000000 
048e 00			        defb %00000000 
048f 00			        defb %00000000 
0490 00			        defb %00000000 
0491			 
0491			        ; code=97, hex=0x61, ascii="a" 
0491 00			        defb %00000000 
0492 00			        defb %00000000 
0493 38			        defb %00111000 
0494 04			        defb %00000100 
0495 3c			        defb %00111100 
0496 44			        defb %01000100 
0497 3c			        defb %00111100 
0498 00			        defb %00000000 
0499			 
0499			        ; code=98, hex=0x62, ascii="b" 
0499 40			        defb %01000000 
049a 40			        defb %01000000 
049b 78			        defb %01111000 
049c 44			        defb %01000100 
049d 44			        defb %01000100 
049e 44			        defb %01000100 
049f 78			        defb %01111000 
04a0 00			        defb %00000000 
04a1			 
04a1			        ; code=99, hex=0x63, ascii="c" 
04a1 00			        defb %00000000 
04a2 00			        defb %00000000 
04a3 38			        defb %00111000 
04a4 44			        defb %01000100 
04a5 40			        defb %01000000 
04a6 44			        defb %01000100 
04a7 38			        defb %00111000 
04a8 00			        defb %00000000 
04a9			 
04a9			        ; code=100, hex=0x64, ascii="d" 
04a9 04			        defb %00000100 
04aa 04			        defb %00000100 
04ab 3c			        defb %00111100 
04ac 44			        defb %01000100 
04ad 44			        defb %01000100 
04ae 44			        defb %01000100 
04af 3c			        defb %00111100 
04b0 00			        defb %00000000 
04b1			 
04b1			        ; code=101, hex=0x65, ascii="e" 
04b1 00			        defb %00000000 
04b2 00			        defb %00000000 
04b3 38			        defb %00111000 
04b4 44			        defb %01000100 
04b5 78			        defb %01111000 
04b6 40			        defb %01000000 
04b7 38			        defb %00111000 
04b8 00			        defb %00000000 
04b9			 
04b9			        ; code=102, hex=0x66, ascii="f" 
04b9 18			        defb %00011000 
04ba 20			        defb %00100000 
04bb 20			        defb %00100000 
04bc 78			        defb %01111000 
04bd 20			        defb %00100000 
04be 20			        defb %00100000 
04bf 20			        defb %00100000 
04c0 00			        defb %00000000 
04c1			 
04c1			        ; code=103, hex=0x67, ascii="g" 
04c1 00			        defb %00000000 
04c2 00			        defb %00000000 
04c3 3c			        defb %00111100 
04c4 44			        defb %01000100 
04c5 44			        defb %01000100 
04c6 3c			        defb %00111100 
04c7 04			        defb %00000100 
04c8 38			        defb %00111000 
04c9			 
04c9			        ; code=104, hex=0x68, ascii="h" 
04c9 40			        defb %01000000 
04ca 40			        defb %01000000 
04cb 70			        defb %01110000 
04cc 48			        defb %01001000 
04cd 48			        defb %01001000 
04ce 48			        defb %01001000 
04cf 48			        defb %01001000 
04d0 00			        defb %00000000 
04d1			 
04d1			        ; code=105, hex=0x69, ascii="i" 
04d1 10			        defb %00010000 
04d2 00			        defb %00000000 
04d3 10			        defb %00010000 
04d4 10			        defb %00010000 
04d5 10			        defb %00010000 
04d6 10			        defb %00010000 
04d7 18			        defb %00011000 
04d8 00			        defb %00000000 
04d9			 
04d9			        ; code=106, hex=0x6A, ascii="j" 
04d9 08			        defb %00001000 
04da 00			        defb %00000000 
04db 18			        defb %00011000 
04dc 08			        defb %00001000 
04dd 08			        defb %00001000 
04de 08			        defb %00001000 
04df 48			        defb %01001000 
04e0 30			        defb %00110000 
04e1			 
04e1			        ; code=107, hex=0x6B, ascii="k" 
04e1 40			        defb %01000000 
04e2 40			        defb %01000000 
04e3 48			        defb %01001000 
04e4 50			        defb %01010000 
04e5 60			        defb %01100000 
04e6 50			        defb %01010000 
04e7 48			        defb %01001000 
04e8 00			        defb %00000000 
04e9			 
04e9			        ; code=108, hex=0x6C, ascii="l" 
04e9 10			        defb %00010000 
04ea 10			        defb %00010000 
04eb 10			        defb %00010000 
04ec 10			        defb %00010000 
04ed 10			        defb %00010000 
04ee 10			        defb %00010000 
04ef 18			        defb %00011000 
04f0 00			        defb %00000000 
04f1			 
04f1			        ; code=109, hex=0x6D, ascii="m" 
04f1 00			        defb %00000000 
04f2 00			        defb %00000000 
04f3 68			        defb %01101000 
04f4 54			        defb %01010100 
04f5 54			        defb %01010100 
04f6 44			        defb %01000100 
04f7 44			        defb %01000100 
04f8 00			        defb %00000000 
04f9			 
04f9			        ; code=110, hex=0x6E, ascii="n" 
04f9 00			        defb %00000000 
04fa 00			        defb %00000000 
04fb 70			        defb %01110000 
04fc 48			        defb %01001000 
04fd 48			        defb %01001000 
04fe 48			        defb %01001000 
04ff 48			        defb %01001000 
0500 00			        defb %00000000 
0501			 
0501			        ; code=111, hex=0x6F, ascii="o" 
0501 00			        defb %00000000 
0502 00			        defb %00000000 
0503 38			        defb %00111000 
0504 44			        defb %01000100 
0505 44			        defb %01000100 
0506 44			        defb %01000100 
0507 38			        defb %00111000 
0508 00			        defb %00000000 
0509			 
0509			        ; code=112, hex=0x70, ascii="p" 
0509 00			        defb %00000000 
050a 00			        defb %00000000 
050b 78			        defb %01111000 
050c 44			        defb %01000100 
050d 44			        defb %01000100 
050e 44			        defb %01000100 
050f 78			        defb %01111000 
0510 40			        defb %01000000 
0511			 
0511			        ; code=113, hex=0x71, ascii="q" 
0511 00			        defb %00000000 
0512 00			        defb %00000000 
0513 3c			        defb %00111100 
0514 44			        defb %01000100 
0515 44			        defb %01000100 
0516 44			        defb %01000100 
0517 3c			        defb %00111100 
0518 04			        defb %00000100 
0519			 
0519			        ; code=114, hex=0x72, ascii="r" 
0519 00			        defb %00000000 
051a 00			        defb %00000000 
051b 58			        defb %01011000 
051c 24			        defb %00100100 
051d 20			        defb %00100000 
051e 20			        defb %00100000 
051f 70			        defb %01110000 
0520 00			        defb %00000000 
0521			 
0521			        ; code=115, hex=0x73, ascii="s" 
0521 00			        defb %00000000 
0522 00			        defb %00000000 
0523 38			        defb %00111000 
0524 40			        defb %01000000 
0525 38			        defb %00111000 
0526 04			        defb %00000100 
0527 38			        defb %00111000 
0528 00			        defb %00000000 
0529			 
0529			        ; code=116, hex=0x74, ascii="t" 
0529 00			        defb %00000000 
052a 20			        defb %00100000 
052b 78			        defb %01111000 
052c 20			        defb %00100000 
052d 20			        defb %00100000 
052e 28			        defb %00101000 
052f 10			        defb %00010000 
0530 00			        defb %00000000 
0531			 
0531			        ; code=117, hex=0x75, ascii="u" 
0531 00			        defb %00000000 
0532 00			        defb %00000000 
0533 48			        defb %01001000 
0534 48			        defb %01001000 
0535 48			        defb %01001000 
0536 58			        defb %01011000 
0537 28			        defb %00101000 
0538 00			        defb %00000000 
0539			 
0539			        ; code=118, hex=0x76, ascii="v" 
0539 00			        defb %00000000 
053a 00			        defb %00000000 
053b 44			        defb %01000100 
053c 44			        defb %01000100 
053d 44			        defb %01000100 
053e 28			        defb %00101000 
053f 10			        defb %00010000 
0540 00			        defb %00000000 
0541			 
0541			        ; code=119, hex=0x77, ascii="w" 
0541 00			        defb %00000000 
0542 00			        defb %00000000 
0543 44			        defb %01000100 
0544 44			        defb %01000100 
0545 54			        defb %01010100 
0546 7c			        defb %01111100 
0547 28			        defb %00101000 
0548 00			        defb %00000000 
0549			 
0549			        ; code=120, hex=0x78, ascii="x" 
0549 00			        defb %00000000 
054a 00			        defb %00000000 
054b 48			        defb %01001000 
054c 48			        defb %01001000 
054d 30			        defb %00110000 
054e 48			        defb %01001000 
054f 48			        defb %01001000 
0550 00			        defb %00000000 
0551			 
0551			        ; code=121, hex=0x79, ascii="y" 
0551 00			        defb %00000000 
0552 00			        defb %00000000 
0553 48			        defb %01001000 
0554 48			        defb %01001000 
0555 48			        defb %01001000 
0556 38			        defb %00111000 
0557 10			        defb %00010000 
0558 60			        defb %01100000 
0559			 
0559			        ; code=122, hex=0x7A, ascii="z" 
0559 00			        defb %00000000 
055a 00			        defb %00000000 
055b 78			        defb %01111000 
055c 08			        defb %00001000 
055d 30			        defb %00110000 
055e 40			        defb %01000000 
055f 78			        defb %01111000 
0560 00			        defb %00000000 
0561			 
0561			        ; code=123, hex=0x7B, ascii="{" 
0561 18			        defb %00011000 
0562 20			        defb %00100000 
0563 20			        defb %00100000 
0564 60			        defb %01100000 
0565 20			        defb %00100000 
0566 20			        defb %00100000 
0567 18			        defb %00011000 
0568 00			        defb %00000000 
0569			 
0569			        ; code=124, hex=0x7C, ascii="|" 
0569 10			        defb %00010000 
056a 10			        defb %00010000 
056b 10			        defb %00010000 
056c 00			        defb %00000000 
056d 10			        defb %00010000 
056e 10			        defb %00010000 
056f 10			        defb %00010000 
0570 00			        defb %00000000 
0571			 
0571			        ; code=125, hex=0x7D, ascii="}" 
0571 30			        defb %00110000 
0572 08			        defb %00001000 
0573 08			        defb %00001000 
0574 0c			        defb %00001100 
0575 08			        defb %00001000 
0576 08			        defb %00001000 
0577 30			        defb %00110000 
0578 00			        defb %00000000 
0579			 
0579			        ; code=126, hex=0x7E, ascii="~" 
0579 28			        defb %00101000 
057a 50			        defb %01010000 
057b 00			        defb %00000000 
057c 00			        defb %00000000 
057d 00			        defb %00000000 
057e 00			        defb %00000000 
057f 00			        defb %00000000 
0580 00			        defb %00000000 
0581			 
0581			        ; code=127, hex=0x7F, ascii="^?" 
0581 10			        defb %00010000 
0582 38			        defb %00111000 
0583 6c			        defb %01101100 
0584 44			        defb %01000100 
0585 44			        defb %01000100 
0586 7c			        defb %01111100 
0587 00			        defb %00000000 
0588 00			        defb %00000000 
0589			 
0589			        ; code=128, hex=0x80, ascii="!^@" 
0589 38			        defb %00111000 
058a 44			        defb %01000100 
058b 40			        defb %01000000 
058c 40			        defb %01000000 
058d 44			        defb %01000100 
058e 38			        defb %00111000 
058f 10			        defb %00010000 
0590 30			        defb %00110000 
0591			 
0591			        ; code=129, hex=0x81, ascii="!^A" 
0591 48			        defb %01001000 
0592 00			        defb %00000000 
0593 48			        defb %01001000 
0594 48			        defb %01001000 
0595 48			        defb %01001000 
0596 58			        defb %01011000 
0597 28			        defb %00101000 
0598 00			        defb %00000000 
0599			 
0599			        ; code=130, hex=0x82, ascii="!^B" 
0599 0c			        defb %00001100 
059a 00			        defb %00000000 
059b 38			        defb %00111000 
059c 44			        defb %01000100 
059d 78			        defb %01111000 
059e 40			        defb %01000000 
059f 38			        defb %00111000 
05a0 00			        defb %00000000 
05a1			 
05a1			        ; code=131, hex=0x83, ascii="!^C" 
05a1 38			        defb %00111000 
05a2 00			        defb %00000000 
05a3 38			        defb %00111000 
05a4 04			        defb %00000100 
05a5 3c			        defb %00111100 
05a6 44			        defb %01000100 
05a7 3c			        defb %00111100 
05a8 00			        defb %00000000 
05a9			 
05a9			        ; code=132, hex=0x84, ascii="!^D" 
05a9 28			        defb %00101000 
05aa 00			        defb %00000000 
05ab 38			        defb %00111000 
05ac 04			        defb %00000100 
05ad 3c			        defb %00111100 
05ae 44			        defb %01000100 
05af 3c			        defb %00111100 
05b0 00			        defb %00000000 
05b1			 
05b1			        ; code=133, hex=0x85, ascii="!^E" 
05b1 30			        defb %00110000 
05b2 00			        defb %00000000 
05b3 38			        defb %00111000 
05b4 04			        defb %00000100 
05b5 3c			        defb %00111100 
05b6 44			        defb %01000100 
05b7 3c			        defb %00111100 
05b8 00			        defb %00000000 
05b9			 
05b9			        ; code=134, hex=0x86, ascii="!^F" 
05b9 38			        defb %00111000 
05ba 28			        defb %00101000 
05bb 38			        defb %00111000 
05bc 04			        defb %00000100 
05bd 3c			        defb %00111100 
05be 44			        defb %01000100 
05bf 3c			        defb %00111100 
05c0 00			        defb %00000000 
05c1			 
05c1			        ; code=135, hex=0x87, ascii="!^G" 
05c1 00			        defb %00000000 
05c2 38			        defb %00111000 
05c3 44			        defb %01000100 
05c4 40			        defb %01000000 
05c5 44			        defb %01000100 
05c6 38			        defb %00111000 
05c7 10			        defb %00010000 
05c8 30			        defb %00110000 
05c9			 
05c9			        ; code=136, hex=0x88, ascii="!^H" 
05c9 38			        defb %00111000 
05ca 00			        defb %00000000 
05cb 38			        defb %00111000 
05cc 44			        defb %01000100 
05cd 78			        defb %01111000 
05ce 40			        defb %01000000 
05cf 38			        defb %00111000 
05d0 00			        defb %00000000 
05d1			 
05d1			        ; code=137, hex=0x89, ascii="!^I" 
05d1 28			        defb %00101000 
05d2 00			        defb %00000000 
05d3 38			        defb %00111000 
05d4 44			        defb %01000100 
05d5 78			        defb %01111000 
05d6 40			        defb %01000000 
05d7 38			        defb %00111000 
05d8 00			        defb %00000000 
05d9			 
05d9			        ; code=138, hex=0x8A, ascii="!^J" 
05d9 30			        defb %00110000 
05da 00			        defb %00000000 
05db 38			        defb %00111000 
05dc 44			        defb %01000100 
05dd 78			        defb %01111000 
05de 40			        defb %01000000 
05df 38			        defb %00111000 
05e0 00			        defb %00000000 
05e1			 
05e1			        ; code=139, hex=0x8B, ascii="!^K" 
05e1 28			        defb %00101000 
05e2 00			        defb %00000000 
05e3 10			        defb %00010000 
05e4 10			        defb %00010000 
05e5 10			        defb %00010000 
05e6 10			        defb %00010000 
05e7 18			        defb %00011000 
05e8 00			        defb %00000000 
05e9			 
05e9			        ; code=140, hex=0x8C, ascii="!^L" 
05e9 10			        defb %00010000 
05ea 28			        defb %00101000 
05eb 00			        defb %00000000 
05ec 10			        defb %00010000 
05ed 10			        defb %00010000 
05ee 10			        defb %00010000 
05ef 18			        defb %00011000 
05f0 00			        defb %00000000 
05f1			 
05f1			        ; code=141, hex=0x8D, ascii="!^M" 
05f1 20			        defb %00100000 
05f2 00			        defb %00000000 
05f3 10			        defb %00010000 
05f4 10			        defb %00010000 
05f5 10			        defb %00010000 
05f6 10			        defb %00010000 
05f7 18			        defb %00011000 
05f8 00			        defb %00000000 
05f9			 
05f9			        ; code=142, hex=0x8E, ascii="!^N" 
05f9 28			        defb %00101000 
05fa 00			        defb %00000000 
05fb 10			        defb %00010000 
05fc 28			        defb %00101000 
05fd 44			        defb %01000100 
05fe 7c			        defb %01111100 
05ff 44			        defb %01000100 
0600 00			        defb %00000000 
0601			 
0601			        ; code=143, hex=0x8F, ascii="!^O" 
0601 38			        defb %00111000 
0602 28			        defb %00101000 
0603 38			        defb %00111000 
0604 6c			        defb %01101100 
0605 44			        defb %01000100 
0606 7c			        defb %01111100 
0607 44			        defb %01000100 
0608 00			        defb %00000000 
0609			 
0609			        ; code=144, hex=0x90, ascii="!^P" 
0609 0c			        defb %00001100 
060a 00			        defb %00000000 
060b 7c			        defb %01111100 
060c 40			        defb %01000000 
060d 78			        defb %01111000 
060e 40			        defb %01000000 
060f 7c			        defb %01111100 
0610 00			        defb %00000000 
0611			 
0611			        ; code=145, hex=0x91, ascii="!^Q" 
0611 00			        defb %00000000 
0612 00			        defb %00000000 
0613 78			        defb %01111000 
0614 14			        defb %00010100 
0615 7c			        defb %01111100 
0616 50			        defb %01010000 
0617 3c			        defb %00111100 
0618 00			        defb %00000000 
0619			 
0619			        ; code=146, hex=0x92, ascii="!^R" 
0619 3c			        defb %00111100 
061a 50			        defb %01010000 
061b 50			        defb %01010000 
061c 7c			        defb %01111100 
061d 50			        defb %01010000 
061e 50			        defb %01010000 
061f 5c			        defb %01011100 
0620 00			        defb %00000000 
0621			 
0621			        ; code=147, hex=0x93, ascii="!^S" 
0621 38			        defb %00111000 
0622 00			        defb %00000000 
0623 30			        defb %00110000 
0624 48			        defb %01001000 
0625 48			        defb %01001000 
0626 48			        defb %01001000 
0627 30			        defb %00110000 
0628 00			        defb %00000000 
0629			 
0629			        ; code=148, hex=0x94, ascii="!^T" 
0629 28			        defb %00101000 
062a 00			        defb %00000000 
062b 30			        defb %00110000 
062c 48			        defb %01001000 
062d 48			        defb %01001000 
062e 48			        defb %01001000 
062f 30			        defb %00110000 
0630 00			        defb %00000000 
0631			 
0631			        ; code=149, hex=0x95, ascii="!^U" 
0631 60			        defb %01100000 
0632 00			        defb %00000000 
0633 30			        defb %00110000 
0634 48			        defb %01001000 
0635 48			        defb %01001000 
0636 48			        defb %01001000 
0637 30			        defb %00110000 
0638 00			        defb %00000000 
0639			 
0639			        ; code=150, hex=0x96, ascii="!^V" 
0639 38			        defb %00111000 
063a 00			        defb %00000000 
063b 48			        defb %01001000 
063c 48			        defb %01001000 
063d 48			        defb %01001000 
063e 58			        defb %01011000 
063f 28			        defb %00101000 
0640 00			        defb %00000000 
0641			 
0641			        ; code=151, hex=0x97, ascii="!^W" 
0641 60			        defb %01100000 
0642 00			        defb %00000000 
0643 48			        defb %01001000 
0644 48			        defb %01001000 
0645 48			        defb %01001000 
0646 58			        defb %01011000 
0647 28			        defb %00101000 
0648 00			        defb %00000000 
0649			 
0649			        ; code=152, hex=0x98, ascii="!^X" 
0649 28			        defb %00101000 
064a 00			        defb %00000000 
064b 48			        defb %01001000 
064c 48			        defb %01001000 
064d 48			        defb %01001000 
064e 38			        defb %00111000 
064f 10			        defb %00010000 
0650 60			        defb %01100000 
0651			 
0651			        ; code=153, hex=0x99, ascii="!^Y" 
0651 48			        defb %01001000 
0652 30			        defb %00110000 
0653 48			        defb %01001000 
0654 48			        defb %01001000 
0655 48			        defb %01001000 
0656 48			        defb %01001000 
0657 30			        defb %00110000 
0658 00			        defb %00000000 
0659			 
0659			        ; code=154, hex=0x9A, ascii="!^Z" 
0659 28			        defb %00101000 
065a 00			        defb %00000000 
065b 48			        defb %01001000 
065c 48			        defb %01001000 
065d 48			        defb %01001000 
065e 48			        defb %01001000 
065f 30			        defb %00110000 
0660 00			        defb %00000000 
0661			 
0661			        ; code=155, hex=0x9B, ascii="!^[" 
0661 00			        defb %00000000 
0662 10			        defb %00010000 
0663 38			        defb %00111000 
0664 40			        defb %01000000 
0665 40			        defb %01000000 
0666 38			        defb %00111000 
0667 10			        defb %00010000 
0668 00			        defb %00000000 
0669			 
0669			        ; code=156, hex=0x9C, ascii="!^\" 
0669 18			        defb %00011000 
066a 24			        defb %00100100 
066b 20			        defb %00100000 
066c 78			        defb %01111000 
066d 20			        defb %00100000 
066e 24			        defb %00100100 
066f 5c			        defb %01011100 
0670 00			        defb %00000000 
0671			 
0671			        ; code=157, hex=0x9D, ascii="!^]" 
0671 44			        defb %01000100 
0672 28			        defb %00101000 
0673 10			        defb %00010000 
0674 7c			        defb %01111100 
0675 10			        defb %00010000 
0676 7c			        defb %01111100 
0677 10			        defb %00010000 
0678 00			        defb %00000000 
0679			 
0679			        ; code=158, hex=0x9E, ascii="!^^" 
0679 60			        defb %01100000 
067a 50			        defb %01010000 
067b 50			        defb %01010000 
067c 68			        defb %01101000 
067d 5c			        defb %01011100 
067e 48			        defb %01001000 
067f 48			        defb %01001000 
0680 00			        defb %00000000 
0681			 
0681			        ; code=159, hex=0x9F, ascii="!^_" 
0681 08			        defb %00001000 
0682 14			        defb %00010100 
0683 10			        defb %00010000 
0684 38			        defb %00111000 
0685 10			        defb %00010000 
0686 10			        defb %00010000 
0687 50			        defb %01010000 
0688 20			        defb %00100000 
0689			 
0689			        ; code=160, hex=0xA0, ascii="! " 
0689 18			        defb %00011000 
068a 00			        defb %00000000 
068b 38			        defb %00111000 
068c 04			        defb %00000100 
068d 3c			        defb %00111100 
068e 44			        defb %01000100 
068f 3c			        defb %00111100 
0690 00			        defb %00000000 
0691			 
0691			        ; code=161, hex=0xA1, ascii="!!" 
0691 18			        defb %00011000 
0692 00			        defb %00000000 
0693 10			        defb %00010000 
0694 10			        defb %00010000 
0695 10			        defb %00010000 
0696 10			        defb %00010000 
0697 18			        defb %00011000 
0698 00			        defb %00000000 
0699			 
0699			        ; code=162, hex=0xA2, ascii="!"" 
0699 18			        defb %00011000 
069a 00			        defb %00000000 
069b 30			        defb %00110000 
069c 48			        defb %01001000 
069d 48			        defb %01001000 
069e 48			        defb %01001000 
069f 30			        defb %00110000 
06a0 00			        defb %00000000 
06a1			 
06a1			        ; code=163, hex=0xA3, ascii="!#" 
06a1 18			        defb %00011000 
06a2 00			        defb %00000000 
06a3 48			        defb %01001000 
06a4 48			        defb %01001000 
06a5 48			        defb %01001000 
06a6 58			        defb %01011000 
06a7 28			        defb %00101000 
06a8 00			        defb %00000000 
06a9			 
06a9			        ; code=164, hex=0xA4, ascii="!$" 
06a9 28			        defb %00101000 
06aa 50			        defb %01010000 
06ab 00			        defb %00000000 
06ac 70			        defb %01110000 
06ad 48			        defb %01001000 
06ae 48			        defb %01001000 
06af 48			        defb %01001000 
06b0 00			        defb %00000000 
06b1			 
06b1			        ; code=165, hex=0xA5, ascii="!%" 
06b1 28			        defb %00101000 
06b2 50			        defb %01010000 
06b3 00			        defb %00000000 
06b4 48			        defb %01001000 
06b5 68			        defb %01101000 
06b6 58			        defb %01011000 
06b7 48			        defb %01001000 
06b8 00			        defb %00000000 
06b9			 
06b9			        ; code=166, hex=0xA6, ascii="!&" 
06b9 38			        defb %00111000 
06ba 04			        defb %00000100 
06bb 3c			        defb %00111100 
06bc 44			        defb %01000100 
06bd 3c			        defb %00111100 
06be 00			        defb %00000000 
06bf 3c			        defb %00111100 
06c0 00			        defb %00000000 
06c1			 
06c1			        ; code=167, hex=0xA7, ascii="!'" 
06c1 30			        defb %00110000 
06c2 48			        defb %01001000 
06c3 48			        defb %01001000 
06c4 48			        defb %01001000 
06c5 30			        defb %00110000 
06c6 00			        defb %00000000 
06c7 78			        defb %01111000 
06c8 00			        defb %00000000 
06c9			 
06c9			        ; code=168, hex=0xA8, ascii="!(" 
06c9 10			        defb %00010000 
06ca 00			        defb %00000000 
06cb 10			        defb %00010000 
06cc 30			        defb %00110000 
06cd 40			        defb %01000000 
06ce 44			        defb %01000100 
06cf 38			        defb %00111000 
06d0 00			        defb %00000000 
06d1			 
06d1			        ; code=169, hex=0xA9, ascii="!)" 
06d1 00			        defb %00000000 
06d2 00			        defb %00000000 
06d3 7c			        defb %01111100 
06d4 40			        defb %01000000 
06d5 40			        defb %01000000 
06d6 40			        defb %01000000 
06d7 00			        defb %00000000 
06d8 00			        defb %00000000 
06d9			 
06d9			        ; code=170, hex=0xAA, ascii="!*" 
06d9 00			        defb %00000000 
06da 00			        defb %00000000 
06db fc			        defb %11111100 
06dc 04			        defb %00000100 
06dd 04			        defb %00000100 
06de 00			        defb %00000000 
06df 00			        defb %00000000 
06e0 00			        defb %00000000 
06e1			 
06e1			        ; code=171, hex=0xAB, ascii="!+" 
06e1 40			        defb %01000000 
06e2 48			        defb %01001000 
06e3 50			        defb %01010000 
06e4 38			        defb %00111000 
06e5 44			        defb %01000100 
06e6 08			        defb %00001000 
06e7 1c			        defb %00011100 
06e8 00			        defb %00000000 
06e9			 
06e9			        ; code=172, hex=0xAC, ascii="!," 
06e9 40			        defb %01000000 
06ea 48			        defb %01001000 
06eb 50			        defb %01010000 
06ec 2c			        defb %00101100 
06ed 54			        defb %01010100 
06ee 1c			        defb %00011100 
06ef 04			        defb %00000100 
06f0 00			        defb %00000000 
06f1			 
06f1			        ; code=173, hex=0xAD, ascii="!-" 
06f1 10			        defb %00010000 
06f2 00			        defb %00000000 
06f3 10			        defb %00010000 
06f4 10			        defb %00010000 
06f5 38			        defb %00111000 
06f6 38			        defb %00111000 
06f7 10			        defb %00010000 
06f8 00			        defb %00000000 
06f9			 
06f9			        ; code=174, hex=0xAE, ascii="!." 
06f9 00			        defb %00000000 
06fa 00			        defb %00000000 
06fb 24			        defb %00100100 
06fc 48			        defb %01001000 
06fd 24			        defb %00100100 
06fe 00			        defb %00000000 
06ff 00			        defb %00000000 
0700 00			        defb %00000000 
0701			 
0701			        ; code=175, hex=0xAF, ascii="!/" 
0701 00			        defb %00000000 
0702 00			        defb %00000000 
0703 48			        defb %01001000 
0704 24			        defb %00100100 
0705 48			        defb %01001000 
0706 00			        defb %00000000 
0707 00			        defb %00000000 
0708 00			        defb %00000000 
0709			 
0709			        ; code=176, hex=0xB0, ascii="!0" 
0709 54			        defb %01010100 
070a 00			        defb %00000000 
070b a8			        defb %10101000 
070c 00			        defb %00000000 
070d 54			        defb %01010100 
070e 00			        defb %00000000 
070f a8			        defb %10101000 
0710 00			        defb %00000000 
0711			 
0711			        ; code=177, hex=0xB1, ascii="!1" 
0711 54			        defb %01010100 
0712 a8			        defb %10101000 
0713 54			        defb %01010100 
0714 a8			        defb %10101000 
0715 54			        defb %01010100 
0716 a8			        defb %10101000 
0717 54			        defb %01010100 
0718 a8			        defb %10101000 
0719			 
0719			        ; code=178, hex=0xB2, ascii="!2" 
0719 a8			        defb %10101000 
071a fc			        defb %11111100 
071b 54			        defb %01010100 
071c fc			        defb %11111100 
071d a8			        defb %10101000 
071e fc			        defb %11111100 
071f 54			        defb %01010100 
0720 fc			        defb %11111100 
0721			 
0721			        ; code=179, hex=0xB3, ascii="!3" 
0721 10			        defb %00010000 
0722 10			        defb %00010000 
0723 10			        defb %00010000 
0724 10			        defb %00010000 
0725 10			        defb %00010000 
0726 10			        defb %00010000 
0727 10			        defb %00010000 
0728 10			        defb %00010000 
0729			 
0729			        ; code=180, hex=0xB4, ascii="!4" 
0729 10			        defb %00010000 
072a 10			        defb %00010000 
072b 10			        defb %00010000 
072c f0			        defb %11110000 
072d 10			        defb %00010000 
072e 10			        defb %00010000 
072f 10			        defb %00010000 
0730 10			        defb %00010000 
0731			 
0731			        ; code=181, hex=0xB5, ascii="!5" 
0731 10			        defb %00010000 
0732 f0			        defb %11110000 
0733 10			        defb %00010000 
0734 f0			        defb %11110000 
0735 10			        defb %00010000 
0736 10			        defb %00010000 
0737 10			        defb %00010000 
0738 10			        defb %00010000 
0739			 
0739			        ; code=182, hex=0xB6, ascii="!6" 
0739 50			        defb %01010000 
073a 50			        defb %01010000 
073b 50			        defb %01010000 
073c d0			        defb %11010000 
073d 50			        defb %01010000 
073e 50			        defb %01010000 
073f 50			        defb %01010000 
0740 50			        defb %01010000 
0741			 
0741			        ; code=183, hex=0xB7, ascii="!7" 
0741 00			        defb %00000000 
0742 00			        defb %00000000 
0743 00			        defb %00000000 
0744 f0			        defb %11110000 
0745 50			        defb %01010000 
0746 50			        defb %01010000 
0747 50			        defb %01010000 
0748 50			        defb %01010000 
0749			 
0749			        ; code=184, hex=0xB8, ascii="!8" 
0749 00			        defb %00000000 
074a f0			        defb %11110000 
074b 10			        defb %00010000 
074c f0			        defb %11110000 
074d 10			        defb %00010000 
074e 10			        defb %00010000 
074f 10			        defb %00010000 
0750 10			        defb %00010000 
0751			 
0751			        ; code=185, hex=0xB9, ascii="!9" 
0751 50			        defb %01010000 
0752 d0			        defb %11010000 
0753 10			        defb %00010000 
0754 d0			        defb %11010000 
0755 50			        defb %01010000 
0756 50			        defb %01010000 
0757 50			        defb %01010000 
0758 50			        defb %01010000 
0759			 
0759			        ; code=186, hex=0xBA, ascii="!:" 
0759 50			        defb %01010000 
075a 50			        defb %01010000 
075b 50			        defb %01010000 
075c 50			        defb %01010000 
075d 50			        defb %01010000 
075e 50			        defb %01010000 
075f 50			        defb %01010000 
0760 50			        defb %01010000 
0761			 
0761			        ; code=187, hex=0xBB, ascii="!;" 
0761 00			        defb %00000000 
0762 f0			        defb %11110000 
0763 10			        defb %00010000 
0764 d0			        defb %11010000 
0765 50			        defb %01010000 
0766 50			        defb %01010000 
0767 50			        defb %01010000 
0768 50			        defb %01010000 
0769			 
0769			        ; code=188, hex=0xBC, ascii="!<" 
0769 50			        defb %01010000 
076a d0			        defb %11010000 
076b 10			        defb %00010000 
076c f0			        defb %11110000 
076d 00			        defb %00000000 
076e 00			        defb %00000000 
076f 00			        defb %00000000 
0770 00			        defb %00000000 
0771			 
0771			        ; code=189, hex=0xBD, ascii="!=" 
0771 50			        defb %01010000 
0772 50			        defb %01010000 
0773 50			        defb %01010000 
0774 f0			        defb %11110000 
0775 00			        defb %00000000 
0776 00			        defb %00000000 
0777 00			        defb %00000000 
0778 00			        defb %00000000 
0779			 
0779			        ; code=190, hex=0xBE, ascii="!>" 
0779 10			        defb %00010000 
077a f0			        defb %11110000 
077b 10			        defb %00010000 
077c f0			        defb %11110000 
077d 00			        defb %00000000 
077e 00			        defb %00000000 
077f 00			        defb %00000000 
0780 00			        defb %00000000 
0781			 
0781			        ; code=191, hex=0xBF, ascii="!?" 
0781 00			        defb %00000000 
0782 00			        defb %00000000 
0783 00			        defb %00000000 
0784 f0			        defb %11110000 
0785 10			        defb %00010000 
0786 10			        defb %00010000 
0787 10			        defb %00010000 
0788 10			        defb %00010000 
0789			 
0789			        ; code=192, hex=0xC0, ascii="!@" 
0789 10			        defb %00010000 
078a 10			        defb %00010000 
078b 10			        defb %00010000 
078c 1c			        defb %00011100 
078d 00			        defb %00000000 
078e 00			        defb %00000000 
078f 00			        defb %00000000 
0790 00			        defb %00000000 
0791			 
0791			        ; code=193, hex=0xC1, ascii="!A" 
0791 10			        defb %00010000 
0792 10			        defb %00010000 
0793 10			        defb %00010000 
0794 fc			        defb %11111100 
0795 00			        defb %00000000 
0796 00			        defb %00000000 
0797 00			        defb %00000000 
0798 00			        defb %00000000 
0799			 
0799			        ; code=194, hex=0xC2, ascii="!B" 
0799 00			        defb %00000000 
079a 00			        defb %00000000 
079b 00			        defb %00000000 
079c fc			        defb %11111100 
079d 10			        defb %00010000 
079e 10			        defb %00010000 
079f 10			        defb %00010000 
07a0 10			        defb %00010000 
07a1			 
07a1			        ; code=195, hex=0xC3, ascii="!C" 
07a1 10			        defb %00010000 
07a2 10			        defb %00010000 
07a3 10			        defb %00010000 
07a4 1c			        defb %00011100 
07a5 10			        defb %00010000 
07a6 10			        defb %00010000 
07a7 10			        defb %00010000 
07a8 10			        defb %00010000 
07a9			 
07a9			        ; code=196, hex=0xC4, ascii="!D" 
07a9 00			        defb %00000000 
07aa 00			        defb %00000000 
07ab 00			        defb %00000000 
07ac fc			        defb %11111100 
07ad 00			        defb %00000000 
07ae 00			        defb %00000000 
07af 00			        defb %00000000 
07b0 00			        defb %00000000 
07b1			 
07b1			        ; code=197, hex=0xC5, ascii="!E" 
07b1 10			        defb %00010000 
07b2 10			        defb %00010000 
07b3 10			        defb %00010000 
07b4 fc			        defb %11111100 
07b5 10			        defb %00010000 
07b6 10			        defb %00010000 
07b7 10			        defb %00010000 
07b8 10			        defb %00010000 
07b9			 
07b9			        ; code=198, hex=0xC6, ascii="!F" 
07b9 10			        defb %00010000 
07ba 1c			        defb %00011100 
07bb 10			        defb %00010000 
07bc 1c			        defb %00011100 
07bd 10			        defb %00010000 
07be 10			        defb %00010000 
07bf 10			        defb %00010000 
07c0 10			        defb %00010000 
07c1			 
07c1			        ; code=199, hex=0xC7, ascii="!G" 
07c1 50			        defb %01010000 
07c2 50			        defb %01010000 
07c3 50			        defb %01010000 
07c4 5c			        defb %01011100 
07c5 50			        defb %01010000 
07c6 50			        defb %01010000 
07c7 50			        defb %01010000 
07c8 50			        defb %01010000 
07c9			 
07c9			        ; code=200, hex=0xC8, ascii="!H" 
07c9 50			        defb %01010000 
07ca 5c			        defb %01011100 
07cb 40			        defb %01000000 
07cc 7c			        defb %01111100 
07cd 00			        defb %00000000 
07ce 00			        defb %00000000 
07cf 00			        defb %00000000 
07d0 00			        defb %00000000 
07d1			 
07d1			        ; code=201, hex=0xC9, ascii="!I" 
07d1 00			        defb %00000000 
07d2 7c			        defb %01111100 
07d3 40			        defb %01000000 
07d4 5c			        defb %01011100 
07d5 50			        defb %01010000 
07d6 50			        defb %01010000 
07d7 50			        defb %01010000 
07d8 50			        defb %01010000 
07d9			 
07d9			        ; code=202, hex=0xCA, ascii="!J" 
07d9 50			        defb %01010000 
07da dc			        defb %11011100 
07db 00			        defb %00000000 
07dc fc			        defb %11111100 
07dd 00			        defb %00000000 
07de 00			        defb %00000000 
07df 00			        defb %00000000 
07e0 00			        defb %00000000 
07e1			 
07e1			        ; code=203, hex=0xCB, ascii="!K" 
07e1 00			        defb %00000000 
07e2 fc			        defb %11111100 
07e3 00			        defb %00000000 
07e4 dc			        defb %11011100 
07e5 50			        defb %01010000 
07e6 50			        defb %01010000 
07e7 50			        defb %01010000 
07e8 50			        defb %01010000 
07e9			 
07e9			        ; code=204, hex=0xCC, ascii="!L" 
07e9 50			        defb %01010000 
07ea 5c			        defb %01011100 
07eb 40			        defb %01000000 
07ec 5c			        defb %01011100 
07ed 50			        defb %01010000 
07ee 50			        defb %01010000 
07ef 50			        defb %01010000 
07f0 50			        defb %01010000 
07f1			 
07f1			        ; code=205, hex=0xCD, ascii="!M" 
07f1 00			        defb %00000000 
07f2 fc			        defb %11111100 
07f3 00			        defb %00000000 
07f4 fc			        defb %11111100 
07f5 00			        defb %00000000 
07f6 00			        defb %00000000 
07f7 00			        defb %00000000 
07f8 00			        defb %00000000 
07f9			 
07f9			        ; code=206, hex=0xCE, ascii="!N" 
07f9 50			        defb %01010000 
07fa dc			        defb %11011100 
07fb 00			        defb %00000000 
07fc dc			        defb %11011100 
07fd 50			        defb %01010000 
07fe 50			        defb %01010000 
07ff 50			        defb %01010000 
0800 50			        defb %01010000 
0801			 
0801			        ; code=207, hex=0xCF, ascii="!O" 
0801 10			        defb %00010000 
0802 fc			        defb %11111100 
0803 00			        defb %00000000 
0804 fc			        defb %11111100 
0805 00			        defb %00000000 
0806 00			        defb %00000000 
0807 00			        defb %00000000 
0808 00			        defb %00000000 
0809			 
0809			        ; code=208, hex=0xD0, ascii="!P" 
0809 50			        defb %01010000 
080a 50			        defb %01010000 
080b 50			        defb %01010000 
080c fc			        defb %11111100 
080d 00			        defb %00000000 
080e 00			        defb %00000000 
080f 00			        defb %00000000 
0810 00			        defb %00000000 
0811			 
0811			        ; code=209, hex=0xD1, ascii="!Q" 
0811 00			        defb %00000000 
0812 fc			        defb %11111100 
0813 00			        defb %00000000 
0814 fc			        defb %11111100 
0815 10			        defb %00010000 
0816 10			        defb %00010000 
0817 10			        defb %00010000 
0818 10			        defb %00010000 
0819			 
0819			        ; code=210, hex=0xD2, ascii="!R" 
0819 00			        defb %00000000 
081a 00			        defb %00000000 
081b 00			        defb %00000000 
081c fc			        defb %11111100 
081d 50			        defb %01010000 
081e 50			        defb %01010000 
081f 50			        defb %01010000 
0820 50			        defb %01010000 
0821			 
0821			        ; code=211, hex=0xD3, ascii="!S" 
0821 50			        defb %01010000 
0822 50			        defb %01010000 
0823 50			        defb %01010000 
0824 7c			        defb %01111100 
0825 00			        defb %00000000 
0826 00			        defb %00000000 
0827 00			        defb %00000000 
0828 00			        defb %00000000 
0829			 
0829			        ; code=212, hex=0xD4, ascii="!T" 
0829 10			        defb %00010000 
082a 1c			        defb %00011100 
082b 10			        defb %00010000 
082c 1c			        defb %00011100 
082d 00			        defb %00000000 
082e 00			        defb %00000000 
082f 00			        defb %00000000 
0830 00			        defb %00000000 
0831			 
0831			        ; code=213, hex=0xD5, ascii="!U" 
0831 00			        defb %00000000 
0832 1c			        defb %00011100 
0833 10			        defb %00010000 
0834 1c			        defb %00011100 
0835 10			        defb %00010000 
0836 10			        defb %00010000 
0837 10			        defb %00010000 
0838 10			        defb %00010000 
0839			 
0839			        ; code=214, hex=0xD6, ascii="!V" 
0839 00			        defb %00000000 
083a 00			        defb %00000000 
083b 00			        defb %00000000 
083c 7c			        defb %01111100 
083d 50			        defb %01010000 
083e 50			        defb %01010000 
083f 50			        defb %01010000 
0840 50			        defb %01010000 
0841			 
0841			        ; code=215, hex=0xD7, ascii="!W" 
0841 50			        defb %01010000 
0842 50			        defb %01010000 
0843 50			        defb %01010000 
0844 dc			        defb %11011100 
0845 50			        defb %01010000 
0846 50			        defb %01010000 
0847 50			        defb %01010000 
0848 50			        defb %01010000 
0849			 
0849			        ; code=216, hex=0xD8, ascii="!X" 
0849 10			        defb %00010000 
084a fc			        defb %11111100 
084b 00			        defb %00000000 
084c fc			        defb %11111100 
084d 10			        defb %00010000 
084e 10			        defb %00010000 
084f 10			        defb %00010000 
0850 10			        defb %00010000 
0851			 
0851			        ; code=217, hex=0xD9, ascii="!Y" 
0851 10			        defb %00010000 
0852 10			        defb %00010000 
0853 10			        defb %00010000 
0854 f0			        defb %11110000 
0855 00			        defb %00000000 
0856 00			        defb %00000000 
0857 00			        defb %00000000 
0858 00			        defb %00000000 
0859			 
0859			        ; code=218, hex=0xDA, ascii="!Z" 
0859 00			        defb %00000000 
085a 00			        defb %00000000 
085b 00			        defb %00000000 
085c 1c			        defb %00011100 
085d 10			        defb %00010000 
085e 10			        defb %00010000 
085f 10			        defb %00010000 
0860 10			        defb %00010000 
0861			 
0861			        ; code=219, hex=0xDB, ascii="![" 
0861 fc			        defb %11111100 
0862 fc			        defb %11111100 
0863 fc			        defb %11111100 
0864 fc			        defb %11111100 
0865 fc			        defb %11111100 
0866 fc			        defb %11111100 
0867 fc			        defb %11111100 
0868 fc			        defb %11111100 
0869			 
0869			        ; code=220, hex=0xDC, ascii="!\" 
0869 00			        defb %00000000 
086a 00			        defb %00000000 
086b 00			        defb %00000000 
086c 00			        defb %00000000 
086d fc			        defb %11111100 
086e fc			        defb %11111100 
086f fc			        defb %11111100 
0870 fc			        defb %11111100 
0871			 
0871			        ; code=221, hex=0xDD, ascii="!]" 
0871 e0			        defb %11100000 
0872 e0			        defb %11100000 
0873 e0			        defb %11100000 
0874 e0			        defb %11100000 
0875 e0			        defb %11100000 
0876 e0			        defb %11100000 
0877 e0			        defb %11100000 
0878 e0			        defb %11100000 
0879			 
0879			        ; code=222, hex=0xDE, ascii="!^" 
0879 1c			        defb %00011100 
087a 1c			        defb %00011100 
087b 1c			        defb %00011100 
087c 1c			        defb %00011100 
087d 1c			        defb %00011100 
087e 1c			        defb %00011100 
087f 1c			        defb %00011100 
0880 1c			        defb %00011100 
0881			 
0881			        ; code=223, hex=0xDF, ascii="!_" 
0881 fc			        defb %11111100 
0882 fc			        defb %11111100 
0883 fc			        defb %11111100 
0884 fc			        defb %11111100 
0885 00			        defb %00000000 
0886 00			        defb %00000000 
0887 00			        defb %00000000 
0888 00			        defb %00000000 
0889			 
0889			        ; code=224, hex=0xE0, ascii="!`" 
0889 00			        defb %00000000 
088a 00			        defb %00000000 
088b 34			        defb %00110100 
088c 48			        defb %01001000 
088d 48			        defb %01001000 
088e 34			        defb %00110100 
088f 00			        defb %00000000 
0890 00			        defb %00000000 
0891			 
0891			        ; code=225, hex=0xE1, ascii="!a" 
0891 00			        defb %00000000 
0892 70			        defb %01110000 
0893 48			        defb %01001000 
0894 70			        defb %01110000 
0895 48			        defb %01001000 
0896 48			        defb %01001000 
0897 70			        defb %01110000 
0898 40			        defb %01000000 
0899			 
0899			        ; code=226, hex=0xE2, ascii="!b" 
0899 78			        defb %01111000 
089a 48			        defb %01001000 
089b 40			        defb %01000000 
089c 40			        defb %01000000 
089d 40			        defb %01000000 
089e 40			        defb %01000000 
089f 40			        defb %01000000 
08a0 00			        defb %00000000 
08a1			 
08a1			        ; code=227, hex=0xE3, ascii="!c" 
08a1 00			        defb %00000000 
08a2 7c			        defb %01111100 
08a3 28			        defb %00101000 
08a4 28			        defb %00101000 
08a5 28			        defb %00101000 
08a6 28			        defb %00101000 
08a7 28			        defb %00101000 
08a8 00			        defb %00000000 
08a9			 
08a9			        ; code=228, hex=0xE4, ascii="!d" 
08a9 78			        defb %01111000 
08aa 48			        defb %01001000 
08ab 20			        defb %00100000 
08ac 10			        defb %00010000 
08ad 20			        defb %00100000 
08ae 48			        defb %01001000 
08af 78			        defb %01111000 
08b0 00			        defb %00000000 
08b1			 
08b1			        ; code=229, hex=0xE5, ascii="!e" 
08b1 00			        defb %00000000 
08b2 00			        defb %00000000 
08b3 3c			        defb %00111100 
08b4 48			        defb %01001000 
08b5 48			        defb %01001000 
08b6 30			        defb %00110000 
08b7 00			        defb %00000000 
08b8 00			        defb %00000000 
08b9			 
08b9			        ; code=230, hex=0xE6, ascii="!f" 
08b9 00			        defb %00000000 
08ba 00			        defb %00000000 
08bb 48			        defb %01001000 
08bc 48			        defb %01001000 
08bd 48			        defb %01001000 
08be 70			        defb %01110000 
08bf 40			        defb %01000000 
08c0 40			        defb %01000000 
08c1			 
08c1			        ; code=231, hex=0xE7, ascii="!g" 
08c1 00			        defb %00000000 
08c2 00			        defb %00000000 
08c3 28			        defb %00101000 
08c4 50			        defb %01010000 
08c5 10			        defb %00010000 
08c6 10			        defb %00010000 
08c7 10			        defb %00010000 
08c8 00			        defb %00000000 
08c9			 
08c9			        ; code=232, hex=0xE8, ascii="!h" 
08c9 38			        defb %00111000 
08ca 10			        defb %00010000 
08cb 38			        defb %00111000 
08cc 44			        defb %01000100 
08cd 38			        defb %00111000 
08ce 10			        defb %00010000 
08cf 38			        defb %00111000 
08d0 00			        defb %00000000 
08d1			 
08d1			        ; code=233, hex=0xE9, ascii="!i" 
08d1 30			        defb %00110000 
08d2 48			        defb %01001000 
08d3 48			        defb %01001000 
08d4 78			        defb %01111000 
08d5 48			        defb %01001000 
08d6 48			        defb %01001000 
08d7 30			        defb %00110000 
08d8 00			        defb %00000000 
08d9			 
08d9			        ; code=234, hex=0xEA, ascii="!j" 
08d9 00			        defb %00000000 
08da 38			        defb %00111000 
08db 44			        defb %01000100 
08dc 44			        defb %01000100 
08dd 28			        defb %00101000 
08de 28			        defb %00101000 
08df 6c			        defb %01101100 
08e0 00			        defb %00000000 
08e1			 
08e1			        ; code=235, hex=0xEB, ascii="!k" 
08e1 30			        defb %00110000 
08e2 40			        defb %01000000 
08e3 20			        defb %00100000 
08e4 10			        defb %00010000 
08e5 38			        defb %00111000 
08e6 48			        defb %01001000 
08e7 30			        defb %00110000 
08e8 00			        defb %00000000 
08e9			 
08e9			        ; code=236, hex=0xEC, ascii="!l" 
08e9 00			        defb %00000000 
08ea 00			        defb %00000000 
08eb 28			        defb %00101000 
08ec 54			        defb %01010100 
08ed 54			        defb %01010100 
08ee 28			        defb %00101000 
08ef 00			        defb %00000000 
08f0 00			        defb %00000000 
08f1			 
08f1			        ; code=237, hex=0xED, ascii="!m" 
08f1 00			        defb %00000000 
08f2 10			        defb %00010000 
08f3 38			        defb %00111000 
08f4 54			        defb %01010100 
08f5 54			        defb %01010100 
08f6 38			        defb %00111000 
08f7 10			        defb %00010000 
08f8 00			        defb %00000000 
08f9			 
08f9			        ; code=238, hex=0xEE, ascii="!n" 
08f9 00			        defb %00000000 
08fa 38			        defb %00111000 
08fb 40			        defb %01000000 
08fc 78			        defb %01111000 
08fd 40			        defb %01000000 
08fe 38			        defb %00111000 
08ff 00			        defb %00000000 
0900 00			        defb %00000000 
0901			 
0901			        ; code=239, hex=0xEF, ascii="!o" 
0901 00			        defb %00000000 
0902 30			        defb %00110000 
0903 48			        defb %01001000 
0904 48			        defb %01001000 
0905 48			        defb %01001000 
0906 48			        defb %01001000 
0907 00			        defb %00000000 
0908 00			        defb %00000000 
0909			 
0909			        ; code=240, hex=0xF0, ascii="!p" 
0909 00			        defb %00000000 
090a 78			        defb %01111000 
090b 00			        defb %00000000 
090c 78			        defb %01111000 
090d 00			        defb %00000000 
090e 78			        defb %01111000 
090f 00			        defb %00000000 
0910 00			        defb %00000000 
0911			 
0911			        ; code=241, hex=0xF1, ascii="!q" 
0911 00			        defb %00000000 
0912 10			        defb %00010000 
0913 38			        defb %00111000 
0914 10			        defb %00010000 
0915 00			        defb %00000000 
0916 38			        defb %00111000 
0917 00			        defb %00000000 
0918 00			        defb %00000000 
0919			 
0919			        ; code=242, hex=0xF2, ascii="!r" 
0919 40			        defb %01000000 
091a 30			        defb %00110000 
091b 08			        defb %00001000 
091c 30			        defb %00110000 
091d 40			        defb %01000000 
091e 00			        defb %00000000 
091f 78			        defb %01111000 
0920 00			        defb %00000000 
0921			 
0921			        ; code=243, hex=0xF3, ascii="!s" 
0921 08			        defb %00001000 
0922 30			        defb %00110000 
0923 40			        defb %01000000 
0924 30			        defb %00110000 
0925 08			        defb %00001000 
0926 00			        defb %00000000 
0927 78			        defb %01111000 
0928 00			        defb %00000000 
0929			 
0929			        ; code=244, hex=0xF4, ascii="!t" 
0929 00			        defb %00000000 
092a 08			        defb %00001000 
092b 14			        defb %00010100 
092c 10			        defb %00010000 
092d 10			        defb %00010000 
092e 10			        defb %00010000 
092f 10			        defb %00010000 
0930 10			        defb %00010000 
0931			 
0931			        ; code=245, hex=0xF5, ascii="!u" 
0931 10			        defb %00010000 
0932 10			        defb %00010000 
0933 10			        defb %00010000 
0934 10			        defb %00010000 
0935 10			        defb %00010000 
0936 50			        defb %01010000 
0937 20			        defb %00100000 
0938 00			        defb %00000000 
0939			 
0939			        ; code=246, hex=0xF6, ascii="!v" 
0939 00			        defb %00000000 
093a 10			        defb %00010000 
093b 00			        defb %00000000 
093c 7c			        defb %01111100 
093d 00			        defb %00000000 
093e 10			        defb %00010000 
093f 00			        defb %00000000 
0940 00			        defb %00000000 
0941			 
0941			        ; code=247, hex=0xF7, ascii="!w" 
0941 00			        defb %00000000 
0942 28			        defb %00101000 
0943 50			        defb %01010000 
0944 00			        defb %00000000 
0945 28			        defb %00101000 
0946 50			        defb %01010000 
0947 00			        defb %00000000 
0948 00			        defb %00000000 
0949			 
0949			        ; code=248, hex=0xF8, ascii="!x" 
0949 30			        defb %00110000 
094a 48			        defb %01001000 
094b 48			        defb %01001000 
094c 30			        defb %00110000 
094d 00			        defb %00000000 
094e 00			        defb %00000000 
094f 00			        defb %00000000 
0950 00			        defb %00000000 
0951			 
0951			        ; code=249, hex=0xF9, ascii="!y" 
0951 00			        defb %00000000 
0952 00			        defb %00000000 
0953 00			        defb %00000000 
0954 30			        defb %00110000 
0955 30			        defb %00110000 
0956 00			        defb %00000000 
0957 00			        defb %00000000 
0958 00			        defb %00000000 
0959			 
0959			        ; code=250, hex=0xFA, ascii="!z" 
0959 00			        defb %00000000 
095a 00			        defb %00000000 
095b 00			        defb %00000000 
095c 20			        defb %00100000 
095d 00			        defb %00000000 
095e 00			        defb %00000000 
095f 00			        defb %00000000 
0960 00			        defb %00000000 
0961			 
0961			        ; code=251, hex=0xFB, ascii="!{" 
0961 00			        defb %00000000 
0962 1c			        defb %00011100 
0963 10			        defb %00010000 
0964 10			        defb %00010000 
0965 50			        defb %01010000 
0966 50			        defb %01010000 
0967 20			        defb %00100000 
0968 00			        defb %00000000 
0969			 
0969			        ; code=252, hex=0xFC, ascii="!|" 
0969 50			        defb %01010000 
096a 28			        defb %00101000 
096b 28			        defb %00101000 
096c 28			        defb %00101000 
096d 00			        defb %00000000 
096e 00			        defb %00000000 
096f 00			        defb %00000000 
0970 00			        defb %00000000 
0971			 
0971			        ; code=253, hex=0xFD, ascii="!}" 
0971 60			        defb %01100000 
0972 10			        defb %00010000 
0973 20			        defb %00100000 
0974 70			        defb %01110000 
0975 00			        defb %00000000 
0976 00			        defb %00000000 
0977 00			        defb %00000000 
0978 00			        defb %00000000 
0979			 
0979			        ; code=254, hex=0xFE, ascii="!~" 
0979 00			        defb %00000000 
097a 00			        defb %00000000 
097b 78			        defb %01111000 
097c 78			        defb %01111000 
097d 78			        defb %01111000 
097e 78			        defb %01111000 
097f 00			        defb %00000000 
0980 00			        defb %00000000 
0981			 
0981			        ; code=255, hex=0xFF, ascii="!^" 
0981 00			        defb %00000000 
0982 00			        defb %00000000 
0983 00			        defb %00000000 
0984 00			        defb %00000000 
0985 00			        defb %00000000 
0986 00			        defb %00000000 
0987 00			        defb %00000000 
0988 00			        defb %000000
# End of file TmsFont.asm
0989			TmsFontLen:     equ $-TmsFont 
0989			 
0989			        include "tms.asm"                       ; TMS graphics routines 
0989			; TMS9918A graphics subroutines 
0989			; Copyright 2018-2020 J.B. Langston 
0989			; 
0989			; Permission is hereby granted, free of charge, to any person obtaining a  
0989			; copy of this software and associated documentation files (the "Software"),  
0989			; to deal in the Software without restriction, including without limitation  
0989			; the rights to use, copy, modify, merge, publish, distribute, sublicense,  
0989			; and/or sell copies of the Software, and to permit persons to whom the  
0989			; Software is furnished to do so, subject to the following conditions: 
0989			;  
0989			; The above copyright notice and this permission notice shall be included in 
0989			; all copies or substantial portions of the Software. 
0989			;  
0989			; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
0989			; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  
0989			; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
0989			; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER  
0989			; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING  
0989			; FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER  
0989			; DEALINGS IN THE SOFTWARE. 
0989			 
0989			; VDP Programmer's Guide: http://map.grauw.nl/resources/video/ti-vdp-programmers-guide.pdf 
0989			 
0989			; --------------------------------------------------------------------------- 
0989			; configuration parameters; can be changed at runtime 
0989			TmsPort: 
0989 a0			        defb    0xa0            ; port for TMS vram (reg is 1 higher) 
098a			TmsWait: 
098a 1f			        defb    31              ; iterations to wait after ram access 
098b			TmsMode: 
098b 00 00		        defw    0               ; mode registers 
098d			TmsNameAddr: 
098d 00 38		        defw    3800h           ; name table address (multiples of 400H) 
098f			TmsColorAddr: 
098f 00 20		        defw    2000h           ; color table address (multiples of 40H) 
0991			TmsPatternAddr: 
0991 00 00		        defw    0               ; pattern table (multiples of 800H) 
0993			TmsSpritePatternAddr: 
0993 00 18		        defw    1800h           ; sprite attribute table (multiples of 80H) 
0995			TmsSpriteAttrAddr: 
0995 c0 3b		        defw    3bc0h           ; sprite pattern table (multiples of 800H) 
0997			TmsScreenColors: 
0997 00			        defb    0               ; background (low nybble), text color (high nybble) 
0998			; --------------------------------------------------------------------------- 
0998			; register constants 
0998			 
0998			TmsWriteBit:            equ 40h                 ; bit to indicate memory write 
0998			 
0998			; Registers 
0998			TmsCtrl0Reg:            equ 80h 
0998			TmsCtrl1Reg:            equ 81h 
0998			TmsNameReg:             equ 82h 
0998			TmsColorTableReg:       equ 83h 
0998			TmsPatternReg:          equ 84h 
0998			TmsSpriteAttrReg:       equ 85h 
0998			TmsSpritePatternReg:    equ 86h 
0998			TmsColorReg:            equ 87h 
0998			 
0998			; Control Register Bits 
0998			TmsM3:                  equ 200h 
0998			TmsExtVideo:            equ 100h 
0998			Tms16k:                 equ 80h 
0998			TmsDisplayEnable:       equ 40h 
0998			TmsIntEnableBit:        equ 20h 
0998			TmsM1:                  equ 10h 
0998			TmsM2:                  equ 8 
0998			TmsSprite32:            equ 2 
0998			TmsSpriteMag:           equ 1 
0998			 
0998			; --------------------------------------------------------------------------- 
0998			; table lengths 
0998			 
0998			TmsTileNameLen:         equ 300h 
0998			TmsTextNameLen:         equ 3c0h 
0998			 
0998			TmsTileColorLen:        equ 20h 
0998			TmsBitmapColorLen:      equ 800h 
0998			 
0998			TmsTilePatternLen:      equ 800h 
0998			TmsTextPatternLen:      equ 800h 
0998			TmsMulticolorPatternLen: equ 600h 
0998			TmsBitmapPatternLen:    equ 1800h 
0998			 
0998			; --------------------------------------------------------------------------- 
0998			; color constants 
0998			 
0998			TmsTransparent:         equ 0 
0998			TmsBlack:               equ 1 
0998			TmsMediumGreen:         equ 2 
0998			TmsLightGreen:          equ 3 
0998			TmsDarkBlue:            equ 4 
0998			TmsLightBlue:           equ 5 
0998			TmsDarkRed:             equ 6 
0998			TmsCyan:                equ 7 
0998			TmsMediumRed:           equ 8 
0998			TmsLightRed:            equ 9 
0998			TmsDarkYellow:          equ 0ah 
0998			TmsLightYellow:         equ 0bh 
0998			TmsDarkGreen:           equ 0ch 
0998			TmsMagenta:             equ 0dh 
0998			TmsGray:                equ 0eh 
0998			TmsWhite:               equ 0fh 
0998			 
0998			; --------------------------------------------------------------------------- 
0998			; port I/O routines 
0998			 
0998			; These routines access the ports configured in TmsPort. 
0998			 
0998			; These memory locations can be set at runtime to support different hardware 
0998			; configurations from the same binary. TmsProbe automatically detects the 
0998			; TMS9918A on common ports. 
0998			 
0998			; The TMS9918A RAM must not be accessed more than once every 8 us or display  
0998			; corruption may occur.  During vblank and with the display disabled,  
0998			; accesses can be 2 us apart, but we will always use 8 us minimum delay. 
0998			 
0998			; TmsRamIn/TmsRamOut include a configurable delay loop, which waits for the 
0998			; configured iterations between VRAM writes to work properly with faster CPUs 
0998			 
0998			; Minimum time to execute each procedure call: 
0998			; Z80: 88 cycles, 8.8 us @ 10 MHz 
0998			; Z180: 80 cycles, 8.64 us @ 9.216 MHz, 4.32 us @ 18.432, 2.16 us @ 36.864 
0998			; 
0998			; Additional delay per djnz iteration: 
0998			; Z80: 8 cycles * (iterations - 1) 
0998			;       0.8 us @ 10 MHz 
0998			; Z180: 7 cycles * (iterations - 1) 
0998			;       0.756 us @ 9.216 MHz, 0.378 us @ 18.432, 0.189 us @ 36.864 
0998			 
0998			; Delay loop iterations required for different CPU speeds: 
0998			; Z80 @ 10 MHz or less: 1 
0998			; Z180 @ 9.216 MHz or less: 1 
0998			; Z180 @ 18.432 MHz: 10 
0998			; Z180 @ 36.864 MHz: 31 
0998 01 0a 1f		TmsWaits:       defb 1, 10, 31          ; wait iterations to add for different CPU speeds 
099b			 
099b			; set up wait time based on clock multiplier in E 
099b			TmsSetWait: 
099b 21 98 09		        ld      hl, TmsWaits 
099e 16 00		        ld      d, 0 
09a0 19			        add     hl, de 
09a1 7e			        ld      a, (hl) 
09a2 32 8a 09		        ld      (TmsWait), a 
09a5 c9			        ret 
09a6			 
09a6			; try to find TMS9918A on common ports 
09a6			TmsProbe: 
09a6 21 ca 09		        ld      hl, TmsPorts 
09a9 06 02		        ld      b, TmsNumPorts 
09ab			TmsProbeNext:        
09ab 7e			        ld      a, (hl) 
09ac 32 89 09		        ld      (TmsPort), a 
09af cd da 09		        call    TmsRegIn                ; clear vsync bit 
09b2 cd da 09		        call    TmsRegIn                ; check it again 
09b5 fa c5 09		        jp      m, TmsProbeFailed       ; if still set, not a TMS9918A 
09b8 11 ff ff		        ld      de, 0ffffh              ; long enough for another vsync 
09bb			TmsProbeWait: 
09bb cd da 09		        call    TmsRegIn                ; check vsync bit again 
09be f8			        ret     m                       ; if set, it's a TMS9918A (and Z is clear) 
09bf 1b			        dec     de                      ; otherwise, keep waiting 
09c0 7b			        ld      a, e 
09c1 b2			        or      d 
09c2 c2 bb 09		        jp      nz, TmsProbeWait 
09c5			TmsProbeFailed: 
09c5 23			        inc     hl                      ; if still clear after this long, try next port 
09c6 10 e3		        djnz    TmsProbeNext 
09c8 af			        xor     a                       ; set Z if we ran out of ports to check 
09c9 c9			        ret 
09ca			 
09ca			TmsPorts:                               ; List of ports to probe: 
09ca a0			        defb 0xa0                       ; Nabu 
09cb 80			        defb 0x80                       ; Z80-Retro 
09cc			        ; add additional ports to check here 
09cc			TmsNumPorts:    equ $ - TmsPorts 
09cc			 
09cc			; set a single register value 
09cc			;       A = register value 
09cc			;       E = register to set 
09cc			TmsSetReg: 
09cc cd d0 09		        call    TmsRegOut 
09cf 7b			        ld      a, e 
09d0			        ; fallthrough to TmsRegOut 
09d0			 
09d0			; write to configured register port 
09d0			; parameters: 
09d0			;       A = value to write 
09d0			TmsRegOut: 
09d0 c5			        push    bc 
09d1 ed 4b 89 09	        ld      bc, (TmsPort) 
09d5 0c			        inc     c 
09d6 ed 79		        out     (c), a 
09d8 c1			        pop     bc 
09d9 c9			        ret 
09da			 
09da			; read from configured register port 
09da			; returns: 
09da			;       A = value read 
09da			TmsRegIn: 
09da c5			        push    bc 
09db ed 4b 89 09	        ld      bc, (TmsPort) 
09df 0c			        inc     c 
09e0 ed 78		        in      a, (c) 
09e2 c1			        pop     bc 
09e3 c9			        ret 
09e4			 
09e4			; write to configured VRAM port 
09e4			; parameters: 
09e4			;       A = value to write 
09e4			                                        ; Z80 | Z180 cycles... 
09e4			TmsRamOut:                              ; 17  | 16 (call) 
09e4 c5			        push    bc                      ; 11  | 11 
09e5 ed 4b 89 09	        ld      bc, (TmsPort)           ; 20  | 18 
09e9 ed 79		        out     (c), a                  ; 12  | 10 
09eb			TmsRamOutDelay: 
09eb 10 fe		        djnz    TmsRamOutDelay          ; 8   | 7  plus (13 | 9) * (iterations-1) 
09ed c1			        pop     bc                      ; 10  | 9 
09ee c9			        ret                             ; 10  | 9 
09ef			 
09ef			; read from configured VRAM port 
09ef			; returns: 
09ef			;       A = value read 
09ef			TmsRamIn: 
09ef c5			        push    bc 
09f0 ed 4b 89 09	        ld      bc, (TmsPort) 
09f4			TmsRamInDelay: 
09f4 10 fe		        djnz    TmsRamInDelay 
09f6 ed 78		        in      a, (c) 
09f8 ed 4b 89 09	        ld      bc, (TmsPort) 
09fc			TmsRamInDelay2: 
09fc 10 fe		        djnz    TmsRamInDelay2 
09fe c1			        pop     bc 
09ff c9			        ret 
0a00			 
0a00			; --------------------------------------------------------------------------- 
0a00			; register configuration routines 
0a00			 
0a00			; set the background color 
0a00			;       A = requested color 
0a00			TmsBackground: 
0a00 e6 0f		        and     0fh 
0a02 47			        ld      b, a 
0a03 3a 97 09		        ld      a, (TmsScreenColors) 
0a06 e6 f0		        and     0f0h 
0a08 b0			        or      b 
0a09 32 97 09		        ld      (TmsScreenColors), a 
0a0c 1e 87		        ld      e, TmsColorReg 
0a0e c3 cc 09		        jp      TmsSetReg 
0a11			 
0a11			; set the sprite configuration 
0a11			;       A = sprite options 
0a11			TmsSpriteConfig: 
0a11 e6 03		        and     TmsSprite32|TmsSpriteMag 
0a13 47			        ld      b, a 
0a14 3a 8b 09		        ld      a, (TmsMode) 
0a17 e6 fc		        and     ~(TmsSprite32|TmsSpriteMag) 
0a19 b0			        or      b 
0a1a 32 8b 09		        ld      (TmsMode), a 
0a1d 1e 81		        ld      e, TmsCtrl1Reg 
0a1f c3 cc 09		        jp      TmsSetReg 
0a22			 
0a22			 
0a22			; enable vblank interrupts 
0a22			TmsIntEnable: 
0a22 3a 8b 09		        ld      a, (TmsMode) 
0a25 f6 20		        or      TmsIntEnableBit 
0a27 32 8b 09		        ld      (TmsMode), a 
0a2a 1e 81		        ld      e, TmsCtrl1Reg 
0a2c c3 cc 09		        jp      TmsSetReg 
0a2f			 
0a2f			; disable vblank interrupts 
0a2f			TmsIntDisable: 
0a2f 3a 8b 09		        ld      a, (TmsMode) 
0a32 e6 df		        and     ~TmsIntEnableBit 
0a34 32 8b 09		        ld      (TmsMode), a 
0a37 1e 81		        ld      e, TmsCtrl1Reg 
0a39 c3 cc 09		        jp      TmsSetReg 
0a3c			 
0a3c			; --------------------------------------------------------------------------- 
0a3c			; initialization routines 
0a3c			 
0a3c			TmsBlankFlags:          equ     Tms16k 
0a3c			TmsTileFlags:           equ     Tms16k | TmsDisplayEnable 
0a3c			TmsTextFlags:           equ     Tms16k | TmsDisplayEnable | TmsM1 
0a3c			TmsMulticolorFlags:     equ     Tms16k | TmsDisplayEnable | TmsM2 
0a3c			TmsBitmapFlags:         equ     Tms16k | TmsDisplayEnable | TmsM3 
0a3c			 
0a3c			; reset registers and clear all 16KB of video memory 
0a3c			TmsReset: 
0a3c 21 80 00		        ld      hl, TmsBlankFlags       ; blank the screen with 16KB enabled 
0a3f 22 8b 09		        ld      (TmsMode), hl 
0a42 7d			        ld      a, l 
0a43 1e 81		        ld      e, TmsCtrl1Reg 
0a45 cd cc 09		        call    TmsSetReg 
0a48 7c			        ld      a, h 
0a49 1e 80		        ld      e, TmsCtrl0Reg 
0a4b cd cc 09		        call    TmsSetReg 
0a4e 3e 00		        ld      a, TmsTransparent 
0a50 cd 00 0a		        call    TmsBackground 
0a53 3e 00		        ld      a, TmsTransparent 
0a55 cd b1 0b		        call    TmsTextColor 
0a58 11 00 00		        ld      de, 0                   ; clear entire VRAM 
0a5b 01 00 40		        ld      bc, 4000h 
0a5e 3e 00		        ld      a, 0 
0a60 cd a2 0b		        call    TmsFill 
0a63 c9			        ret 
0a64			 
0a64			; initialize for multicolor mode  
0a64			TmsMulticolor: 
0a64 cd 3c 0a		        call    TmsReset 
0a67 ed 5b 8d 09	        ld      de, (TmsNameAddr) 
0a6b cd 7b 0b		        call    TmsWriteAddr 
0a6e 16 06		        ld      d, 6                    ; name table has 6 sections 
0a70 1e 00		        ld      e, 0                    ; lines in first section start at 0 
0a72			TmsSectionLoop: 
0a72 0e 04		        ld      c, 4                    ; each section has 4 identical lines 
0a74			TmsLineLoop: 
0a74 06 20		        ld      b, 32                   ; each line is 32 bytes long 
0a76 7b			        ld      a, e                    ; same starting value for each line in section 
0a77			TmsByteLoop:  
0a77 cd e4 09		        call    TmsRamOut 
0a7a 3c			        inc     a                       ; byte value 
0a7b 10 fa		        djnz    TmsByteLoop 
0a7d 0d			        dec     c                       ; line counter 
0a7e c2 74 0a		        jp      nz, TmsLineLoop 
0a81 5f			        ld      e, a                    ; next starting value = current + 32 
0a82 15			        dec     d                       ; section counter 
0a83 c2 72 0a		        jp      nz, TmsSectionLoop 
0a86 21 c8 00		        ld      hl, TmsMulticolorFlags 
0a89 22 8b 09		        ld      (TmsMode), hl 
0a8c c3 b0 0a		        jp      TmsInitNonBitmap 
0a8f			 
0a8f			; initialize for tiled graphics 
0a8f			TmsTile: 
0a8f cd 3c 0a		        call    TmsReset 
0a92 21 c0 00		        ld      hl, TmsTileFlags 
0a95 22 8b 09		        ld      (TmsMode), hl 
0a98 c3 b0 0a		        jp      TmsInitNonBitmap 
0a9b			 
0a9b			; initialize for text mode 
0a9b			;       HL = address of font to load 
0a9b			TmsTextMode: 
0a9b e5			        push    hl 
0a9c cd 3c 0a		        call    TmsReset 
0a9f e1			        pop     hl 
0aa0 ed 5b 91 09	        ld      de, (TmsPatternAddr)    ; load font from address in hl 
0aa4 01 00 08		        ld      bc, TmsTextPatternLen 
0aa7 cd 93 0b		        call    TmsWrite 
0aaa 21 d0 00		        ld      hl, TmsTextFlags 
0aad 22 8b 09		        ld      (TmsMode), hl 
0ab0			        ; fallthrough to TmsInitNonBitmap 
0ab0			 
0ab0			; non-bitmap color and pattern table configuration 
0ab0			TmsInitNonBitmap: 
0ab0			        ; set up color table address (register = address / 400H) 
0ab0 3a 8f 09		        ld      a, (TmsColorAddr) 
0ab3 e6 c0		        and     0c0h 
0ab5 32 8f 09		        ld      (TmsColorAddr), a 
0ab8 57			        ld      d, a 
0ab9 3a 90 09		        ld      a, (TmsColorAddr+1) 
0abc e6 3f		        and     3fh 
0abe 32 90 09		        ld      (TmsColorAddr+1), a 
0ac1 cb 12		        rl      d 
0ac3 17			        rla 
0ac4 cb 12		        rl      d 
0ac6 17			        rla 
0ac7 1e 83		        ld      e, TmsColorTableReg 
0ac9 cd cc 09		        call    TmsSetReg 
0acc			 
0acc			        ; set up pattern table address (register = address / 800H) 
0acc af			        xor     a 
0acd 32 91 09		        ld      (TmsPatternAddr), a 
0ad0 3a 92 09		        ld      a, (TmsPatternAddr+1)  
0ad3 e6 38		        and     38h 
0ad5 32 92 09		        ld      (TmsPatternAddr+1), a 
0ad8 0f			        rrca 
0ad9 0f			        rrca 
0ada 0f			        rrca 
0adb 1e 84		        ld      e, TmsPatternReg 
0add cd cc 09		        call    TmsSetReg 
0ae0 c3 2e 0b		        jp      TmsInitCommon 
0ae3			 
0ae3			; initialize for bitmapped graphics 
0ae3			TmsBitmap: 
0ae3 cd 3c 0a		        call    TmsReset 
0ae6 ed 5b 8d 09	        ld      de, (TmsNameAddr)       ; initialize name table with 3 sets 
0aea cd 7b 0b		        call    TmsWriteAddr            ; of 256 bytes ranging from 00-FF 
0aed 06 03		        ld      b, 3 
0aef af			        xor     a 
0af0			TmsBitmapLoop: 
0af0 cd e4 09		        call    TmsRamOut 
0af3 3c			        inc     a 
0af4 c2 f0 0a		        jp      nz, TmsBitmapLoop 
0af7 10 f7		        djnz    TmsBitmapLoop 
0af9 21 c0 02		        ld      hl, TmsBitmapFlags 
0afc 22 8b 09		        ld      (TmsMode), hl 
0aff			 
0aff			        ; set up color table at 0H (register = 7FH) or 2000H (register = 0FFH) 
0aff af			        xor     a 
0b00 32 8f 09		        ld      (TmsColorAddr), a 
0b03 32 91 09		        ld      (TmsPatternAddr), a 
0b06 3a 90 09		        ld      a, (TmsColorAddr+1) 
0b09 e6 20		        and     20h 
0b0b 32 90 09		        ld      (TmsColorAddr+1), a 
0b0e 3e ff		        ld      a, 0ffh                 ; color table at 2000H 
0b10 c2 15 0b		        jp      nz, TmsColorTableHigh 
0b13 3e 7f		        ld      a, 7fh                  ; color table at 0H 
0b15			TmsColorTableHigh: 
0b15 1e 83		        ld      e, TmsColorTableReg 
0b17 cd cc 09		        call    TmsSetReg 
0b1a			 
0b1a			        ; set up pattern table at 0H (register = 3) or 2000H (register = 7) 
0b1a 3a 92 09		        ld      a, (TmsPatternAddr+1) 
0b1d e6 20		        and     20h 
0b1f 32 92 09		        ld      (TmsPatternAddr+1), a 
0b22 3e 07		        ld      a, 7                    ; pattern table at 2000H 
0b24 c2 29 0b		        jp      nz, TmsPatternTableHigh 
0b27 3e 03		        ld      a, 3                    ; pattern table at 0H 
0b29			TmsPatternTableHigh: 
0b29 1e 84		        ld      e, TmsPatternReg 
0b2b cd cc 09		        call    TmsSetReg 
0b2e			        ; fall through to TmsInitCommon 
0b2e			 
0b2e			 
0b2e			; common initialization for all modes 
0b2e			TmsInitCommon: 
0b2e			        ; set up name table address (register = address / 400H) 
0b2e af			        xor     a 
0b2f 32 8d 09		        ld      (TmsNameAddr), a 
0b32 3a 8e 09		        ld      a, (TmsNameAddr+1) 
0b35 e6 3c		        and     3ch 
0b37 32 8e 09		        ld      (TmsNameAddr+1), a 
0b3a 0f			        rrca 
0b3b 0f			        rrca 
0b3c 1e 82		        ld      e, TmsNameReg 
0b3e cd cc 09		        call    TmsSetReg 
0b41			 
0b41			        ; set up sprite pattern table address (register = address / 80H) 
0b41 3a 95 09		        ld      a, (TmsSpriteAttrAddr) 
0b44 e6 80		        and     80h 
0b46 32 95 09		        ld      (TmsSpriteAttrAddr), a 
0b49 57			        ld      d, a 
0b4a 3a 96 09		        ld      a, (TmsSpriteAttrAddr+1) 
0b4d e6 7f		        and     7fh 
0b4f cb 12		        rl      d 
0b51 17			        rla 
0b52 1e 85		        ld      e, TmsSpriteAttrReg 
0b54 cd cc 09		        call    TmsSetReg 
0b57			 
0b57			        ; set up sprite attribute table address (register = address / 800H) 
0b57 af			        xor     a                        
0b58 32 93 09		        ld      (TmsSpritePatternAddr), a 
0b5b 3a 94 09		        ld      a, (TmsSpritePatternAddr+1) 
0b5e e6 38		        and     38h 
0b60 32 94 09		        ld      (TmsSpritePatternAddr+1), a 
0b63 0f			        rrca 
0b64 0f			        rrca 
0b65 0f			        rrca 
0b66 1e 86		        ld      e, TmsSpritePatternReg 
0b68 cd cc 09		        call    TmsSetReg 
0b6b			 
0b6b			        ; set up control registers 
0b6b 1e 81		        ld      e, TmsCtrl1Reg 
0b6d 3a 8b 09		        ld      a, (TmsMode) 
0b70 cd cc 09		        call    TmsSetReg 
0b73 3a 8c 09		        ld      a, (TmsMode+1) 
0b76 1e 80		        ld      e, TmsCtrl0Reg 
0b78 c3 cc 09		        jp      TmsSetReg 
0b7b			 
0b7b			; --------------------------------------------------------------------------- 
0b7b			; memory access routines 
0b7b			 
0b7b			; set the next address of vram to write 
0b7b			;       DE = address 
0b7b			TmsWriteAddr: 
0b7b 7b			        ld      a, e                    ; send lsb 
0b7c cd d0 09		        call    TmsRegOut 
0b7f 7a			        ld      a, d                    ; mask off msb to max of 16KB 
0b80 e6 3f		        and     3fh 
0b82 f6 40		        or      TmsWriteBit             ; indicate that this is a write 
0b84 cd d0 09		        call    TmsRegOut 
0b87 c9			        ret 
0b88			 
0b88			; set the next address of vram to read 
0b88			;       DE = address 
0b88			TmsReadAddr: 
0b88 7b			        ld      a, e                    ; send lsb 
0b89 cd d0 09		        call    TmsRegOut 
0b8c 7a			        ld      a, d                    ; mask off msb to max of 16KB 
0b8d e6 3f		        and     3Fh 
0b8f cd d0 09		        call    TmsRegOut 
0b92 c9			        ret 
0b93			 
0b93			; copy bytes from ram to vram 
0b93			;       HL = ram source address 
0b93			;       DE = vram destination address 
0b93			;       BC = byte count 
0b93			TmsWrite: 
0b93 cd 7b 0b		        call    TmsWriteAddr 
0b96			TmsWriteLoop: 
0b96 7e			        ld      a, (hl) 
0b97 cd e4 09		        call    TmsRamOut 
0b9a 23			        inc     hl 
0b9b 0b			        dec     bc 
0b9c 78			        ld      a, b 
0b9d b1			        or      c 
0b9e c2 96 0b		        jp      nz, TmsWriteLoop 
0ba1 c9			        ret 
0ba2			 
0ba2			; fill a section of memory with a single value 
0ba2			;       A = value to fill 
0ba2			;       DE = vram destination address 
0ba2			;       BC = byte count 
0ba2			TmsFill: 
0ba2 f5			        push    af 
0ba3 cd 7b 0b		        call    TmsWriteAddr 
0ba6 f1			        pop     af 
0ba7			TmsFillLoop: 
0ba7 cd e4 09		        call    TmsRamOut 
0baa 0d			        dec     c 
0bab c2 a7 0b		        jp      nz, TmsFillLoop 
0bae 10 f7		        djnz    TmsFillLoop 
0bb0 c9			        ret 
0bb1			 
0bb1			; --------------------------------------------------------------------------- 
0bb1			; text routines 
0bb1			; set text color 
0bb1			;       A = requested color 
0bb1			TmsTextColor: 
0bb1 87			        add     a, a                    ; text color into high nybble 
0bb2 87			        add     a, a 
0bb3 87			        add     a, a 
0bb4 87			        add     a, a 
0bb5 47			        ld      b, a                    ; save for later 
0bb6 3a 97 09		        ld      a, (TmsScreenColors)    ; get current colors 
0bb9 e6 0f		        and     0fh                     ; mask off old text color 
0bbb b0			        or      b                       ; set new text color 
0bbc 32 97 09		        ld      (TmsScreenColors), a 
0bbf 1e 87		        ld      e, TmsColorReg 
0bc1 c3 cc 09		        jp      TmsSetReg               ; save it back 
0bc4			 
0bc4			; set the address to place text at X/Y coordinate 
0bc4			;       A = X 
0bc4			;       E = Y 
0bc4			TmsTextPos: 
0bc4 16 00		        ld      d, 0 
0bc6 21 00 00		        ld      hl, 0 
0bc9 19			        add     hl, de                  ; Y x 1 
0bca 29			        add     hl, hl                  ; Y x 2 
0bcb 29			        add     hl, hl                  ; Y x 4 
0bcc 19			        add     hl, de                  ; Y x 5 
0bcd 29			        add     hl, hl                  ; Y x 10 
0bce 29			        add     hl, hl                  ; Y x 20 
0bcf 29			        add     hl, hl                  ; Y x 40 
0bd0 5f			        ld      e, a 
0bd1 19			        add     hl, de                  ; add X for final address 
0bd2 ed 5b 8d 09	        ld      de, (TmsNameAddr)       ; add name table base address 
0bd6 19			        add     hl, de 
0bd7 eb			        ex      de, hl 
0bd8 c3 7b 0b		        jp      TmsWriteAddr 
0bdb			 
0bdb			; set the address to place a tile at X/Y coordinate 
0bdb			;       A = X 
0bdb			;       E = Y 
0bdb			TmsTilePos: 
0bdb 16 00		        ld      d, 0 
0bdd 21 00 00		        ld      hl, 0 
0be0 19			        add     hl, de                  ; Y x 1 
0be1 29			        add     hl, hl                  ; Y x 2 
0be2 29			        add     hl, hl                  ; Y x 4 
0be3 29			        add     hl, hl                  ; Y x 8 
0be4 29			        add     hl, hl                  ; Y x 16 
0be5 29			        add     hl, hl                  ; Y x 32 
0be6 5f			        ld      e, a 
0be7 19			        add     hl, de                  ; add X for final address 
0be8 ed 5b 8d 09	        ld      de, (TmsNameAddr)       ; add name table base address 
0bec 19			        add     hl, de 
0bed eb			        ex      de, hl 
0bee c3 7b 0b		        jp      TmsWriteAddr  
0bf1			 
0bf1			; set the address to place a tile at X/Y coordinate into the framebuffer 
0bf1			;       A = X 
0bf1			;       E = Y 
0bf1			;       C = Char 
0bf1			TmsCharAtLocationBuffer: 
0bf1 16 00		        ld      d, 0 
0bf3 21 00 00		        ld      hl, 0 
0bf6 cb 23		        sla     e 
0bf8 cb 23		        sla     e 
0bfa cb 23		        sla     e 
0bfc cb 23		        sla     e 
0bfe cb 23		        sla     e 
0c00 6b			        ld      l,e 
0c01 5f			        ld      e, a 
0c02 19			        add     hl, de                  ; add X for final address 
0c03 11 7f 0c		        ld      de, FrameBuf            ; add name table base address 
0c06 19			        add     hl, de                  ; HL is the address inside the frame buffer 
0c07 71			        ld      (hl),c                  ; store the char into the buffer at the address pointed to by HL. 
0c08 c9			        ret 
0c09			 
0c09			; Flush the framebuffer to the screen by doing a copy. 
0c09			TmsFlushFrameBuffer: 
0c09 21 7f 0c		        ld      hl,FrameBuf 
0c0c ed 5b 8d 09	        ld      de,(TmsNameAddr) 
0c10 01 00 03		        ld      bc,0x300 
0c13 c3 93 0b		        jp      TmsWrite 
0c16			 
0c16			; copy a null-terminated string to VRAM 
0c16			;       HL = ram source address 
0c16			TmsStrOut: 
0c16 7e			        ld      a, (hl) 
0c17 fe 00		        cp      0                       ; return when NULL is encountered 
0c19 c8			        ret     z 
0c1a cd e4 09		        call    TmsRamOut 
0c1d 23			        inc     hl 
0c1e c3 16 0c		        jp      TmsStrOut 
0c21			 
0c21			; repeat a character a certain number of times 
0c21			;       A = character to output 
0c21			;       B = count 
0c21			TmsRepeat: 
0c21 cd e4 09		        call    TmsRamOut 
0c24 10 fb		        djnz    TmsRepeat 
0c26 c9			        ret 
0c27			 
0c27			; output a character 
0c27			;       A = character to output 
0c27			TmsChrOut:      equ TmsRamOut 
0c27			 
0c27			; --------------------------------------------------------------------------- 
0c27			; bitmap routines 
0c27			 
0c27			TmsClearPixel:  equ 0A02Fh              ; cpl, and b 
0c27			TmsSetPixel:    equ 0B0h                ; nop, or b 
0c27			 
0c27			; set operation for TmsPlotPixel to perform 
0c27			;       HL = pixel operation (TmsClearPixel, TmsSetPixel) 
0c27			TmsPixelOp: 
0c27 22 48 0c		        ld      (TmsPixelOpPlaceHolder), hl 
0c2a c9			        ret 
0c2b			 
0c2b			; set or clear pixel at X, Y position 
0c2b			;       B = Y position 
0c2b			;       C = X position 
0c2b			TmsPlotPixel: 
0c2b 78			        ld      a, b                    ; bail out if Y coord > 191 
0c2c fe c0		        cp      192 
0c2e d0			        ret     nc 
0c2f cd 6e 0c		        call    TmsXYAddr               ; get address in DE for X/Y coord in BC 
0c32 79			        ld      a, c                    ; get lower 3 bits of X coord 
0c33 e6 07		        and     7 
0c35 06 00		        ld      b, 0 
0c37 4f			        ld      c, a 
0c38 21 52 0c		        ld      hl, TmsMaskLookup       ; address of mask in table 
0c3b 09			        add     hl, bc 
0c3c 46			        ld      b, (hl)                 ; save mask in B 
0c3d 2a 91 09		        ld      hl, (TmsPatternAddr)    ; get base address for pattern table 
0c40 19			        add     hl, de 
0c41 eb			        ex      de, hl 
0c42 cd 88 0b		        call    TmsReadAddr             ; set read within pattern table 
0c45 cd ef 09		        call    TmsRamIn 
0c48			TmsPixelOpPlaceHolder: 
0c48 b0			        or      b                       ; mask bit in previous byte 
0c49 00			        nop                             ; place holder for 2 byte mask operation 
0c4a f5			        push    af 
0c4b cd 7b 0b		        call    TmsWriteAddr            ; set write address within pattern table 
0c4e f1			        pop     af 
0c4f c3 e4 09		        jp      TmsRamOut 
0c52			 
0c52			TmsMaskLookup: 
0c52 80 40 20 10 08 04 02 01	        defb 80h, 40h, 20h, 10h, 8h, 4h, 2h, 1h 
0c5a			 
0c5a			; set the color for a block of pixels in bitmap mode 
0c5a			;       B = Y position 
0c5a			;       C = X position 
0c5a			;       A = foreground/background color to set 
0c5a			TmsPixelColor: 
0c5a f5			        push    af 
0c5b 78			        ld      a, b                    ; bail out if Y coord > 191 
0c5c fe c0		        cp      192 
0c5e d0			        ret     nc 
0c5f cd 6e 0c		        call    TmsXYAddr               ; get address in DE for X/Y coord in BC 
0c62 2a 8f 09		        ld      hl, (TmsColorAddr)      ; add the color table base address 
0c65 19			        add     hl, de 
0c66 eb			        ex      de, hl 
0c67 cd 7b 0b		        call    TmsWriteAddr            ; set write address within color table 
0c6a f1			        pop     af 
0c6b c3 e4 09		        jp      TmsRamOut 
0c6e			 
0c6e			; calculate address byte containing X/Y coordinate 
0c6e			;       B = Y position 
0c6e			;       C = X position 
0c6e			;       returns address in DE 
0c6e			TmsXYAddr: 
0c6e 78			        ld      a, b                    ; d = (y / 8) 
0c6f 0f			        rrca 
0c70 0f			        rrca 
0c71 0f			        rrca 
0c72 e6 1f		        and     1fh 
0c74 57			        ld      d, a 
0c75			 
0c75 79			        ld      a, c                    ; e = (x & f8) 
0c76 e6 f8		        and     0f8h 
0c78 5f			        ld      e, a 
0c79			 
0c79 78			        ld      a, b                    ; e += (y & 7) 
0c7a e6 07		        and     7 
0c7c b3			        or      e 
0c7d 5f			        ld      e, a 
0c7e c9			        ret 
0c7f			 
0c7f			FrameBuf: 
0c7f 00...		        defs 0x300                              ; define a 0x300 buffer for the tiles. Defaults to 0
# End of file tms.asm
0f7f			        include "utility.asm" 
0f7f			; BDOS and misc utility routines 
0f7f			; Copyright 2020 J.B. Langston 
0f7f			; 
0f7f			; Permission is hereby granted, free of charge, to any person obtaining a  
0f7f			; copy of this software and associated documentation files (the "Software"),  
0f7f			; to deal in the Software without restriction, including without limitation  
0f7f			; the rights to use, copy, modify, merge, publish, distribute, sublicense,  
0f7f			; and/or sell copies of the Software, and to permit persons to whom the  
0f7f			; Software is furnished to do so, subject to the following conditions: 
0f7f			;  
0f7f			; The above copyright notice and this permission notice shall be included in 
0f7f			; all copies or substantial portions of the Software. 
0f7f			;  
0f7f			; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
0f7f			; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,  
0f7f			; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
0f7f			; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER  
0f7f			; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING  
0f7f			; FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER  
0f7f			; DEALINGS IN THE SOFTWARE. 
0f7f			 
0f7f			cr:	equ     0dh 
0f7f			lf:	equ     0ah 
0f7f			eos:	equ     '$' 
0f7f			bdos:   equ     5 
0f7f			 
0f7f			; Output A in hexidecimal 
0f7f			hexout: 
0f7f f5			        push    af 
0f80 1f			        rra 
0f81 1f			        rra 
0f82 1f			        rra 
0f83 1f			        rra 
0f84 cd 91 0f		        call    nybhex 
0f87 cd a5 0f		        call    chrout 
0f8a f1			        pop     af 
0f8b cd 91 0f		        call    nybhex 
0f8e c3 a5 0f		        jp      chrout 
0f91			 
0f91			; convert lower nybble of A to hex (also in A) 
0f91			; from http://map.grauw.nl/sources/external/z80bits.html#5.1 
0f91			nybhex: 
0f91 f6 f0		        or      0f0h 
0f93 27			        daa 
0f94 c6 a0		        add     a, 0a0h 
0f96 ce 40		        adc     a, 40h 
0f98 c9			        ret 
0f99			 
0f99			space: 
0f99 3e 20		        ld      a, ' ' 
0f9b c3 a5 0f		        jp      chrout 
0f9e			 
0f9e			; output a new line 
0f9e			crlf: 
0f9e 3e 0d		        ld      a, cr 
0fa0 cd a5 0f		        call    chrout 
0fa3 3e 0a		        ld      a, lf 
0fa5			        ; fallthrough 
0fa5			 
0fa5			; output character in A 
0fa5			chrout: 
0fa5 0e 02		        ld      c, 2 
0fa7 5f			        ld      e, a 
0fa8 c3 05 00		        jp      bdos 
0fab			 
0fab			; output $-terminated string pointed to by DE 
0fab			strout: 
0fab 0e 09		        ld      c, 9 
0fad c3 05 00		        jp      bdos 
0fb0			 
0fb0			; check for keypress and clear Z flag if pressed 
0fb0			keypress: 
0fb0 0e 06		        ld      c, 6 
0fb2 1e ff		        ld      e, 0ffh 
0fb4 cd 05 00		        call    bdos 
0fb7 b7			        or      a 
0fb8 c9			        ret 
0fb9			 
0fb9			; blocking keypress, return char 
0fb9			getchar: 
0fb9 cd b0 0f		        call    keypress 
0fbc ca b9 0f		        jp      z,getchar 
0fbf c9			        ret 
# End of file utility.asm
0fc0			 
0fc0			OldSP: 
0fc0 00 00		        defw 0 
0fc2 00...		        defs 64 
1002			Stack:
# End of file modetile.asm
1002
